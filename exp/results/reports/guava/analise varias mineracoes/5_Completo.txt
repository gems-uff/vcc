************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.RangeSet.complement()
com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.RangeSet.complement()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: asMapOfRanges
Nenhuma sugestão fornecida.
**************************
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.get(com.google.common.collect.ImmutableRangeMap$K) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.get(I)
com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.copyOf(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.build() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.get(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$AsMapOfRanges.get(java.lang.Object) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.equals(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$AsMapOfRanges.entrySet() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
java.util.Map.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.Map.remove(java.lang.Object)
java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Map.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.precomputed()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.lang.Character.charValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.indexOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.nio.ByteBuffer.allocate(I)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
com.google.common.base.CharMatcher.matches(C)
java.nio.ByteBuffer.put(B)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
java.nio.Buffer.flip()
com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.nio.ByteBuffer.allocate(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.nio.ByteBuffer.put(B)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.nio.Buffer.flip()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.encode([B, I, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.Character.charValue()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.charValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.comparator() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SortedMultiset.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.createEntrySet() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.entryIterator()
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.getEntry(com.google.common.collect.ImmutableRangeMap$K) ************************
*Commit: commit ba9aa6be61a9de6096a0d571ae9fde97e57d539a 1351282990 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
lowerBoundFn
com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.get(I)
com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit ba9aa6be61a9de6096a0d571ae9fde97e57d539a 1351282990 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.Closer.close() ************************
*Commit: commit b76ffbeab2394774f8e0efc13205b38f63d1513e 1351283053 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
java.util.Deque.pop()
java.io.Closeable.close()
com.google.common.io.Closer$Suppressor.suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
com.google.common.base.Throwables.propagateIfPossible(java.lang.Throwable, java.lang.Class)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Deque.pop()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.io.Closeable.close()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.Closer$Suppressor.suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Throwables.propagateIfPossible(java.lang.Throwable, java.lang.Class)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.span() ************************
*Commit: commit 4dfc92182081e9695d38772ba528faf7fef75ff6 1351548078 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.span() ************************
*Commit: commit 4dfc92182081e9695d38772ba528faf7fef75ff6 1351548078 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.lastEntry()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$Complement.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
com.google.common.collect.Range.all()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Cut.belowAll()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Cut.aboveAll()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.all()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasLowerBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.lastEntry()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.lastEntry()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.isPartialView() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isPartialView()
java.util.List.size()
java.util.List.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.size() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
java.util.Set.size()
com.google.common.primitives.Ints.saturatedCast(J)
java.lang.Integer.intValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.primitives.Ints.saturatedCast(J)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Integer.intValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.iterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.iterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.descendingIterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.reverse()
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.descendingIterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.descendingIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableList.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.hasLowerBound()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.Range.hasUpperBound()
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.size()
com.google.common.collect.ImmutableList.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasLowerBound()
Nenhuma sugestão fornecida.
**************************
Chamada: upperBoundFn
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasUpperBound()
Nenhuma sugestão fornecida.
**************************
Chamada: lowerBoundFn
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.asSet(com.google.common.collect.DiscreteDomain, com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DiscreteDomain)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeSet.isEmpty()
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.DiscreteDomain.maxValue()
com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
java.util.List.size()
com.google.common.collect.ImmutableSortedSet.of()
java.util.List.get(I)
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeSet.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasLowerBound()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasUpperBound()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DiscreteDomain.maxValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.of()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction.hashObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel) ************************
*Commit: commit a4bd0dd6fbcc7cd349ebd7c2ded2f5509f7d2ca6 1352489028 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
com.google.common.hash.Hasher.hash()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.hash.HashFunction.newHasher()
Também chamam:
com.google.common.hash.Hasher.hash()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.Hasher.hash()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
java.util.Collection.isEmpty()
java.util.Map.remove(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.AbstractMultimap(java.util.Map) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSet.removeAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
com.google.common.collect.Sets.removeAllImpl(java.util.Set, java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Sets.removeAllImpl(java.util.Set, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.contains(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.contains(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.last() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.last()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.last()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.hasNext() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.headSet(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.headSet(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.headSet(com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.removeAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.removeAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.add(I, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.add(I, com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(I, com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
java.util.Collection.size()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.containsAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.containsAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.containsAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.remove() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.clear() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.clear()
java.util.Map.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.isEmpty()
java.util.Map.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.iterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
com.google.common.collect.Iterators.checkRemove(Z)
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.checkRemove(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.addAll(I, java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.addAll(I, java.util.Collection)
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.addAll(I, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.toString() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.lang.Object.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.addAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.setMap(java.util.Map) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Collection.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Collection.size()
com.google.common.collect.Collections2.cast(java.lang.Iterable)
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
java.util.Collection.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.cast(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Collections2.cast(java.lang.Iterable)
Também chamam:
java.lang.Iterable.iterator()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Collections2.cast(java.lang.Iterable)
Também chamam:
com.google.common.collect.Iterables.addAll(java.util.Collection, java.lang.Iterable)
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
java.util.Collection.size()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.retainAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.retainAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.4705878162626732
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2352939081313366
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.isEmpty()
java.util.Map.remove(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.set(I, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.set(I, com.google.common.collect.AbstractMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.List.set(I, com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.get(com.google.common.collect.AbstractMultimap$K) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.subList(I, I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.subList(I, I)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap.wrapList(com.google.common.collect.AbstractMultimap$K, java.util.List, com.google.common.collect.AbstractMultimap$WrappedCollection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.subList(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.wrapList(com.google.common.collect.AbstractMultimap$K, java.util.List, com.google.common.collect.AbstractMultimap$WrappedCollection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.indexOf(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.indexOf(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.List.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
com.google.common.collect.Iterators.emptyModifiableIterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.get(I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.size() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6571418685719723
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2608699200475976
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.hashCode() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.first() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.first()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.first()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap.createUnmodifiableEmptyCollection()
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap.createUnmodifiableEmptyCollection()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.hashCode() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.replaceValues(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.remove(I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.remove(I)
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.List.remove(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.lastIndexOf(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.lastIndexOf(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator.remove() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.add(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.isEmpty()
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.contains(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.tailSet(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.tailSet(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.tailSet(com.google.common.collect.AbstractMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6571418685719723
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2608699200475976
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.containsAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.containsAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.containsAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Também chamam:
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Confiança: 0.28000009687998023
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollFirstEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Map$Entry.getValue()
java.util.Collection.addAll(java.util.Collection)
java.util.Iterator.remove()
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6571418685719723
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33333249236187673
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollLastEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$NavigableAsMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableBiMap.of()
com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableBiMap.of()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.get(java.lang.Object) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.ImmutableEntry.getKey()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.precomputed()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.lang.Character.charValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.indexOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: flush
Nenhuma sugestão fornecida.
**************************
Chamada: close
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
encodingStream
write
close
toString
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: stringBuilderOutput
Nenhuma sugestão fornecida.
**************************
Chamada: encodingStream
Nenhuma sugestão fornecida.
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: close
Nenhuma sugestão fornecida.
**************************
Chamada: toString
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
decodingStream
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: decodingStream
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: ignoringInput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
read
com.google.common.base.CharMatcher.matches(C)
close
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matches(C)
Nenhuma sugestão fornecida.
**************************
Chamada: close
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.max(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: flush
Nenhuma sugestão fornecida.
**************************
Chamada: close
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
write
close
toString
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: stringBuilderOutput
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
Nenhuma sugestão fornecida.
**************************
Chamada: write
Nenhuma sugestão fornecida.
**************************
Chamada: close
Nenhuma sugestão fornecida.
**************************
Chamada: toString
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: ignoringInput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
read
com.google.common.base.CharMatcher.matches(C)
close
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matches(C)
Nenhuma sugestão fornecida.
**************************
Chamada: close
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.InputSupplier.getInput()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Também chamam:
com.google.common.io.InputSupplier.getInput()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.io.InputSupplier.getInput()
Também chamam:
com.google.common.io.Closeables.close(java.io.Closeable, Z)
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.max(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asInputStream(com.google.common.io.GwtWorkarounds$ByteInput) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.GwtWorkarounds$ByteInput)
com.google.common.io.GwtWorkarounds$ByteInput.read()
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$ByteInput.close()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.read()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.GwtWorkarounds$3.read()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.GwtWorkarounds$3.read()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.close()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.base.CharMatcher$RangesMatcher.RangesMatcher(java.lang.String, [C, [C) ************************
*Commit: commit fd40e3a91e6ef695a5d9db92a386842354b7cfca 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.base.CharMatcher$RangesMatcher.RangesMatcher(java.lang.String, [C, [C) ************************
*Commit: commit fd40e3a91e6ef695a5d9db92a386842354b7cfca 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.Maps.filterSortedIgnoreNavigable(java.util.SortedMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps.filterEntries(java.util.NavigableMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps.filterSortedIgnoreNavigable(java.util.SortedMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollLastEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.NavigableMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.descendingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.createKeySet() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6666680122230341
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6571418685719723
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6666680122230341
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.io.ByteSource$SlicedByteSource.SlicedByteSource(J, J) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.io.ByteSource.countBySkipping(java.io.InputStream) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.InputStream.available()
java.lang.Math.min(I, I)
java.io.InputStream.skip(J)
java.io.InputStream.read()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.InputStream.skip(J)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.io.InputStream.read()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.ByteSource$SlicedByteSource.slice(J, J) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Math.min(J, J)
com.google.common.io.ByteSource.slice(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: java.lang.Math.min(J, J)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.ByteSource.slice(J, J)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.ByteSource.hash(com.google.common.hash.HashFunction) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
com.google.common.hash.Hasher.hash()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.hash.HashFunction.newHasher()
Também chamam:
com.google.common.hash.Hasher.hash()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.Hasher.hash()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharSink.writeLines(java.lang.Iterable, java.lang.String) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
create
com.google.common.io.CharSink.openBufferedStream()
add
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.append(java.lang.CharSequence)
rethrow
close
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
Também chamam:
java.lang.Iterable.iterator()
Confiança: 0.6399988374402371
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: create
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.CharSink.openBufferedStream()
Nenhuma sugestão fornecida.
**************************
Chamada: add
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.Writer.append(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.Writer.append(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: rethrow
Nenhuma sugestão fornecida.
**************************
Chamada: close
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.lines() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.lang.String.isEmpty()
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.readFirstLine() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.CharStreams$StringCharSource.lines()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.toString() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.substring(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: FileByteSink ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.io.File)
com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.io.File)
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.nio.charset.Charset)
Confiança: 0.42424275785131854
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.io.File)
Também chamam:
com.google.common.io.Files.newInputStreamSupplier(java.io.File)
Confiança: 0.27272643870503704
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Ascii.toLowerCase(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet([C) ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Ascii.toUpperCase(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet([C) ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Ascii.toLowerCase(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Ascii.toUpperCase(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.Object)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.lowestOneBit(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.fill([B, B)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.Object)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.primitives.Longs.tryParse(java.lang.String) ************************
*Commit: commit 4fa056813cc1db3c594f0d0d8560d65c63c81b7d 1353009812 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.isEmpty()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createElementSet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Multiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.count(java.lang.Object) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.base.Predicate.apply(null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.removeAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.removeAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.removeAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.FilteredMultiset(com.google.common.collect.Multiset, com.google.common.base.Predicate) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Também chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Também chamam:
com.google.common.collect.Multiset.entrySet()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.retainAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.retainAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.retainAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.distinctElements() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createEntrySet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.base.Predicate.apply(null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9499978807529987
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.7307701264796912
Suporte: 0.00627581
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.6500003027495717
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.clear() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.clear()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.AbstractMultiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.primitives.UnsignedLong.valueOf(J) ************************
*Commit: commit 6fe6d5c28d561ad6b830d0945769c8e0a1322b57 1354028901 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.primitives.UnsignedLong.fromLongBits(J)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.UnsignedLong.fromLongBits(J)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range) ************************
*Commit: commit 6506c4d1e0237dc5a3c875d2d10c329e902c5523 1354126427 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableRangeMap.of()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.ImmutableRangeMap.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
com.google.common.collect.ImmutableList.subList(I, I)
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.of()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: upperBoundFn
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: lowerBoundFn
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.subList(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
isEmpty
span
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: span
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.get(java.lang.Object) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.equals(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
null.iterator()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: null.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: null.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.List.add(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.span() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.TreeRangeMap$K)
com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps$Keys.entryIterator()
com.google.common.collect.FilteredEntryMultimap.keySet()
java.util.Set.size()
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
com.google.common.base.Predicate.apply(null)
com.google.common.base.Predicates.in(java.util.Collection)
null.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
null.removeIf(com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.FilteredEntryMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: null.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: null.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
get
com.google.common.collect.Lists.newArrayList()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
java.util.List.isEmpty()
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.Collections.unmodifiableSet(java.util.Set)
java.util.Collections.unmodifiableList(java.util.List)
---------------- Chamadas de método adicionadas ---------------
Chamada: get
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.unmodifiableSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.values() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
java.util.Collection.equals(java.lang.Object)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
com.google.common.base.Predicates.in(java.util.Collection)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: valueFunction
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: valueFunction
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.remove(java.lang.Object, I) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
asMap
get
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: asMap
Nenhuma sugestão fornecida.
**************************
Chamada: get
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: entrySet
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: null.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap.createEntries() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.FilteredKeyMultimap.entryIterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
containsEntry
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
remove
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: containsEntry
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: remove
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: keyFunction
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: entries
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: keyFunction
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: entries
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap.get(com.google.common.collect.FilteredKeyMultimap$K) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
get
---------------- Chamadas de método adicionadas ---------------
Chamada: get
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$AddRejectingList.addAll(I, java.util.Collection) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.base.Preconditions.checkPositionIndex(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndex(I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.4705878162626732
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2352939081313366
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startAsync() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap.values()
com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.util.concurrent.Service.state()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.isOccupiedByCurrentThread()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
java.util.Queue.poll()
java.lang.Runnable.run()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Queue.poll()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Runnable.run()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startupTimes() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Map.entrySet()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.util.concurrent.Service.state()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 5
**************************
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.ServiceManager(java.lang.Iterable) ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
java.util.List.size()
com.google.common.collect.ImmutableMap.builder()
com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Service.state()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: asByteSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.InputSupplier.getInput()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Também chamam:
com.google.common.io.InputSupplier.getInput()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: asCharSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.InputSupplier.getInput()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Também chamam:
com.google.common.io.InputSupplier.getInput()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.io.InputSupplier.getInput()
Também chamam:
com.google.common.io.Closeables.close(java.io.Closeable, Z)
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollFirstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9444453788579598
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.lastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.firstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollLastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9444453788579598
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SortedMultiset.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SortedMultiset.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Ascii.toLowerCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toLowerCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Ascii.toLowerCase(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.base.Ascii.toUpperCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toUpperCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Ascii.toUpperCase(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.AbstractNavigableMap$DescendingMap.comparator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractNavigableMap$DescendingMap.delegate()
java.util.SortedMap.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperBoundType()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
java.util.Map.containsKey(java.lang.Object)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.belowAll()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.upperEndpoint()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.hasUpperBound()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.upperBoundType()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.descendingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.emptyIterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.get(java.lang.Object) ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.lowerEndpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.lowerEndpoint()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.lowerBoundType()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowAll()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.aboveAll()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.size() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.all()
com.google.common.collect.Range.equals(java.lang.Object)
java.util.Map.size()
com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.tailMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.firstEntry()
java.util.Map$Entry.getKey()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.firstEntry()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.isEmpty() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.all()
com.google.common.collect.Range.equals(java.lang.Object)
java.util.Map.isEmpty()
com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.Map$Entry.getKey()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.lowerEndpoint()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.lowerEndpoint()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Range.upperEndpoint()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.descendingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 2
**************************
Chamada: java.util.NavigableMap.descendingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet.rangeEnclosing(com.google.common.collect.Range) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Cut.typeAsUpperBound()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.endpoint()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.typeAsUpperBound()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.descendingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.SubRangeSetRangesByLowerBound(com.google.common.collect.Range, com.google.common.collect.Range, java.util.NavigableMap) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Também chamam:
com.google.common.collect.Range.isEmpty()
Confiança: 0.7777807679110853
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
valueOrNull
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map.get(java.lang.Object)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: valueOrNull
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Também chamam:
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.entryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.emptyIterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.endpoint()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Range.lowerBoundType()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.ChecksumHashFunction.ChecksumHashFunction(com.google.common.base.Supplier, I, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.security.MessageDigest.getDigestLength()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, I, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.security.MessageDigest.getDigestLength()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.cache.LocalCache$Segment.insertLoadingValueReference(com.google.common.cache.LocalCache$Segment$K, I, Z) ************************
*Commit: commit 75085833f67d07b9dcc071e0703cb1027e6c0b28 1356041333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
com.google.common.cache.LocalCache$ValueReference.isLoading()
com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
java.util.concurrent.locks.ReentrantLock.unlock()
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Ticker.read()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
Também chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Confiança: 0.9750004162812911
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
Também chamam:
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.length()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Também chamam:
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
Também chamam:
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Também chamam:
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Também chamam:
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Também chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Também chamam:
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ValueReference.isLoading()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Também chamam:
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Também chamam:
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
java.util.concurrent.locks.ReentrantLock.unlock()
Também chamam:
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getRowKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$CellSet.contains(java.lang.Object) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
com.google.common.collect.Table$Cell.getValue()
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.DenseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
java.util.Set.size()
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
java.util.Map.size()
java.util.Map.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Table$Cell.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getRowKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.createValues() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.values()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath.getTopLevelClasses() ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
com.google.common.collect.ImmutableSet$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.builder()
Também chamam:
com.google.common.collect.ImmutableSet$Builder.build()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$ResourceInfo.ResourceInfo(java.lang.String, java.lang.ClassLoader) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath.browse(java.net.URI, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.URI.getScheme()
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
java.util.List.size()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
com.google.common.collect.Collections2.newStringBuilderForCollection(I)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.newStringBuilderForCollection(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.Object)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.Object)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.String.length()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Function.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2.safeRemove(java.util.Collection, java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
java.util.Collection.remove(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.4705878162626732
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.264705201426844
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2352939081313366
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Function.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$NavigableAsMapView.get(java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.contains(java.lang.Object)
com.google.common.base.Function.apply(null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Function.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.UnsignedInteger.valueOf(J) ************************
*Commit: commit 02e459aacc3b534a580cd656b2e5d167b8b45026 1358201095 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.primitives.UnsignedInteger.fromIntBits(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.UnsignedInteger.fromIntBits(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.UnsignedInteger.valueOf(java.math.BigInteger) ************************
*Commit: commit 02e459aacc3b534a580cd656b2e5d167b8b45026 1358201095 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.math.BigInteger)
java.math.BigInteger.signum()
java.math.BigInteger.bitLength()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.math.BigInteger.intValue()
com.google.common.primitives.UnsignedInteger.fromIntBits(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.math.BigInteger.signum()
Nenhuma sugestão fornecida.
**************************
Chamada: java.math.BigInteger.bitLength()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.math.BigInteger.intValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.primitives.UnsignedInteger.fromIntBits(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.asMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.asMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.addAll(java.lang.Iterable) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.ensureCapacity(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.ensureCapacity(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray([Ljava.lang.Object;) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray() ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
---------------- Chamadas de método adicionadas ---------------
Chamada: filterFiltered
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.Multimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multimap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: filterFiltered
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.retainAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.remove(java.lang.Object) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5833345947937008
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.removeAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
---------------- Chamadas de método adicionadas ---------------
Chamada: filterFiltered
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$MapDifferenceImpl.areEqual() ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
java.util.Map.isEmpty()
java.util.Map.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$MapDifferenceImpl.areEqual() ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
java.util.Map.isEmpty()
java.util.Map.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Chamada: java.util.Comparator.compare(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 2
**************************
Chamada: java.util.Comparator.compare(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList.builder()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.builder()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
java.util.Map$Entry.getKey()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
java.util.Map$Entry.getValue()
com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
java.util.Map$Entry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: closedTableSize
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.keyFunction()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.keyFunction()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Platform$SetFromMap.SetFromMap(java.util.Map) ************************
*Commit: commit 1d11559a8d86ee5f7909a293e5063689fb8b0f30 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Map.keySet()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: serialize ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.rowKeySet()
java.util.Set.size()
writeInt
com.google.common.collect.ImmutableTable.rowKeySet()
writeObject
com.google.common.collect.ImmutableTable.row(java.lang.Object)
serialize
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: writeInt
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: writeObject
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable.row(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: serialize
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: populate ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
readObject
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.StandardTable.row(java.lang.Object)
java.util.Map$Entry.getValue()
java.util.Map.putAll(java.util.Map)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.StandardTable.row(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.putAll(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.DenseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
java.util.Set.size()
com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
java.util.Map.size()
java.util.Map.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Table$Cell.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getRowKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.DenseImmutableTable$(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.DenseImmutableTable$(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.get(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$DenseCellSet.createAsList() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.DenseImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.Tables.immutableCell(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.DenseImmutableTable.columnKeySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.get(java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.createEntrySet() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.isFull()
com.google.common.collect.ImmutableMapEntrySet.size()
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
java.util.Map.size()
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMapEntrySet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.row(com.google.common.collect.DenseImmutableTable$R) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$R)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.column(com.google.common.collect.DenseImmutableTable$C) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$C)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.createValues() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.values()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable$SparseCellSet.createAsList() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.row(com.google.common.collect.SparseImmutableTable$R) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$R)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.get(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getRowKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.column(com.google.common.collect.SparseImmutableTable$C) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$C)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.contains(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.util.Map.containsKey(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Hashing.smearedHash(java.lang.Object) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.HashBiMap.hash(java.lang.Object) ************************
*Commit: commit 372a94bfa7992a98698affc08fc523d0b77e1bc3 1359140868 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask.run() ************************
*Commit: commit fc6a72e81f6cbf81de64105105f296f0c84abdd0 1359141012 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Runnable.run()
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
com.google.common.base.Throwables.propagate(java.lang.Throwable)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Throwables.propagate(java.lang.Throwable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Também chamam:
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Também chamam:
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Hashing.smearedHash(java.lang.Object) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTable.row(com.google.common.collect.ImmutableTable$R) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$R)
com.google.common.collect.ImmutableTable.rowMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTable.column(com.google.common.collect.ImmutableTable$C) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$C)
com.google.common.collect.ImmutableTable.columnMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableTable.columnMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Tables.equalsImpl(com.google.common.collect.Table, java.lang.Object) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table.cellSet()
java.util.Set.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table.cellSet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.eventbus.AnnotatedHandlerFinder$MethodIdentifier.equals(java.lang.Object) ************************
*Commit: commit 638fcb8c799c53f55471201a639e001120b19815 1360250346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.util.List.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap$ImmutableMapEntry.getNextInBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
checkNoConflict
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap([Ljava.util.Map$Entry;) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
---------------- Chamadas de método adicionadas ---------------
Chamada: closedTableSize
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap(I, [Lcom.google.common.collect.RegularImmutableMap$TerminalMapEntry;) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
---------------- Chamadas de método adicionadas ---------------
Chamada: closedTableSize
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimap$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 07d29cba7e7efe70525b8ca94641fbc031f56939 1360610821 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimap$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 07d29cba7e7efe70525b8ca94641fbc031f56939 1360610821 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.hasNext() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.next() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.hasNext() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.next() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyOfInternal(com.google.common.collect.Multiset) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.ImmutableMultiset$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;$E, java.lang.Integer)
com.google.common.collect.ImmutableMultiset.of()
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.primitives.Ints.saturatedCast(J)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.32558152633854204
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.3023261053541682
Suporte: 0.00214699
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.ImmutableMultiset$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;$E, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.7307701264796912
Suporte: 0.00627581
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMultiset.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.primitives.Ints.saturatedCast(J)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.32558152633854204
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.7307701264796912
Suporte: 0.00627581
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.857141003572448
Suporte: 0.00198183
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.857141003572448
Suporte: 0.00198183
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.857141003572448
Suporte: 0.00198183
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6842123713311451
Suporte: 0.00214699
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.containsAll(java.util.Collection) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.containsAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.containsAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$SerializedForm.SerializedForm(com.google.common.collect.Multiset) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.iterator() ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9444453788579598
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.equals(java.lang.Object) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
java.util.Collection.size()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9499978807529987
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6923041094741941
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$Builder.addAll(java.lang.Iterable) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.cast(java.lang.Iterable)
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.ImmutableMultiset$Builder.addCopies(com.google.common.collect.ImmutableMultiset$Builder$E, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9499978807529987
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMultiset$Builder.addCopies(com.google.common.collect.ImmutableMultiset$Builder$E, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableList.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
java.util.Arrays.fill([Ljava.lang.Object;, I, I, java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.32558152633854204
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.3023261053541682
Suporte: 0.00214699
Posição da Sugestão: 2
**************************
Chamada: java.util.Arrays.fill([Ljava.lang.Object;, I, I, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.7307701264796912
Suporte: 0.00627581
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.Itr() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.emptyModifiableIterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.next() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.hasNext() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.remove() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.Itr() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.emptyModifiableIterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.next() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.hasNext() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.remove() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Maps.valueIterator(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.valueIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps.transformedEntryIterator(java.util.Iterator, com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit 779fd55bd1de1e9408beca88c773298331cceccd 1360714176 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps.transformedEntryIterator(java.util.Iterator, com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit 779fd55bd1de1e9408beca88c773298331cceccd 1360714176 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$AbstractFilteredMap$Values.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.delegate() ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.FilteredKeyMultimap.entryPredicate()
com.google.common.collect.Collections2.filter(java.util.Collection, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.FilteredKeyMultimap.entryPredicate()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2.filter(java.util.Collection, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$AbstractFilteredMap$Values.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.CycleDetectingLockFactory.getOrCreateNodes(java.lang.Class) ************************
*Commit: commit 1740aac1bae09f0a2b8e7345ddfc90a10a84709b 1361464666 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.util.concurrent.CycleDetectingLockFactory.createNodes(java.lang.Class)
java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Class, java.util.Map)
com.google.common.base.Objects.firstNonNull(java.util.Map, java.util.Map)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.CycleDetectingLockFactory.createNodes(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Class, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Objects.firstNonNull(java.util.Map, java.util.Map)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodeChecked(java.lang.CharSequence) ************************
*Commit: commit 7766079f27aa546315dc59a2742350e136060c7e 1362157030 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.padding()
com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
asCharInput
decodingStream
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: asCharInput
Nenhuma sugestão fornecida.
**************************
Chamada: decodingStream
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodeChecked(java.lang.CharSequence) ************************
*Commit: commit 7766079f27aa546315dc59a2742350e136060c7e 1362157030 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.padding()
com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
asCharInput
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: asCharInput
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: read
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable$SparseValues.get(I) ************************
*Commit: commit ee32a2dd64cce9318cef8b2a0e2c582118a2d236 1362157635 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.values()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps.transformEntry(com.google.common.collect.Maps$EntryTransformer, java.util.Map$Entry) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createKeySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.transformEntry(com.google.common.collect.Maps$EntryTransformer, java.util.Map$Entry) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createKeySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.StandardTable$Column.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
com.google.common.base.Predicate.apply(null)
java.util.Map.remove(java.lang.Object)
java.util.Map.isEmpty()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: cellIterator ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTable.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.ArrayTable.at(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ArrayTable.at(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable.valuesIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractTable.cellSet()
java.util.Set.iterator()
com.google.common.collect.Table$Cell.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable.putAll(com.google.common.collect.Table) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.AbstractTable.put(com.google.common.collect.AbstractTable$R, com.google.common.collect.AbstractTable$C, com.google.common.collect.AbstractTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table$Cell.getRowKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractTable.put(com.google.common.collect.AbstractTable$R, com.google.common.collect.AbstractTable$C, com.google.common.collect.AbstractTable$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable$CellSet.remove(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
java.util.Map.entrySet()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Maps.immutableEntry(null, null)
safeRemove
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(null, null)
Nenhuma sugestão fornecida.
**************************
Chamada: safeRemove
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable.containsValue(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
java.util.Map.values()
java.util.Map.containsValue(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable.clear() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractTable.cellSet()
java.util.Set.iterator()
com.google.common.collect.Iterators.clear(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.clear(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractTable$CellSet.contains(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
java.util.Map.entrySet()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Maps.immutableEntry(null, null)
com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(null, null)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: cellIterator ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTable.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.ArrayTable.at(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ArrayTable.at(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.getCell(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableTable.columnKeySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$CellSet.iterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.getValue(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.values()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.getCell(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: next ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$C, com.google.common.collect.StandardTable$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.2666663975553932
Suporte: 0.00132122
Posição da Sugestão: 4
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$C, com.google.common.collect.StandardTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Tables$TransformedTable.cellIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
java.util.Set.iterator()
com.google.common.collect.Tables$TransformedTable.cellFunction()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Tables$TransformedTable.cellFunction()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Tables$TransposeTable.cellIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
java.util.Set.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Iterables.removeFirstMatching(java.lang.Iterable, com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.remove(java.lang.Object) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.equalTo(java.lang.Object)
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
removeFirstMatching
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: removeFirstMatching
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.createValues() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
java.util.Collection.equals(java.lang.Object)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
com.google.common.base.Predicates.in(java.util.Collection)
valuePredicateOnEntries
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
valuePredicateOnEntries
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: valuePredicateOnEntries
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: valuePredicateOnEntries
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.createEntrySet() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: null.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Iterables.removeFirstMatching(java.lang.Iterable, com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.remove(java.lang.Object) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.equalTo(java.lang.Object)
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
removeFirstMatching
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: removeFirstMatching
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.descendingEntryIterator() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.entryIterator() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilter.mergeWith(com.google.common.hash.BloomFilter) ************************
*Commit: commit a1858510da0d99dfc3e3622741d2134fb22e18c1 1362158216 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
mergeWith
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: mergeWith
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilterStrategies$BitArray.mergeWith(com.google.common.hash.BloomFilterStrategies$BitArray) ************************
*Commit: commit a1858510da0d99dfc3e3622741d2134fb22e18c1 1362158216 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Long.bitCount(J)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Long.bitCount(J)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap$MultisetView.remove(java.lang.Object, I) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.equals(java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.asMap() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.keySet() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap$MultisetView.remove(java.lang.Object, I) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.equals(java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.asMap() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.keySet() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.createEntrySet() ************************
*Commit: commit 1a3a560da39ad9c737af0d22df34ce7e42817546 1362276755 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7083334384547654
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.35294094600370424
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.get(java.lang.Object) ************************
*Commit: commit 1a3a560da39ad9c737af0d22df34ce7e42817546 1362276755 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.06282708073116453
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
copyIntoArray
---------------- Chamadas de método adicionadas ---------------
Chamada: copyIntoArray
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.createEntrySet() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap.createEntrySet() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableEnumMap.createKeySet() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.containsKey(java.lang.Object)
com.google.common.collect.ImmutableEnumMap.size()
java.util.EnumMap.keySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableEnumMap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.EnumMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap$EntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.createAsList() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableSortedMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilter.canMergeWith(com.google.common.hash.BloomFilter) ************************
*Commit: commit 9a37e924161f131c79a814da407601d0a88e0b46 1362776675 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.hash.BloomFilter.size()
com.google.common.hash.BloomFilter.size()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.BloomFilter.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilter.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap([Ljava.util.Map$Entry;) ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
createEntryArray
createEntryArray
createEntryArray
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
getNextInValueBucket
getValue
java.lang.Object.equals(java.lang.Object)
checkNoConflict
---------------- Chamadas de método adicionadas ---------------
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: checkEntryNotNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
Nenhuma sugestão fornecida.
**************************
Chamada: getNextInKeyBucket
Nenhuma sugestão fornecida.
**************************
Chamada: getKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: getNextInValueBucket
Nenhuma sugestão fornecida.
**************************
Chamada: getValue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: RegularImmutableBiMap ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
createEntryArray
createEntryArray
createEntryArray
getKey
getValue
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
getNextInValueBucket
getValue
java.lang.Object.equals(java.lang.Object)
checkNoConflict
---------------- Chamadas de método adicionadas ---------------
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: getKey
Nenhuma sugestão fornecida.
**************************
Chamada: getValue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
Nenhuma sugestão fornecida.
**************************
Chamada: getNextInKeyBucket
Nenhuma sugestão fornecida.
**************************
Chamada: getKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: getNextInValueBucket
Nenhuma sugestão fornecida.
**************************
Chamada: getValue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: RegularImmutableMap ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createEntryArray
closedTableSize
createEntryArray
getKey
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
checkNoConflictInBucket
---------------- Chamadas de método adicionadas ---------------
Chamada: closedTableSize
Nenhuma sugestão fornecida.
**************************
Chamada: createEntryArray
Nenhuma sugestão fornecida.
**************************
Chamada: getKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Hashing.smear(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: checkNoConflictInBucket
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: checkNoConflictInBucket ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
---------------- Chamadas de método adicionadas ---------------
Chamada: getKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: checkNoConflict
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Keys.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.iterator() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.size() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.DescendingImmutableSortedMultiset.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.reverse()
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Keys.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.iterator() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.size() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.size()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMultiset.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.RegularImmutableMultiset$E, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.RegularImmutableMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asMapEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Function.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.entryIterator() ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.Maps.asMapEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Function.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.entryIterator() ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardLastEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardPollFirstEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingMultiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9444453788579598
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardPollLastEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardFirstEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingMultiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9444453788579598
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
copyIntoArray
---------------- Chamadas de método adicionadas ---------------
Chamada: copyIntoArray
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.createEntrySet() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap.createEntrySet() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PreOrderIterator.next() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.LinkedList.getLast()
java.util.Iterator.next()
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
java.util.Iterator.hasNext()
java.util.LinkedList.removeLast()
com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.LinkedList.addLast(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.LinkedList.removeLast()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.22580638860567137
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.LinkedList.addLast(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PostOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.AbstractCollection.isEmpty()
java.util.LinkedList.getLast()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
java.util.LinkedList.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
java.util.LinkedList.removeLast()
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.LinkedList.getLast()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: java.util.LinkedList.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.LinkedList.removeLast()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.BinaryTreeTraverser$InOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
java.util.Deque.getLast()
java.util.Deque.size()
java.util.BitSet.get(I)
java.util.Deque.removeLast()
java.util.Deque.size()
java.util.BitSet.clear(I)
com.google.common.collect.BinaryTreeTraverser.rightChild(com.google.common.collect.BinaryTreeTraverser$T)
com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
java.util.Deque.size()
java.util.BitSet.set(I)
com.google.common.collect.BinaryTreeTraverser.leftChild(com.google.common.collect.BinaryTreeTraverser$T)
com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Deque.getLast()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Deque.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.BitSet.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Deque.removeLast()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Deque.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.BitSet.clear(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BinaryTreeTraverser.rightChild(com.google.common.collect.BinaryTreeTraverser$T)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Deque.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.BitSet.set(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BinaryTreeTraverser.leftChild(com.google.common.collect.BinaryTreeTraverser$T)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PreOrderIterator.next() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Deque.getLast()
java.util.Iterator.next()
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
java.util.Iterator.hasNext()
java.util.Deque.removeLast()
com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Deque.addLast(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Deque.removeLast()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.22580638860567137
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Deque.addLast(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PostOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.ArrayDeque.isEmpty()
java.util.ArrayDeque.getLast()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
java.util.ArrayDeque.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
java.util.ArrayDeque.removeLast()
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.ArrayDeque.getLast()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: java.util.ArrayDeque.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayDeque.removeLast()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableEnumMap.createKeySet() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.containsKey(java.lang.Object)
com.google.common.collect.ImmutableEnumMap.size()
java.util.EnumMap.keySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableEnumMap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.EnumMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap$EntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.createAsList() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableSortedMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.base.Splitter.splitToList(java.lang.CharSequence) ************************
*Commit: commit 9a762763962df4b2f5011857f317237a2bff5763 1362778668 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.List.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Splitter.splitToList(java.lang.CharSequence) ************************
*Commit: commit 9a762763962df4b2f5011857f317237a2bff5763 1362778668 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.List.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilter.isCompatible(com.google.common.hash.BloomFilter) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.BloomFilter.bitSize()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilter.bitSize()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilter.putAll(com.google.common.hash.BloomFilter) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
putAll
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.hash.BloomFilter.bitSize()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.BloomFilter.bitSize()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilter.bitSize()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.BloomFilter.bitSize()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: putAll
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.BloomFilterStrategies$BitArray.putAll(com.google.common.hash.BloomFilterStrategies$BitArray) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Long.bitCount(J)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Long.bitCount(J)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.Funnels$StringCharsetFunnel.hashCode() ************************
*Commit: commit c8a3113091ba181971969da60898439e18812b6b 1363287688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.nio.charset.Charset.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.nio.charset.Charset.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.Funnels$SequentialFunnel.hashCode() ************************
*Commit: commit c8a3113091ba181971969da60898439e18812b6b 1363287688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
************************ Método Avaliado: com.google.common.cache.CacheBuilderSpec$BooleanParser.parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String) ************************
*Commit: commit c4a6f8f55e0f07b2413540371025bb9aacee15eb 1363288805 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Ascii.toLowerCase(java.lang.String)
java.lang.String.equals(java.lang.Object)
com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
java.lang.String.equals(java.lang.Object)
com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Ascii.toLowerCase(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit a94293f5e2b131267792bd3af67af71c019ebc79 1363375656 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.cache.CacheBuilderSpec$RecordStatsParser.parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String) ************************
*Commit: commit b9fb572927249d885c631ceba20a2198da53de3d 1363619522 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.AbstractHasher.putUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.Hasher.putChar(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.Hasher.putChar(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.AbstractNonStreamingHashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
com.google.common.hash.AbstractNonStreamingHashFunction.newHasher(I)
java.lang.CharSequence.charAt(I)
com.google.common.hash.Hasher.putChar(C)
com.google.common.hash.Hasher.hash()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.hash.AbstractNonStreamingHashFunction.newHasher(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.Hasher.putChar(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.hash.Hasher.hash()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
putUnencodedChars
hash
---------------- Chamadas de método adicionadas ---------------
Chamada: putUnencodedChars
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.hash.HashFunction.newHasher()
Também chamam:
com.google.common.hash.Hasher.hash()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: hash
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putChar(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putChar(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.where(java.util.Map) ************************
*Commit: commit 3212103020bedd2abf04927204f61f87bfcf8745 1364223743 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.putAll(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap$Builder.putAll(java.util.Map)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolveTypeVariable(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver) ************************
*Commit: commit 3212103020bedd2abf04927204f61f87bfcf8745 1364223743 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.reflect.TypeResolver)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.lang.reflect.TypeVariable.getBounds()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getName()
com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.TypeVariable.getBounds()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.TypeVariable.getBounds()
Também chamam:
java.lang.reflect.WildcardType.getUpperBounds()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.reflect.TypeVariable.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolve(java.lang.reflect.TypeVariable) ************************
*Commit: commit 5401a778bfddd5ff34a3902d6c756479149602e4 1364415601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.Object.equals(java.lang.Object)
com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable) ************************
*Commit: commit 5401a778bfddd5ff34a3902d6c756479149602e4 1364415601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.lang.reflect.TypeVariable.getBounds()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getName()
com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.TypeVariable.getBounds()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.TypeVariable.getBounds()
Também chamam:
java.lang.reflect.WildcardType.getUpperBounds()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.reflect.TypeVariable.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanJar(java.io.File, java.lang.ClassLoader) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.jar.JarFile.getManifest()
com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest)
com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader)
java.util.jar.JarFile.entries()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.util.zip.ZipEntry.isDirectory()
java.util.zip.ZipEntry.getName()
java.lang.String.equals(java.lang.Object)
java.util.zip.ZipEntry.getName()
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
java.util.zip.ZipFile.close()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.jar.JarFile.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Enumeration.hasMoreElements()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Enumeration.nextElement()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.zip.ZipEntry.isDirectory()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.zip.ZipEntry.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.zip.ZipEntry.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.zip.ZipFile.close()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.URI.getScheme()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(java.net.URI)
com.google.common.reflect.ClassPath$Scanner.scanFrom(java.io.File, java.lang.ClassLoader)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.net.URI)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.reflect.ClassPath$Scanner.scanFrom(java.io.File, java.lang.ClassLoader)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.ImmutableSet.builder()
java.util.jar.Manifest.getMainAttributes()
java.util.jar.Attributes$Name.toString()
java.util.jar.Attributes.getValue(java.lang.String)
com.google.common.base.Splitter.split(java.lang.CharSequence)
com.google.common.reflect.ClassPath$Scanner.getClassPathEntry(java.io.File, java.lang.String)
java.util.logging.Logger.warning(java.lang.String)
com.google.common.collect.ImmutableSet$Builder.add(java.net.URI)
com.google.common.collect.ImmutableSet$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.jar.Manifest.getMainAttributes()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.builder()
Também chamam:
com.google.common.collect.ImmutableSet$Builder.build()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.jar.Attributes$Name.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.jar.Attributes.getValue(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$Scanner.getClassPathEntry(java.io.File, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.logging.Logger.warning(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.net.URI)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.listFiles()
java.io.File.getName()
java.io.File.isDirectory()
com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String)
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.io.File.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.File.isDirectory()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharSequenceReader.skip(J) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.CharSequenceReader.remaining()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(J, J)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharSequenceReader.read(java.nio.CharBuffer) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.nio.CharBuffer)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.hasRemaining()
java.nio.Buffer.remaining()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(I, I)
java.lang.CharSequence.charAt(I)
java.nio.CharBuffer.put(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.CharSequenceReader.hasRemaining()
Nenhuma sugestão fornecida.
**************************
Chamada: java.nio.Buffer.remaining()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.CharSequenceReader.remaining()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.nio.CharBuffer.put(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.subSequence(I, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.subSequence(I, I)
java.lang.CharSequence.toString()
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.CharSequenceReader.mark(I) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.io.CharSequenceReader.checkOpen()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.CharSequenceReader.read([C, I, I) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.hasRemaining()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(I, I)
java.lang.CharSequence.charAt(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.io.CharSequenceReader.hasRemaining()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.io.CharSequenceReader.remaining()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.readFirstLine() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.CharSource$CharSequenceCharSource.lines()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.lines() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.lang.String.isEmpty()
com.google.common.collect.AbstractIterator.endOfData()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.toString() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.run() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
java.util.concurrent.locks.ReentrantLock.unlock()
java.lang.Runnable.run()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Runnable.run()
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Também chamam:
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Confiança: 0.2264146416698084
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Também chamam:
com.google.common.collect.MapMakerInternalMap$Segment.postWriteCleanup()
Confiança: 0.18867943928436784
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
java.util.concurrent.Executor.execute(java.lang.Runnable)
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
java.util.concurrent.locks.ReentrantLock.unlock()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.concurrent.Executor.execute(java.lang.Runnable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.locks.ReentrantLock.lock()
Também chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Confiança: 0.9750004162812911
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue.execute() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ConcurrentLinkedQueue.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.io.CharStreams$NullWriter.append(java.lang.CharSequence, I, I) ************************
*Commit: commit 8768c424f9809dd34ded53b222610ff4d0992b86 1365439022 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.io.CharStreams$NullWriter.write(java.lang.String, I, I) ************************
*Commit: commit 8768c424f9809dd34ded53b222610ff4d0992b86 1365439022 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.RateLimiter.createBursty(com.google.common.util.concurrent.RateLimiter$SleepingTicker, D, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit f8d47319ee710ecbf55eab44016a8f3355c6d7b1 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
com.google.common.util.concurrent.RateLimiter.setRate(D)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.RateLimiter.setRate(D)
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.System.nanoTime()
Confiança: 0.4545462051654667
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.interrupt()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.currentThread()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.currentThread()
java.lang.Thread.interrupt()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.System.nanoTime()
java.lang.System.nanoTime()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.Callables.threadRenaming(java.util.concurrent.Callable, com.google.common.base.Supplier) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.Callable)
java.lang.Thread.currentThread()
java.lang.Thread.getName()
com.google.common.base.Supplier.get()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
java.util.concurrent.Callable.call()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.Callable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Thread.currentThread()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Thread.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Thread.currentThread()
Também chamam:
java.lang.Thread.interrupt()
Confiança: 1.0
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Supplier.get()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.concurrent.Callable.call()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.Callables.threadRenaming(java.lang.Runnable, com.google.common.base.Supplier) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkNotNull(java.lang.Runnable)
java.lang.Thread.currentThread()
java.lang.Thread.getName()
com.google.common.base.Supplier.get()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
java.lang.Runnable.run()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Runnable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Thread.currentThread()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Thread.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Thread.currentThread()
Também chamam:
java.lang.Thread.interrupt()
Confiança: 1.0
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Supplier.get()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Runnable.run()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.WrappingExecutorService.wrapTasks(java.util.Collection) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.util.concurrent.WrappingExecutorService.wrapTask(java.util.concurrent.Callable)
com.google.common.collect.ImmutableList$Builder.add(java.util.concurrent.Callable)
com.google.common.collect.ImmutableList$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.WrappingExecutorService.wrapTask(java.util.concurrent.Callable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.util.concurrent.Callable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestAllMatches(com.google.common.base.CharMatcher, java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertTrue
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.Strings.repeat(java.lang.String, I)
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.Strings.repeat(java.lang.String, I)
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.assertEqualsSame(java.lang.String, java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
assertSame
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertSame
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestOneCharMatch(com.google.common.base.CharMatcher, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertTrue
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.apply(java.lang.Character)
assertTrue
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.apply(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestNoMatches(com.google.common.base.CharMatcher, java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertFalse
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
fail
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
fail
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertTrue
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 4
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.randomChars(java.util.Random, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Random.nextInt(I)
java.util.Set.contains(java.lang.Object)
java.util.Set.add(java.lang.Character)
java.util.Set.size()
java.util.Arrays.sort([C)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.Character)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.sort([C)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.checkExactMatches(com.google.common.base.CharMatcher, [C) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSetWithExpectedSize(I)
java.util.Set.add(java.lang.Character)
java.util.Set.contains(java.lang.Object)
com.google.common.base.CharMatcher.matches(C)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.add(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matches(C)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestOneCharNoMatch(com.google.common.base.CharMatcher, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertFalse
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.apply(java.lang.Character)
assertFalse
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertSame
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.CharMatcher.matches(C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.CharMatcher.matches(C)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26923103794390735
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.apply(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.FunctionsTest.testComposeOfPredicateAndFunctionIsAssociative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
com.google.common.base.Predicates.equalTo(java.lang.Integer)
com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
com.google.common.base.Predicate.apply(java.lang.Float)
com.google.common.base.Predicate.apply(java.lang.Float)
assertEquals
com.google.common.base.Predicate.apply(java.lang.Float)
com.google.common.base.Predicate.apply(java.lang.Float)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.FunctionsTest.testComposeOfFunctionsIsAssociative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
com.google.common.base.Functions.constant(java.lang.Boolean)
com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
com.google.common.base.Function.apply(java.lang.Float)
com.google.common.base.Function.apply(java.lang.Float)
assertEquals
com.google.common.base.Function.apply(java.lang.Float)
com.google.common.base.Function.apply(java.lang.Float)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Functions.constant(java.lang.Boolean)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.checkIterableIterator(com.google.common.base.Joiner, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(com.google.common.base.JoinerTest$IterableIterator)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, com.google.common.base.JoinerTest$IterableIterator)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.JoinerTest$IterableIterator.iterator()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, com.google.common.base.JoinerTest$IterableIterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.JoinerTest$IterableIterator.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.testNoSpecialNullBehavior() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.JoinerTest.checkNoOutput(com.google.common.base.Joiner, java.lang.Iterable)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.Joiner.join(java.lang.Iterable)
fail
com.google.common.base.Joiner.join(java.lang.Iterable)
fail
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
fail
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.checkNoOutput(com.google.common.base.Joiner, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(java.lang.Iterable)
assertEquals
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.lang.Iterable)
java.lang.Iterable.iterator()
com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.util.Iterator)
com.google.common.base.Joiner.appendTo(java.lang.Appendable, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.length()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.length()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.length()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.testEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.on(java.lang.String)
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
com.google.common.collect.ImmutableMultimap.of()
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of()
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.entrySet()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
fail
java.util.Set.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
fail
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
java.util.Set.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
java.lang.StringBuilder.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.521738787050712
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.testMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.on(java.lang.String)
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
fail
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Map)
java.lang.StringBuilder.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(java.lang.Iterable)
assertEquals
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
java.lang.StringBuilder.toString()
assertEquals
java.lang.StringBuilder.append(C)
java.lang.Iterable.iterator()
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.ObjectsTest.testEqual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.1607138416292284
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_endTooHigh() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndex_startNegative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_reversed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_nullMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_simple_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.14285712226191608
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_ok() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_simple_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckNotNull_simple_success() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: assertSame
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_simpleMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
fail
com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_simpleMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
fail
com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_badSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_complexMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
fail
com.google.common.base.PreconditionsTest.verifyComplexMessage(java.lang.Exception)
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.PreconditionsTest.verifyComplexMessage(java.lang.Exception)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_nullMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.testOr_iterableDefensivelyCopied() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
com.google.common.base.Predicates.or(java.lang.Iterable)
com.google.common.base.Predicate.apply(java.lang.Object)
assertFalse
com.google.common.base.Predicates.alwaysTrue()
java.util.List.add(java.lang.Object)
com.google.common.base.Predicate.apply(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.or(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysTrue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.testHashCodeForBooleanOperations() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicates.isNull()
com.google.common.base.PredicatesTest.isOdd()
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
java.lang.Object.hashCode()
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
java.lang.Object.hashCode()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.PredicatesTest.isOdd()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsLike(com.google.common.base.Predicate, com.google.common.base.Predicate, com.google.common.base.PredicatesTest$(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;Ljava/lang/Object;)V$T) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
com.google.common.base.Predicate.apply(null)
assertEquals
assertNotNull
java.lang.Object.getClass()
java.lang.Object.getClass()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertNotNull
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.getClass()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.getClass()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsToTrue(com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
assertTrue
com.google.common.base.Predicate.apply(null)
assertTrue
com.google.common.base.Predicate.apply(null)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.testAnd_iterableDefensivelyCopied() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
com.google.common.base.Predicates.and(java.lang.Iterable)
com.google.common.base.Predicate.apply(java.lang.Object)
assertTrue
com.google.common.base.Predicates.alwaysFalse()
java.util.List.add(java.lang.Object)
com.google.common.base.Predicate.apply(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.and(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.Object.toString()
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsToFalse(com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
assertFalse
com.google.common.base.Predicate.apply(null)
assertFalse
com.google.common.base.Predicate.apply(null)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_orderedResults() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
java.util.Map.keySet()
that
iteratesOverSequence
that
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
isEqualTo
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
java.util.Map.keySet()
that
iteratesOverSequence
that
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
isEqualTo
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: iteratesOverSequence
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.on(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: iteratesOverSequence
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_multiCharacterSeparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(java.lang.String)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testSplitterIterableIsUnmodifiable_string() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedKeyValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.trimResults()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testSplitterIterableIsUnmodifiable_char() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.assertSplitterIterableIsLazy(com.google.common.base.Splitter) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5227268974172666
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.47727310258273337
Suporte: 0.00346821
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.3863641367769778
Suporte: 0.0028076
Posição da Sugestão: 4
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 1.0
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedBoth() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.on(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.trimResults()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_notTrimmed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_CharacterSeparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(java.lang.String)
com.google.common.base.Splitter.withKeyValueSeparator(C)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEqualTo
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.StringsTest.testRepeat() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
java.lang.String.length()
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
fail
com.google.common.base.Strings.repeat(java.lang.String, I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.SuppliersTest.testComposeWithLists() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.add(java.lang.Integer)
com.google.common.base.Suppliers.compose(com.google.common.base.Function, com.google.common.base.Supplier)
com.google.common.base.Supplier.get()
java.lang.Integer.valueOf(I)
java.util.List.get(I)
assertEquals
java.lang.Integer.valueOf(I)
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Suppliers.compose(com.google.common.base.Function, com.google.common.base.Supplier)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Supplier.get()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsAfterRemoval() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testRemoveOneFromNoneStandard() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testAddSeveralTimes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
assertTrue
java.util.Collection.add(java.lang.String)
assertTrue
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testEqualsTricky() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
com.google.common.collect.AbstractCollectionTest.create()
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractCollectionTest.create()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testRemoveOneFromOneStandard() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testIsEmptyYes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testIsEmptyNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.isEmpty()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Iterator)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_plainIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.lang.Iterable)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testBuilderWithDuplicateElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractImmutableSetTest.builder()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.build()
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
assertFalse
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_collection_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
of
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Collection)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testComplexBuilder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.AbstractImmutableSetTest.builder()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableSet$Builder.build()
java.util.Set.size()
assertEquals
java.util.Set.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
assertEquals
assertEquals
assertEquals
assertEquals
com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableSet$Builder.build()
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.Set.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
com.google.common.collect.AbstractImmutableSetTest.getComplexBuilderSetLastElement()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractImmutableSetTest.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractImmutableSetTest.getComplexBuilderSetLastElement()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListMethods() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.add(I, java.lang.Integer)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.addAll(I, java.util.Collection)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.List.get(I)
java.lang.Integer.intValue()
assertEquals
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.remove(I)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.addAll(I, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.intValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.remove(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapValuesRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testPutGetOrdering() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 5
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListGetSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.set(I, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createSample
toString
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: toString
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapEntriesEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getMultimap
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nullValue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nullKey
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.newHashMap()
nullValue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
nullKey
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
assertEquals
assertEquals
java.util.Map.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Maps.newHashMap()
nullValue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
nullKey
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
java.util.Map.equals(java.lang.Object)
assertFalse
java.util.Map.equals(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nullValue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nullKey
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newHashMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: nullValue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: nullKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: nullValue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: nullKey
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEmptyToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.assertSize(I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 5
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.clear()
com.google.common.collect.Multimap.keySet()
java.util.Set.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray([Ljava.util.Map$Entry;)
assertSame
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
assertEquals
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAllNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keySet()
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.size()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.size()
com.google.common.collect.Multimap.size()
assertEquals
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testModifyCollectionFromGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collections.emptyList()
java.util.Collection.addAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.removedCollectionsAreModifiable()
java.util.Collection.add(java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.add(java.lang.Integer)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAllNotPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
assertNotNull
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNotNull
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
java.util.Collection.toArray([Ljava.lang.Integer;)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntriesUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
java.util.Collection.remove(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEmptyGetToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.clear()
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
java.util.Collection.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
com.google.common.collect.Multimap.keys()
java.util.Collection.toArray([Ljava.lang.String;)
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetAddQuery() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.containsAll(java.util.Collection)
assertTrue
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
allOf
java.util.Collection.toArray([Ljava.util.Collection;)
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.util.Collection;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.toArray()
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
allOf
java.util.Collection.toArray([Ljava.util.Map$Entry;)
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
java.util.Collection.clear()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeySetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
java.util.Iterator.remove()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.keySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.lang.String.equals(java.lang.Object)
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 2
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.add(java.util.Map$Entry)
fail
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.intValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapKeySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.keySet()
java.util.Set.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
java.util.Set.toArray([Ljava.lang.String;)
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.toArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.toArray([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntrySetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet0() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRetainAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesNotPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
assertNotNull
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNotNull
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
assertFalse
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRetainAllNullFromEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.retainAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.retainAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesCopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Set.size()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.removeAll(java.lang.Object)
java.util.Set.size()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemoveAllNullFromEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.removeAll(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.removeAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
that
has
allOf
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
that
has
allOf
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
that
has
allOf
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.size()
assertEquals
java.util.Map.get(java.lang.Object)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map.get(java.lang.Object)
that
has
item
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.remove(java.lang.Object)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
java.util.Map.remove(java.lang.Object)
assertNull
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Map.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.elementSet()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
assertEquals
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multiset.equals(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.hashCode()
com.google.common.collect.Multiset.hashCode()
assertEquals
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset.entrySet()
java.util.Set.hashCode()
com.google.common.collect.Multiset.entrySet()
java.util.Set.hashCode()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveAddQuery() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Iterator.hasNext()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.intValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllNoViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testClearViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.elementSet()
java.util.Set.clear()
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.clear()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountTwo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsSeveral() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 4
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6923041094741941
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6923041094741941
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.toArray([Lcom.google.common.collect.Multiset$Entry;)
assertSame
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
assertEquals
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.toArray([Lcom.google.common.collect.Multiset$Entry;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.containsAll(java.util.Collection)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collections.emptySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfEverythingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testElementSetIsNotACopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.setCount(java.lang.String, I)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllYesViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfEverythingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfDisjointViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfOneViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterElementSetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset.elementSet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Collection.clear()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: java.util.Collection.clear()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemoveTwiceConsecutive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.remove()
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfDisjointViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Iterator.next()
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountAfterRemoval() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.remove(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfOneViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterEntrySetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset.entrySet()
java.util.Set.clear()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: java.util.Set.clear()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testReallyBig() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountWrongType() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetYes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfNothingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.retainAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.assertSize(com.google.common.collect.Multiset) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
java.lang.Math.min(J, J)
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.lang.Math.min(J, J)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterEntrySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.util.Iterator.remove()
fail
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.7999975780034271
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountZero() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetWrongType() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCantAddToElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.add(java.lang.String)
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testClearViaEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.entrySet()
java.util.Set.clear()
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.clear()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collections.emptySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemoveRepeated() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset$Entry.getElement()
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.9499978807529987
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset$Entry.getCount()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getCount()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testElementSetBasic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Multiset.elementSet()
assertEquals
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSequentialIteratorTest.testEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSequentialIteratorTest.newEmpty()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractSequentialIteratorTest.testBroken() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSequentialIteratorTest.newBroken()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
fail
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ArrayTableTest.testRowMissing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
row
java.util.Map.isEmpty()
assertTrue
java.util.Map.put(java.lang.Integer, java.lang.Character)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: row
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ArrayTableTest.testColumnMissing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
column
java.util.Map.isEmpty()
assertTrue
java.util.Map.put(java.lang.String, java.lang.Character)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: column
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetOneElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
that
has
item
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeRepeatedElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetSizeOverflow() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetRepeatedElementsSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetTwoElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.apply(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.substring(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.substring(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
assertEquals
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetSizeOverflow() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
java.util.Collections.nCopies(I, java.lang.Integer)
java.util.Collections.nCopies(I, java.lang.Integer)
com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
java.util.Collections.nCopies(I, java.lang.Integer)
java.util.Collections.nCopies(I, java.lang.Integer)
com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetFourElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetThreeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetRepeatedElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.size()
assertEquals
java.util.Collections.emptyList()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.iterator()
java.util.Collections.emptyList()
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetOneElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeElementsOutOfOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ConstrainedBiMapTest$ConstrainedBiMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
java.util.Map$Entry.getKey()
java.util.Map.containsKey(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7058804673030347
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ConstrainedBiMapTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ConstraintsTest.testConstrainedMultisetLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Constraints.constrainedMultiset(com.google.common.collect.Multiset, com.google.common.collect.Constraint)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.toString()
com.google.common.collect.Multiset.toString()
assertEquals
com.google.common.collect.Multiset.hashCode()
com.google.common.collect.Multiset.hashCode()
assertEquals
that
has
allOf
that
has
allOf
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
that
has
allOf
that
has
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Constraints.constrainedMultiset(com.google.common.collect.Multiset, com.google.common.collect.Constraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EmptyImmutableTableTest.testValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.values()
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testCreateFromMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Collections.emptyMap()
com.google.common.collect.EnumBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.EnumBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.emptyMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.ForwardingObject.toString()
assertEquals
com.google.common.collect.HashBiMap.create()
assertEquals
com.google.common.collect.AbstractBiMap.put(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingObject.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashBiMap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.put(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testKeySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.AbstractBiMap.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testIterationOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testValuesIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest$EnumBiMapGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.BiMap.put(com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.ForwardingObject.toString()
assertEquals
com.google.common.collect.HashBiMap.create()
assertEquals
com.google.common.collect.EnumHashBiMap.put(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingObject.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashBiMap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.put(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.AbstractBiMap.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testCreateFromMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Collections.emptyMap()
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.emptyMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest$EnumHashBiMapGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(com.google.common.collect.EnumHashBiMapTest$Country, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.BiMap.put(com.google.common.collect.EnumHashBiMapTest$Country, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumMultiset.create(java.lang.Class)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.Multiset.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.addAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6451616683659717
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.612902217690742
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.entrySet()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
Confiança: 0.41935527976030035
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testCollectionCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Lcom.google.common.collect.EnumMultisetTest$Color;)
com.google.common.collect.EnumMultiset.create(java.lang.Iterable)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.EnumMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testClassCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumMultiset.create(java.lang.Class)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeTwoEnds() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BoundType.values()
com.google.common.collect.BoundType.values()
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.range(java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.BoundType.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.range(java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.all(java.util.Comparator)
com.google.common.collect.Range.all()
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.GeneralRange.all(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.all()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testCreateSingletonRangeSucceeds() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
com.google.common.collect.GeneralRange.contains(java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.contains(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Confiança: 0.21428548258916263
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.1607138416292284
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Confiança: 0.1250001351563218
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeOneEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BoundType.values()
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.upTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.upTo(java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.downTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.downTo(java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.upTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Range.upTo(java.lang.Integer, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.downTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Range.downTo(java.lang.Integer, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testMapConstructor() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.HashBiMap.create(java.util.Map)
com.google.common.collect.HashBiMap.get(java.lang.Object)
assertEquals
com.google.common.collect.HashBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashBiMap.create(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashBiMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testBashIt() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create(I)
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
assertNull
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
java.util.Map$Entry.setValue(java.lang.Integer)
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testBiMapEntrySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.String)
java.util.Map.get(java.lang.Object)
assertEquals
java.lang.Integer.valueOf(I)
com.google.common.collect.BiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Iterator.remove()
java.util.Map.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7142863321425174
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashBiMapTest$HashBiMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreateWithSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create(I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.getKey()
com.google.common.collect.BiMap.inverse()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest$CreationTests.testFromHashMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableBiMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableBiMap.inverse()
com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableBiMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableBiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.assertMultimapEquals(com.google.common.collect.Multimap, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllMultimapWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMultimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest$ImmutableListMultimapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysByDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
java.lang.String.length()
java.lang.String.length()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertFalse
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysAndValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testMultimapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.ArrayListMultimap.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ArrayListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimapTest.createMultimap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testEmptyMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.of()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.ArrayListMultimap.create()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
java.util.Collections.emptyList()
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multimap.keys()
assertEquals
java.util.Collections.emptySet()
com.google.common.collect.Multimap.keySet()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.isEmpty()
assertTrue
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ArrayListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutNullKey() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMultimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testInverseMinimizesWork() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableListMultimap.inverse()
com.google.common.collect.ImmutableListMultimap.inverse()
assertSame
com.google.common.collect.ImmutableListMultimap.inverse()
com.google.common.collect.ImmutableListMultimap.inverse()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllVarargs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutNullValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.createMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableListMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableListMultimap$Builder.build()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddHandlesNullsCorrectly() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add(java.lang.String)
fail
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testBuilderAddArrayHandlesNulls() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableCollection.isEmpty()
com.google.common.collect.ImmutableList.of(java.lang.String)
com.google.common.collect.ImmutableList.equals(java.lang.Object)
assertTrue
java.util.List.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddAllHandlesNullsCorrectly() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
fail
com.google.common.collect.ImmutableList.builder()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList.builder()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
fail
of
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: of
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddAll_iterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
com.google.common.collect.ImmutableList$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.List.set(I, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_concurrentlyMutating() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.size()
misleadingSizeCollection
java.util.List.subList(I, I)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: misleadingSizeCollection
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.subList(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testComplexBuilder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableList$Builder.build()
java.util.List.size()
assertEquals
java.util.List.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
assertEquals
assertEquals
assertEquals
assertEquals
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableList$Builder.build()
java.util.List.size()
assertEquals
java.util.List.size()
assertEquals
java.util.List.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.27272744787194225
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_iteratorContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testBuilderAddCollectionHandlesNulls() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList.of(java.lang.String)
assertEquals
java.util.List.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableList.builder()
Também chamam:
com.google.common.collect.ImmutableList$Builder.build()
Confiança: 1.0
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testAsMultimapCaches() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.asMultimap()
com.google.common.collect.ImmutableMap.asMultimap()
com.google.common.collect.ImmutableMultimap.asMap()
java.util.Map.size()
assertEquals
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.asMultimap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.asMultimap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
from
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: from
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testMutableValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
java.util.Map.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.hashCode()
java.util.Map.entrySet()
java.util.Set.hashCode()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testNullGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultimapTest.testUnhashableMixedValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testBuilderAddAllIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset$Builder.addAll(java.util.Iterator)
com.google.common.collect.ImmutableMultiset$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultiset$Builder.addAll(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMultiset$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iteratorContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_multiset_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCreation_emptyArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.copyOf([Ljava.lang.String;)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iterator_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_collection_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
of
com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCreation_noArgs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.of()
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.assertMultimapEquals(com.google.common.collect.Multimap, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysByDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
java.lang.String.length()
java.lang.String.length()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutNullValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testMultimapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.HashMultimap.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllVarargs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.createMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertFalse
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysAndValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testEmptyMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.of()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
java.util.Collections.emptySet()
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multimap.keys()
assertEquals
java.util.Collections.emptySet()
com.google.common.collect.Multimap.keySet()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.isEmpty()
assertTrue
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.HashMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllMultimapWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutNullKey() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testHeadMapInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testHeadMapExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testBuilderComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.build()
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testTailMapInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfExplicitComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSortedExplicit() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.Maps.newTreeMap(java.util.Comparator)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Maps.newTreeMap(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testTailMapExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testImmutableMapCopyOfImmutableSortedMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String)
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapExclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapInclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfEmptyMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyMap()
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
java.util.Collections.emptyMap()
assertEquals
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyMap()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSingletonMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapInclusiveInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapExclusiveInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSortedNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newTreeMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testMutableValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
java.util.Map.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.hashCode()
java.util.Map.entrySet()
java.util.Set.hashCode()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfImmutableSortedSetDifferentComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testBuilderReverseOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.reverseOrder()
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.build()
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testNullGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.of()
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Também chamam:
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_sortedSet_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newTreeSet()
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testOf_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testExplicit_containsMismatchedTypes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest$StringLengthComparator.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSubsetAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSingle_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_iterator_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.asIterator([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Iterator)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testEmpty_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of()
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testReverseOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.reverseOrder()
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
that
has
allOf
inOrder
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
java.util.SortedSet.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSubSetExclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet.copyOf([Ljava.lang.String;)
java.util.Arrays.sort([Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, Z, java.lang.String, Z)
that
has
java.lang.Math.min(I, I)
com.google.common.collect.ImmutableSortedSetTest.sortedNumberNames(I, I)
allFrom
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet.copyOf([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.sort([Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, Z, java.lang.String, Z)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSetTest.sortedNumberNames(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Math.min(I, I)
Também chamam:
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Confiança: 0.2571418685719723
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: allFrom
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testContainsAll_sameComparator_StringVsInt() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Sets.newTreeSet(java.util.Comparator)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Set.addAll(java.util.Collection)
java.util.Set.containsAll(java.util.Collection)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newTreeSet(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testAsListInconsistentComprator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
com.google.common.collect.ImmutableList.iterator()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOfSorted_natural_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newTreeSet(java.lang.Iterable)
com.google.common.collect.ImmutableSortedSet.copyOfSorted(java.util.SortedSet)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newTreeSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet.copyOfSorted(java.util.SortedSet)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testExplicit_contains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.validateViewOrdering(com.google.common.collect.Table, com.google.common.collect.Table) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table.cellSet()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
com.google.common.collect.Table.rowKeySet()
com.google.common.collect.Table.rowKeySet()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
com.google.common.collect.Table.values()
com.google.common.collect.Table.values()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table.cellSet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Table.cellSet()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.columnKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.columnKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderColumnsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.columnKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_putAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBasedTable.create()
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.putAll(com.google.common.collect.Table)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.putAll(com.google.common.collect.Table)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.columnKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderColumnsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.columnKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testCopyOf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableTable.copyOf(com.google.common.collect.Table)
com.google.common.collect.ImmutableTable.row(java.lang.Character)
com.google.common.collect.ImmutableMap.keySet()
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable.copyOf(com.google.common.collect.Table)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableTable.row(java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRetainAll_iterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_removal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPoorlyBehavedTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Iterables.transform(java.lang.Iterable, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.transform(java.lang.Iterable, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
com.google.common.collect.Iterables.size(java.lang.Iterable)
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.size(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testUnmodifiableIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
java.util.List.set(I, java.lang.Integer)
java.lang.Iterable.iterator()
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPaddedPartitionNonRandomAccessInput() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSize2NonCollection() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterables.size(java.lang.Iterable)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.size(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_pyramid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newLinkedList()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Lists.newLinkedList()
java.util.List.add(java.lang.Integer)
java.util.List.add(java.lang.Integer)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.add(java.lang.Iterable)
com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.apply(java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
that
has
allOf
inOrder
java.util.Iterator.hasNext()
assertTrue
that
has
allOf
inOrder
java.util.Iterator.next()
assertEquals
that
has
item
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
that
isEmpty
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable_noIteratorCall() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: java.lang.Integer.intValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveIf_randomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_nonStructurallyModifiedList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.List.set(I, java.lang.String)
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_allOfImmutableList_modifiable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPaddedPartitionRandomAccessInput() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_structurallyModifiedSkipSome() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Collection.addAll(java.util.Collection)
that
iteratesOverSequence
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: iteratesOverSequence
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveAll_iterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_structurallyModifiedSkipAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_skipping_pyramid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newLinkedList()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Lists.newLinkedList()
java.util.List.add(java.lang.Integer)
java.util.List.add(java.lang.Integer)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.add(java.lang.Iterable)
com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable_queue_removesFromQueue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Queue.peek()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
java.util.Queue.peek()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Queue.peek()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.intValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.intValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Queue.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.intValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_allOfMutableList_modifiable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveIf_noRandomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysTrue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysTrue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Optional.get()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testSize1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singleton(java.lang.Integer)
java.util.Set.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAddAllToList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
that
has
allOf
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTransformRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.valueOf(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testEmptyModifiableIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyModifiableIterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayTypical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
fail
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testSize_partiallyConsumed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Iterators.size(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_singleton2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_lastElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Optional.get()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartitionRandomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_illegalArgument() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedDataNoMatch() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.AbstractList.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAddAllToSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
that
has
allOf
inOrder
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testConcatContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.util.Iterator;)
java.util.List.iterator()
com.google.common.collect.Iterators.concat(java.util.Iterator)
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
fail
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.util.Iterator;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.concat(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.29166656154523457
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.24999987385428152
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.24999987385428152
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_notPresent_nullReturn() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertNull
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_firstElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Optional.get()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_exception() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_singleton2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveSameElementTwice() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetNext_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_negativeIndex() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testEmptyIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_atSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfTwo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRetainAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationTypical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_matchAlways() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysTrue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPoorlyBehavedTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.util.Iterator.next()
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.valueOf(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.18181829858129483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testNullFriendlyTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.String.valueOf(java.lang.Object)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.valueOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_fiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testToStringEmptyIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.toString(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.toString(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedData() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.AbstractList.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.22580638860567137
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_first() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFilterNothing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
fail
java.util.Collections.emptyList()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.2333336024446068
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.2000002018334551
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_firstElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveWithoutNext() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Integer.valueOf(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_negativeIndex() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
fail
java.util.Iterator.hasNext()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAny() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.base.Predicates.equalTo(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testLimitRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.List.size()
assertEquals
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.22580638860567137
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfOneWithRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testConsumingIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.consumingIterator(java.util.Iterator)
that
has
allOf
inOrder
java.util.Iterator.hasNext()
assertTrue
that
has
allOf
inOrder
java.util.Iterator.next()
assertEquals
that
has
item
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
that
isEmpty
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.consumingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_moreThanFiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveAfterHasNext() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysFalse_orDefault() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.or(java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Optional.or(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_matchAlways() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.next()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysTrue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayOffset() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testLimit() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
fail
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.ImmutableList.of(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_nonnull_no() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.base.Predicates.equalTo(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_nonnull_yes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFrequency() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationSingleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_notPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_moreThanOneLessThanFiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testElementsEqual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.Collections.emptySet()
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Collections.emptySet()
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRemoveIf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_null_yes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysFalse_isPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.isPresent()
assertFalse
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Optional.isPresent()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_atSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedDataWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.AbstractList.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.22580638860567137
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_last() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleWhenRemoveIsNotSupported() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.next()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_lastElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfTwoWithRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.singletonList(java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonList(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_null_no() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_notPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
fail
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.304348283932384
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetNext_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_valid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultimapTest.testValueSetHashTableExpansion() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultimap.create()
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimap.backingMap()
java.util.Map.get(java.lang.Object)
com.google.common.collect.LinkedHashMultimap$ValueSet.size()
assertEquals
com.google.common.collect.LinkedHashMultimap$ValueSet.size()
needsResizing
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.backingMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedHashMultimap$ValueSet.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedHashMultimap$ValueSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: needsResizing
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultimapTest.assertOrderingReadOnly(com.google.common.collect.Multimap) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Multimap.get(java.lang.String)
that
has
item
com.google.common.collect.Multimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.Multimap.values()
that
has
allOf
inOrder
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
item
---------------- Chamadas de método adicionadas ---------------
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultiset.create()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testIteratorRemoveConcurrentModification() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
add
add
iterator
java.util.Iterator.next()
remove
size
assertEquals
contains
assertTrue
java.util.Iterator.remove()
fail
size
assertEquals
contains
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: add
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: remove
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: size
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: contains
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: size
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: contains
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreateWithSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultiset.create(I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.LinkedHashMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.LinkedHashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.setValue(java.lang.Integer)
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.remove()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8750018921905511
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testEntriesAfterMultimapUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.set(I, java.lang.Integer)
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.keys()
that
has
allOf
inOrder
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
com.google.common.collect.Multimap.values()
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
that
has
allOf
inOrder
com.google.common.collect.Multimap.clear()
java.util.Collections.emptyList()
assertEquals
that
isEmpty
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testEntrySetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 3
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.224999280968679
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutOutOfOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map$Entry.setValue(java.util.Collection)
fail
java.util.Iterator.remove()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
item
java.util.Iterator.hasNext()
assertFalse
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.setValue(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9166679281270341
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8333358562540683
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedGetInsert() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.add(java.lang.Integer)
java.util.List.add(I, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutInOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.set(I, java.lang.Integer)
java.util.List.iterator()
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_1_2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_2_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_1_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testCharactersOfIsView() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.charactersOf(java.lang.CharSequence)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
java.lang.StringBuilder.deleteCharAt(I)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.5227268974172666
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.47727310258273337
Suporte: 0.00346821
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.3863641367769778
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.3863641367769778
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.deleteCharAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest$RemoveFirstFunction.apply(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.substring(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testAsList1Small() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
that
has
item
java.util.List.size()
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
java.util.List.get(I)
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
assertTrue
java.util.Collections.singletonList(java.lang.String)
test
com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
java.util.List.iterator()
---------------- Chamadas de método adicionadas ---------------
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonList(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: test
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testArraysAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.List.set(I, java.lang.String)
java.util.List.get(I)
assertEquals
java.util.List.add(java.lang.String)
fail
java.util.List.remove(I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.remove(I)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.get(I)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.isEmpty()
assertTrue
java.util.List.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartitionSize_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.27272744787194225
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.assertTransformIterator(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartitionRandomAccessFalse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Lists.partition(java.util.List, I)
assertFalse
java.util.List.get(I)
assertFalse
java.util.List.get(I)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_3_2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.get(I)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.checkFooBarBazList(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
that
has
allOf
inOrder
java.util.List.size()
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ListsTest.testNewArrayListFromIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingSortedSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.MapConstraints.constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.SortedSetMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.SortedSetMultimap.valueComparator()
assertSame
com.google.common.collect.SortedSetMultimap.get(java.lang.String)
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.MapConstraints.constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedSetMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.SortedSetMultimap.valueComparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SortedSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMapEntrySetContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newTreeMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Map.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.containsAll(java.util.Collection)
assertFalse
java.util.Map.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.toArray()
java.util.Collections.emptySet()
java.util.Map$Entry.setValue(java.util.Collection)
fail
java.util.Map$Entry.getValue()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.toArray()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 2
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.setValue(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesRemoveNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.Multimap.entries()
assertFalse
com.google.common.collect.ListMultimap.get(java.lang.String)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapEntriesRemoveNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.entries()
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.remove(java.lang.Object)
Também chamam:
java.util.Collection.remove(java.lang.Object)
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.removeAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapQueue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedBiMapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
fail
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMapEntrySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.entrySet()
java.util.Set.toArray()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.util.Map.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.toArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
fail
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapEntriesContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.entries()
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.containsAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultimap.create()
com.google.common.collect.MapConstraints.constrainedSetMultimap(com.google.common.collect.SetMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.SetMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedSetMultimap(com.google.common.collect.SetMultimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedBiMapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.entrySet()
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
java.util.Map.keySet()
assertEquals
com.google.common.collect.BiMap.values()
com.google.common.collect.BiMap.values()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testNefariousMapPutAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
com.google.common.collect.MapConstraintsTest.onceIterableMap(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.MapConstraintsTest.onceIterableMap(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
that
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
is
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
that
has
item
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
assertNull
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
assertEquals
com.google.common.collect.Multimap.values()
com.google.common.collect.Multimap.values()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
assertEquals
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
assertFalse
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 5
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.21212137892565927
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.Integer) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.Integer.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Integer.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingRandomAccessList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayListMultimap.create()
com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.Multimap.entries()
assertFalse
com.google.common.collect.ListMultimap.get(java.lang.String)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ListMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7272717264460444
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.entrySet()
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
java.util.Map.keySet()
assertEquals
java.util.Map.values()
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Map.values()
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
java.util.Map.values()
assertFalse
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.add(java.util.Map$Entry)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
that
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
is
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
assertEquals
com.google.common.collect.Multimap.values()
com.google.common.collect.Multimap.values()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
assertEquals
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.values()
Também chamam:
java.util.Iterator.next()
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: is
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapMakerTest$ComputingTest.testComputerThatReturnsNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
java.util.Map.get(java.lang.Object)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapMakerTest$RecursiveComputationTest.testRecursiveComputation() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapMakerTest$MaximumSizeTest.testSizeBasedEviction() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.maximumSize(I)
com.google.common.collect.MapMaker.makeMap()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
assertEquals
java.util.Map.containsKey(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapMaker.makeMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapMakerTest$MaximumSizeTest.testPut_sizeIsZero() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.maximumSize(I)
com.google.common.collect.MapMaker.makeMap()
java.util.Map.size()
assertEquals
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MapMaker.makeMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapMakerTest$ComputingTest.testRuntimeException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
java.util.Map.get(java.lang.Object)
fail
java.lang.Throwable.getCause()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getCause()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMapWithDuplicateKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testLinkedHashMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Collections.emptyMap()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collections.emptyMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Maps.newLinkedHashMap()
Também chamam:
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSortedEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
java.util.SortedMap.entrySet()
that
isEmpty
java.util.Map.isEmpty()
assertTrue
java.util.Map.get(java.lang.Object)
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testImmutableEntryNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
assertNull
java.util.Map$Entry.getValue()
assertNull
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredValuesIllegalSetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7142863321425174
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7142863321425174
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6428546714299308
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredEntriesObjectPredicate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
java.util.Map.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicates.alwaysFalse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testSynchronizedBiMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.synchronizedBiMap(com.google.common.collect.BiMap)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.BiMap.inverse()
java.util.Map.keySet()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.BiMap.inverse()
java.util.Map.keySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.synchronizedBiMap(com.google.common.collect.BiMap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredEntriesWildCardEntryPredicate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
java.lang.String.equals(java.lang.Object)
java.lang.Integer.valueOf(I)
java.util.Map$Entry.getValue()
com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.lang.Integer.valueOf(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testUniqueIndexIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BiMap.inverse()
com.google.common.base.Functions.forMap(java.util.Map)
com.google.common.collect.Maps.uniqueIndex(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.BiMap.values()
java.util.Set.iterator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Functions.forMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.uniqueIndex(java.lang.Iterable, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
java.util.SortedMap.tailMap(java.lang.String)
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
allOf
inOrder
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testUnmodifiableBiMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.Maps.unmodifiableBiMap(com.google.common.collect.BiMap)
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.inverse()
assertSame
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.inverse()
assertSame
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
assertEquals
com.google.common.collect.BiMap.inverse()
java.util.Map.get(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
assertEquals
com.google.common.collect.BiMap.put(java.lang.Number, java.lang.String)
fail
com.google.common.collect.BiMap.forcePut(java.lang.Number, java.lang.String)
fail
java.util.Collections.singletonMap(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Number)
fail
com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Number)
fail
java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.values()
java.util.Set.remove(java.lang.Object)
fail
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.String)
fail
java.util.Set.toArray()
java.util.Map$Entry.setValue(java.lang.String)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.unmodifiableBiMap(com.google.common.collect.BiMap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.equals(java.lang.Object)
Também chamam:
java.lang.Object.equals(java.lang.Object)
Confiança: 0.13793081848988292
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.Number, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Number, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonMap(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Number)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Number)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7142863321425174
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7142863321425174
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6428546714299308
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.toArray()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSortedReadsThrough() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
java.util.SortedMap.comparator()
assertNull
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Set.add(java.lang.String)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.SortedMap.headMap(java.lang.String)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Set.add(java.lang.String)
java.util.Set.remove(java.lang.Object)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedMap.headMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredValuesClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.clear()
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testUniqueIndexIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BiMap.values()
java.util.Set.iterator()
com.google.common.collect.BiMap.inverse()
com.google.common.base.Functions.forMap(java.util.Map)
com.google.common.collect.Maps.uniqueIndex(java.util.Iterator, com.google.common.base.Function)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.41935517474868483
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.24731170894317414
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.remove()
Confiança: 0.23655919579144746
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Functions.forMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.uniqueIndex(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.apply(java.util.Map$Entry) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.lang.String.length()
java.util.Map$Entry.getValue()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testImmutableEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMapIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Maps.toMap(java.util.Iterator, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableList.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.toMap(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testLinkedHashMapWithInitialMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
com.google.common.collect.Maps.newLinkedHashMap(java.util.Map)
java.util.HashMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.newLinkedHashMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 3
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 3
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 3
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 3
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.75
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7741936113943285
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7407425680403309
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.5624990539047245
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.43750094609527557
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
com.google.common.collect.ImmutableSet.iterator()
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: mapEntry
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapReadsThrough() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newLinkedHashSet()
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Set.add(java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.valueOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
java.util.Map.entrySet()
that
isEmpty
java.util.Map.isEmpty()
assertTrue
java.util.Map.get(java.lang.Object)
assertNull
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: isEmpty
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.checkUnmodifiableMultimap(com.google.common.collect.Multimap, Z, java.lang.String, java.lang.Integer) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MultimapsTest.prepareUnmodifiableTests(com.google.common.collect.Multimap, Z, java.lang.String, java.lang.Integer)
assertMultimapIsUnmodifiable
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Multimap.entries()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
that
has
allOf
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
assertNull
com.google.common.collect.Multimap.entries()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: assertMultimapIsUnmodifiable
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Multimap.asMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMapGetIteration() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.Integer;)
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
ignoreSunJavaBug6529795
test
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Maps.newHashMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: ignoreSunJavaBug6529795
Nenhuma sugestão fornecida.
**************************
Chamada: test
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testSynchronizedMultimapSampleCodeCompilation() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimaps.synchronizedMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$()V$K)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.MultimapsTest.foo(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimaps.synchronizedMultimap(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$()V$K)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.MultimapsTest.foo(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.7499987385396326
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.size()
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
java.util.Collections.emptySet()
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.elementSet()
assertEquals
com.google.common.collect.Multimap.keys()
that
has
item
com.google.common.collect.Multimap.values()
that
has
item
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
item
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
that
has
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
item
com.google.common.collect.Multimap.clear()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.clear()
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.size()
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ArrayListMultimap.create()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keys()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
java.util.Set.size()
Confiança: 0.44999788075299874
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.elementSet()
Também chamam:
com.google.common.collect.Multiset.elementSet()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.7692304109474194
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ArrayListMultimap.create()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testIndexIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.values()
java.util.Collection.iterator()
com.google.common.base.Functions.toStringFunction()
com.google.common.collect.Multimaps.index(java.util.Iterator, com.google.common.base.Function)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.toStringFunction()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimaps.index(java.util.Iterator, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testNewMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newEnumMap(java.lang.Class)
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
assertEquals
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
assertEquals
com.google.common.collect.Multimap.keySet()
assertFalse
com.google.common.collect.Multimap.asMap()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testUnmodifiableMultimapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray([Ljava.util.Map$Entry;)
assertSame
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
nefariousMapEntry
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5882355036329961
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.toArray()
Também chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Confiança: 0.5714273357149654
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: nefariousMapEntry
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.contains(java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1403506162819972
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testNewMultimapWithCollectionRejectingNegativeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.ForwardingCollection.standardAddAll(java.util.Collection)
com.google.common.collect.Maps.newEnumMap(java.lang.Class)
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ForwardingCollection.standardAddAll(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Maps.newEnumMap(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.57894770387839
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.42105229612161
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.entries()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testIndex_ordering() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.String.length()
com.google.common.collect.Multimaps.index(java.lang.Iterable, com.google.common.base.Function)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.index(java.lang.Iterable, com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
assertIteratorIsUnmodifiable
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
assertIteratorsInOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: assertIteratorIsUnmodifiable
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Iterable.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertIteratorsInOrder
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.22352899273400767
Suporte: 0.0031379
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.hasNext()
Confiança: 0.08235289927340077
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMapAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.SetMultimap.asMap()
java.util.Collections.singleton(java.lang.Integer)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.remove(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.48750094609527556
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.2875001892190551
Suporte: 0.00379851
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Iterator.next()
Confiança: 0.17500037843811023
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testDifferenceWithMoreElementsInSecondMultiset() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multisets.difference(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
that
has
item
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.difference(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: item
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRemoveOccurrencesEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertFalse
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRetainEmptyOccurrences() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertTrue
java.util.Collection.isEmpty()
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.HashMultiset.create()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_n_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest$Scenario.testMinAndMax() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random)
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.size()
java.util.List.subList(I, I)
java.util.List.toArray([Ljava.lang.Object;)
com.google.common.collect.Ordering.min(java.lang.Iterable)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.max(java.lang.Iterable)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.List.subList(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.27272744787194225
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.util.List.toArray([Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nMinusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIteratorLargeK() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
java.util.List.iterator()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testGreatestOfIterator_simple() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.greatestOf(java.util.Iterator, I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.greatestOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_ties() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
assertNotSame
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList()
java.util.List.isEmpty()
java.util.List.size()
java.util.Random.nextInt(I)
java.util.List.remove(I)
java.util.List.add(com.google.common.collect.OrderingTest$(Ljava/util/List;Ljava/util/Random;)Ljava/util/List;$T)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Random.nextInt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.remove(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(com.google.common.collect.OrderingTest$(Ljava/util/List;Ljava/util/Random;)Ljava/util/List;$T)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMaxExhaustsIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMinAndMax() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertSame
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_ties() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
assertNotSame
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLexicographical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.lexicographical()
com.google.common.collect.ImmutableList.of()
com.google.common.collect.ImmutableList.of(java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String)
testComparator
com.google.common.collect.Ordering.lexicographical()
addEqualityGroup
com.google.common.collect.Ordering.lexicographical()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.lexicographical()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.ImmutableList.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: testComparator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.lexicographical()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.lexicographical()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNullsFirst() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
testComparator
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
addEqualityGroup
com.google.common.collect.Ordering.nullsFirst()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.nullsFirst()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: testComparator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsFirst()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsFirst()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testOnResultOf_natural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
addEqualityGroup
testEquals
reserializeAndAssert
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
Chamada: reserializeAndAssert
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMinExhaustsIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNullsLast() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
testComparator
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
addEqualityGroup
com.google.common.collect.Ordering.nullsLast()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: testComparator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testFrom() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.from(com.google.common.collect.Ordering)
com.google.common.collect.Ordering.from(java.util.Comparator)
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.from(com.google.common.collect.Ordering)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nPlusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_n() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nMinusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testCombinationsExhaustively_startingFromFromComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.from(java.util.Comparator)
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.6153824656845164
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nPlusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterableLargeK() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_n_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testCombinationsExhaustively_startingFromNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
testComparator
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
reserialize
assertSame
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: testComparator
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: reserialize
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nMinusOne_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nMinusOne_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsLast()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.Object;)
com.google.common.collect.Platform.newArray([Ljava.lang.Object;, I)
com.google.common.collect.OrderingTest.verifyScenario(com.google.common.collect.OrderingTest$Scenario, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Arrays.asList([Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Platform.newArray([Ljava.lang.Object;, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.verifyScenario(com.google.common.collect.OrderingTest$Scenario, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testOnResultOf_chained() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
com.google.common.base.Functions.constant(java.lang.Integer)
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
reserializeAndAssert
java.lang.Object.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Functions.constant(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
Chamada: reserializeAndAssert
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.runLeastOfComparison(I, I, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Lists.newArrayList()
java.util.Random.nextInt(I)
java.util.List.add(java.lang.Integer)
java.util.Random.nextInt(I)
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.subList(I, I)
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Lists.newArrayList()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Random.nextInt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Random.nextInt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.subList(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testImmutableSortedCopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
java.util.Collections.emptyList()
java.util.Collections.emptyList()
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.emptyList()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.nullsFirst()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_n() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest$Scenario.testBinarySearch() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.List.remove(I)
com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.remove(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.testReverse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.reverse()
testComparator
com.google.common.collect.Ordering.reverse()
addEqualityGroup
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
addEqualityGroup
java.util.Collections.reverseOrder()
addEqualityGroup
testEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: testComparator
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.OrderingTest.byCharAt(I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.OrderingTest$CharAtFunction.values()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.OrderingTest$CharAtFunction.values()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest$PeekingIteratorTester.newTargetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.actsLikeIteratorHelper(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
test
java.util.List.size()
test
java.util.Collections.unmodifiableList(java.util.List)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: test
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest$ThrowsAtEndIterator.next() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testCantRemoveAfterPeek() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.remove()
fail
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.remove()
java.util.List.size()
assertEquals
java.util.List.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.util.List.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekDoesntChangeIteration() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
fail
com.google.common.collect.PeekingIterator.peek()
fail
com.google.common.collect.PeekingIterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekingIteratorDoesntAdvancePrematurely() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekOnEmptyList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.peek()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.PeekingIterator.peek()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16203711490482997
Suporte: 0.00578035
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.152777731057102
Suporte: 0.00545004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.14351862753342864
Suporte: 0.00511974
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testIntersection() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.HashSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testDifference() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.HashSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testUnion() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.HashSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testSymmetricDifference() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.HashSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.HashSet.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableSet)
assertEquals
java.util.Set.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableSet)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewHashSetFromIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.iterator()
com.google.common.collect.Sets.newHashSet(java.util.Iterator)
com.google.common.collect.SetsTest.verifySetContents(java.util.Set, java.lang.Iterable)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newHashSet(java.util.Iterator)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5483872227886571
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.3870958290850707
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.iterator()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.32258083418298583
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.SetsTest.verifySetContents(java.util.Set, java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetContents() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
java.util.Set.hashCode()
assertEquals
com.google.common.collect.Sets.newHashSet()
com.google.common.collect.ImmutableSet.of()
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.remove(java.lang.Object)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
addEqualityGroup
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
addEqualityGroup
addEqualityGroup
testEquals
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Object)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Collections.singleton(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewIdentityHashSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newIdentityHashSet()
java.util.Set.add(java.lang.Integer)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.add(java.lang.Integer)
assertTrue
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewLinkedHashSetFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.List.iterator()
com.google.common.collect.SetsTest.verifyLinkedHashSetContents(java.util.LinkedHashSet, java.util.Collection)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetsTest.verifyLinkedHashSetContents(java.util.LinkedHashSet, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetShowOff() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testCartesianProduct_contains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
com.google.common.collect.Sets.cartesianProduct([Ljava.util.Set;)
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.cartesianProduct([Ljava.util.Set;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.assertPowerSetSize(I, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.Object;)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetEqualsAndHashCode_verifyAgainstHashSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.List.size()
com.google.common.collect.ImmutableList.subList(I, I)
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.SetsTest.toHashSets(java.util.Set)
addEqualityGroup
com.google.common.collect.ImmutableSet.of()
addEqualityGroup
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
addEqualityGroup
addEqualityGroup
testEquals
com.google.common.collect.SetsTest.toHashSets(java.util.Set)
java.util.Set.hashCode()
java.util.Set.hashCode()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableList.subList(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.iterator()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetsTest.toHashSets(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of()
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: addEqualityGroup
Nenhuma sugestão fornecida.
**************************
Chamada: testEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.SetsTest.toHashSets(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.ensureNotDirectlyModifiable(java.util.SortedSet) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.add(java.lang.Integer)
fail
java.util.Set.remove(java.lang.Object)
fail
java.util.Collections.singleton(java.lang.Integer)
java.util.Set.addAll(java.util.Collection)
fail
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.singleton(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.addAll(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 1
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetIteration_manual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.iterator()
com.google.common.collect.ImmutableSet.of()
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.564102245627981
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.41025561406995226
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SetsTest.assertEmpty(java.util.Set) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.isEmpty()
assertTrue
java.util.Set.size()
assertEquals
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.4516133652794417
Suporte: 0.00693642
Posição da Sugestão: 2
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5238091119049885
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.5238091119049885
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3809515571433102
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SortedListsTest.assertModelAgrees(java.util.List, java.lang.Integer, I, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.contains(java.lang.Object)
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.get(I)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
assertEquals
assertEquals
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.List.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.indexOf(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 1
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TableCollectionTest$TestCellSetGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TableCollectionTest$TestCellSetGenerator.createTable()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.Character)
com.google.common.collect.Table.cellSet()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getRowKey()
Também chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Confiança: 0.8749996846357039
Suporte: 0.00346821
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table$Cell.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Table$Cell.getColumnKey()
Também chamam:
com.google.common.collect.Table$Cell.getValue()
Confiança: 0.8333337538190616
Suporte: 0.00330306
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Table.cellSet()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TableCollectionTest$MapMapTests.testRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
makePopulatedMap
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map.size()
java.util.Map.get(java.lang.Object)
java.util.Map.remove(java.lang.Object)
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.size()
assertEquals
java.util.Map.remove(java.lang.Object)
fail
assertInvariants
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3061220959185615
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
Confiança: 0.24489742959212799
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: assertInvariants
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TablesTransformValuesTest.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBasedTable.create()
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.Object.toString()
com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.String)
com.google.common.collect.Tables.transformValues(com.google.common.collect.Table, com.google.common.base.Function)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.toString()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Tables.transformValues(com.google.common.collect.Table, com.google.common.base.Function)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeySetComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowKeySet()
java.util.SortedSet.comparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowKeySet()
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.usingToString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.Map.size()
assertEquals
java.util.SortedMap.tailMap(java.lang.Integer)
java.util.Map.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedMap.tailMap(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest$TreeRowTest.testClearSubMapOfRowMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.Map.clear()
com.google.common.collect.TreeBasedTable.row(java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.Map.clear()
com.google.common.collect.TreeBasedTable.row(java.lang.String)
com.google.common.collect.ImmutableMap.of()
assertEquals
java.util.Map.containsKey(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsKey(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.get(java.lang.Object)
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.containsKey(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.16666666666666666
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowMapComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.comparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.usingToString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowEntrySetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.SortedMap.tailMap(java.lang.Integer)
java.util.SortedMap.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.util.SortedMap.tailMap(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.contains(java.lang.Object)
Também chamam:
java.util.Set.contains(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowComparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowComparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.usingToString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowComparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testColumnComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.columnComparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.columnComparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.columnComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collections.reverseOrder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.usingToString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.usingToString()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.columnComparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapHeadMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.headMap(java.lang.String)
java.util.Map.size()
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
java.util.Collections.singleton(java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.headMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.singleton(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowMapValuesAreSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.Map.get(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapSubMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapTailMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.tailMap(java.lang.String)
java.util.Map.size()
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character, java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
java.util.Collections.singleton(java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character, java.lang.Integer, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.singleton(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testColumnKeySet_isSortedWithRealComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.TreeBasedTableTest.create(java.util.Comparator, java.util.Comparator, [Ljava.lang.Object;)
columnKeySet
toString
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.reverse()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 5
**************************
Chamada: com.google.common.collect.TreeBasedTableTest.create(java.util.Comparator, java.util.Comparator, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: columnKeySet
Nenhuma sugestão fornecida.
**************************
Chamada: toString
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest.testMultimapCreateFromTreeMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.TreeMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.TreeMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
java.util.SortedSet.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest.testOrderedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapExplicitTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest$StringLength.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.compareTo(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.String.compareTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromTreeMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testTreeMultimapAsMapSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
com.google.common.collect.Ordering.natural()
java.util.SortedMap.comparator()
assertEquals
java.util.SortedMap.firstKey()
assertEquals
java.util.SortedMap.lastKey()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
java.util.SortedMap.tailMap(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
java.util.SortedMap.headMap(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.firstKey()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.lastKey()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.headMap(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testOrderedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.526882259492682
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.44897923877570434
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.367346762244995
Suporte: 0.00297275
Posição da Sugestão: 2
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7222235304011437
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: that
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666655453704482
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5999993945008568
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5714273357149653
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.iterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.4615377808000969
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.3749998107812313
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testTailSetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create()
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.TreeMultimap.keySet()
java.util.SortedSet.tailSet(java.lang.String)
java.util.Set.clear()
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.TreeMultimap.keySet()
assertEquals
com.google.common.collect.AbstractMultimap.size()
assertEquals
com.google.common.collect.AbstractSortedSetMultimap.values()
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimap.keys()
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.tailSet(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultimap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.values()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.AbstractMultimap.keys()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromSortedSetMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimaps.unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
java.util.SortedSet.comparator()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testComparators() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromHashMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testElementSetSortedSetMethods() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.AbstractSortedMultiset.elementSet()
java.util.SortedSet.first()
assertEquals
java.util.SortedSet.last()
assertEquals
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertEquals
java.util.SortedSet.headSet(java.lang.String)
that
has
allOf
inOrder
java.util.SortedSet.tailSet(java.lang.String)
that
has
allOf
inOrder
java.util.SortedSet.subSet(java.lang.String, java.lang.String)
that
has
allOf
inOrder
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedMultiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.first()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.last()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.headSet(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.tailSet(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.subSet(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testNullAcceptingComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
that
has
allOf
inOrder
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractSortedMultiset.elementSet()
java.util.SortedSet.first()
assertEquals
java.util.SortedSet.last()
assertEquals
java.util.SortedSet.comparator()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.nullsFirst()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: that
Nenhuma sugestão fornecida.
**************************
Chamada: has
Nenhuma sugestão fornecida.
**************************
Chamada: allOf
Nenhuma sugestão fornecida.
**************************
Chamada: inOrder
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedMultiset.elementSet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.first()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.last()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.SortedSet.comparator()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testToStringNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Ordering.nullsFirst()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreateWithComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.reverseOrder()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.TreeMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultiset.create(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testSubMultisetSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.TreeMultiset.size()
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedMultiset.comparator()
assertEquals
com.google.common.collect.AbstractMultiset.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractSortedMultiset.comparator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.AbstractMultiset.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverserTest.binaryIterationOrder(java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.TreeTraverserTest.iterationOrder(java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(C)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.8367338112249753
Suporte: 0.00677126
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.primitives.BooleansTest.testAsListSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 2
**************************
Chamada: com.google.common.primitives.Booleans.asList([Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 3
**************************
Chamada: com.google.common.primitives.Booleans.asList([Z)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.39436797489297104
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.get(I)
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.3098603080386839
Suporte: 0.00363336
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
java.util.List.size()
Também chamam:
java.util.List.size()
Confiança: 0.27272744787194225
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.size()
Também chamam:
java.util.List.get(I)
java.util.List.get(I)
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.BytesTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Bytes.asList([B)
com.google.common.primitives.Bytes.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Byte)
java.util.Arrays.equals([B, [B)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Bytes.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Byte)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([B, [B)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.CharsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Chars.asList([C)
com.google.common.primitives.Chars.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Character)
java.util.Arrays.equals([C, [C)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Chars.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Character)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([C, [C)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.DoublesTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Doubles.asList([D)
com.google.common.primitives.Doubles.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Double)
java.util.Arrays.equals([D, [D)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Doubles.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Double)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([D, [D)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.DoublesTest.referenceTryParse(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.trim()
java.lang.String.length()
java.lang.String.length()
java.lang.Double.valueOf(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.Double.valueOf(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.FloatsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Floats.asList([F)
com.google.common.primitives.Floats.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Float)
java.util.Arrays.equals([F, [F)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Floats.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Float)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([F, [F)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.FloatsTest.referenceTryParse(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.trim()
java.lang.String.length()
java.lang.String.length()
java.lang.Float.valueOf(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.Float.valueOf(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.IntsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Ints.asList([I)
com.google.common.primitives.Ints.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.equals([I, [I)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Ints.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([I, [I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.LongsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Longs.asList([J)
com.google.common.primitives.Longs.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Long)
java.util.Arrays.equals([J, [J)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Longs.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Long)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([J, [J)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.primitives.ShortsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Shorts.asList([S)
com.google.common.primitives.Shorts.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Short)
java.util.Arrays.equals([S, [S)
assertTrue
java.util.List.get(I)
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.primitives.Shorts.toArray(java.util.Collection)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.set(I, java.lang.Short)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Arrays.equals([S, [S)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.get(I)
Confiança: 0.19178016290373417
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.Comparator.compare(null, null)
Confiança: 0.10958842753106285
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.get(I)
Também chamam:
java.util.List.size()
Confiança: 0.09589008145186709
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.AtomicLongMapTest.testRemoveZeros() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.AtomicLongMap.create()
com.google.common.collect.Sets.newHashSet()
com.google.common.util.concurrent.AtomicLongMap.put(java.lang.Object, J)
java.util.Set.add(java.lang.Object)
com.google.common.util.concurrent.AtomicLongMap.size()
assertEquals
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.containsValue(java.lang.Object)
assertTrue
com.google.common.util.concurrent.AtomicLongMap.removeAllZeros()
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.containsValue(java.lang.Object)
assertFalse
com.google.common.util.concurrent.AtomicLongMap.size()
assertEquals
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.keySet()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newHashSet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.put(java.lang.Object, J)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.add(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.removeAllZeros()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.containsValue(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.size()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: suite ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getClassLoader()
com.google.common.reflect.ClassPath.from(java.lang.ClassLoader)
com.google.common.reflect.ClassPath.getTopLevelClasses()
com.google.common.reflect.ClassPath$ClassInfo.getName()
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ClassInfo.getName()
java.lang.String.endsWith(java.lang.String)
com.google.common.reflect.ClassPath$ClassInfo.load()
addTestSuite
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.reflect.ClassPath.from(java.lang.ClassLoader)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath.getTopLevelClasses()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$ClassInfo.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$ClassInfo.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.endsWith(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$ClassInfo.load()
Nenhuma sugestão fornecida.
**************************
Chamada: addTestSuite
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.ArrayBasedCharEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: escapeSlow
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.ArrayBasedEscaperMap.createReplacementArray(java.util.Map) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.isEmpty()
java.util.Map.keySet()
java.util.Collections.max(java.util.Collection)
java.util.Map.keySet()
java.util.Map.get(java.lang.Object)
java.lang.String.toCharArray()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.keySet()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.1750001135312612
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.isEmpty()
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.max(java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.keySet()
Também chamam:
java.util.Set.iterator()
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.toCharArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.escape.ArrayBasedUnicodeEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: escapeSlow
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.escape.CharEscaper.escape(C)
com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.escape.CharEscaper.escape(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
charBufferFromThreadLocal
java.lang.String.charAt(I)
com.google.common.escape.CharEscaper.escape(C)
com.google.common.escape.CharEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
com.google.common.escape.CharEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: charBufferFromThreadLocal
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.CharEscaper.escape(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.CharEscaper.growBuffer([C, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.getChars(I, I, [C, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.CharEscaper.growBuffer([C, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.getChars(I, I, [C, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.addEscapes([C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder$CharArrayDecorator.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: escapeSlow
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.Map.put(java.lang.Character, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.Character, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.toArray() ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.String.toCharArray()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.toCharArray()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.escape.Escapers$Builder.addEscape(C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.Map.put(java.lang.Character, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.put(java.lang.Character, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.lang.Character.isLowSurrogate(C)
java.lang.Character.toCodePoint(C, C)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 3
**************************
Chamada: java.lang.Character.isLowSurrogate(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.25
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.subSequence(I, I)
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.subSequence(I, I)
java.lang.CharSequence.toString()
Confiança: 0.21428568339287415
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Character.toCodePoint(C, C)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
charBufferFromThreadLocal
com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.escape(I)
java.lang.Character.isSupplementaryCodePoint(I)
com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: charBufferFromThreadLocal
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.UnicodeEscaper.escape(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Character.isSupplementaryCodePoint(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.getChars(I, I, [C, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.getChars(I, I, [C, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.net.PercentEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 4
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: escapeSlow
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.net.PercentEscaper.PercentEscaper(java.lang.String, Z) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.matches(java.lang.String)
java.lang.String.contains(java.lang.CharSequence)
com.google.common.net.PercentEscaper.createSafeOctets(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.matches(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.contains(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.net.PercentEscaper.createSafeOctets(java.lang.String)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.visitParameterizedType(java.lang.reflect.ParameterizedType) ************************
*Commit: commit cafb21d020445be9819d047961b2c8c3d8b956db 1366644473 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.ParameterizedType.getRawType()
java.lang.Class.getTypeParameters()
java.lang.reflect.ParameterizedType.getActualTypeArguments()
com.google.common.base.Preconditions.checkState(Z)
com.google.common.reflect.TypeResolver$TypeMappingIntrospector.map(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
visit
java.lang.reflect.ParameterizedType.getOwnerType()
visit
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getTypeParameters()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.ParameterizedType.getActualTypeArguments()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.map(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkState(Z)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.14285712226191608
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: visit
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.ParameterizedType.getOwnerType()
Nenhuma sugestão fornecida.
**************************
Chamada: visit
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.visitTypeVariable(java.lang.reflect.TypeVariable) ************************
*Commit: commit cafb21d020445be9819d047961b2c8c3d8b956db 1366644473 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.TypeVariable.getBounds()
visit
---------------- Chamadas de método adicionadas ---------------
Chamada: visit
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.TypeVariable.getBounds()
Também chamam:
java.lang.reflect.WildcardType.getUpperBounds()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.net.HostAndPort.getHostAndPortFromBracketedHost(java.lang.String) ************************
*Commit: commit e758192597c410ffed5ff2603ed15f6e6fdb74dc 1366748726 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.indexOf(I)
java.lang.String.lastIndexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.substring(I, I)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.substring(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.indexOf(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.lastIndexOf(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.substring(I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.isDigit(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.substring(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testAsMap_multimap() ************************
*Commit: commit a829dfef2d7ef2df54212d8fca416f4a3efdcef4 1369167150 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
asMap
com.google.common.collect.Multimap.asMap()
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: asMap
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.asMap()
Nenhuma sugestão fornecida.
**************************
Chamada: assertSame
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Confiança: 0.3666668012223034
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.FilteredMultimapValues.remove(java.lang.Object) ************************
*Commit: commit 1feb7a1a7bc73ca4b23ce576559775ffb8ff364c 1369172116 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
entryPredicate
unfiltered
entries
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getValue()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: unfiltered
Nenhuma sugestão fornecida.
**************************
Chamada: entries
Nenhuma sugestão fornecida.
**************************
Chamada: iterator
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.5
Suporte: 0.00247729
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ConstrainedMapTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.String) ************************
*Commit: commit b95fcde29c1ab99cfd08fabeb1005bde6f060f94 1369717291 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.equals(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.ConstrainedMapTest$ConstrainedMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit b95fcde29c1ab99cfd08fabeb1005bde6f060f94 1369717291 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.put(java.lang.String, java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(I, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.remove(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.net.TrieParser.parseTrie(java.lang.CharSequence) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
com.google.common.collect.ImmutableSet$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.builder()
Também chamam:
com.google.common.collect.ImmutableSet$Builder.build()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.net.TrieParser.reverse(java.lang.CharSequence) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.lang.Character.isSurrogatePair(C, C)
com.google.common.net.TrieParser.swap([C, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.lang.Character.isSurrogatePair(C, C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.net.TrieParser.swap([C, I, I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.RateLimiter.createWithCapacity(com.google.common.util.concurrent.RateLimiter$SleepingTicker, D, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit b8dc3cf5402498ec452f5d427122ae3686563ebc 1370547876 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
com.google.common.util.concurrent.RateLimiter.setRate(D)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.RateLimiter.setRate(D)
** Sugestões fornecidas **
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.System.nanoTime()
Confiança: 0.4545462051654667
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.interrupt()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.currentThread()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.Thread.currentThread()
java.lang.Thread.interrupt()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.concurrent.TimeUnit.toNanos(J)
Também chamam:
java.lang.System.nanoTime()
java.lang.System.nanoTime()
Confiança: 0.3181820683884889
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest.testRemoveUnsupported() ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.remove(java.lang.Object)
fail
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.6666691335266454
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset.add(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, I) ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map.put(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, java.lang.Integer)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 2
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.put(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset.entryIterator() ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
null.getElement()
java.util.Map.get(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6000007568762205
Suporte: 0.00792733
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8181793161151112
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.7857136678574828
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: null.getElement()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: MultiInputStream ************************
*Commit: commit 03ae95e3f18d44bb9ae9b6fe4fd054b4ec8a78f1 1371842962 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
com.google.common.io.MultiInputStream.advance()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.io.MultiInputStream.advance()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.6999993945008567
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
Também chamam:
java.util.Iterator.next()
Confiança: 0.6999993945008567
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
Também chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Confiança: 0.6999993945008567
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath.asClassPathString() ************************
*Commit: commit d20b08ea72dc8fc16e040fd9d86c3b307d826135 1372196499 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
com.google.common.collect.Sets.newLinkedHashSetWithExpectedSize(I)
java.util.Set.add(java.io.File)
value
com.google.common.base.Joiner.on(java.lang.String)
join
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Sets.newLinkedHashSetWithExpectedSize(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.size()
Confiança: 0.11290297377801649
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Set.size()
Também chamam:
java.util.Set.iterator()
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.io.File)
Nenhuma sugestão fornecida.
**************************
Chamada: value
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.on(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: join
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.SipHashFunction.SipHashFunction(I, I, J, J) ************************
*Commit: commit 35df6e874f188730e5f16441607999715615760a 1373386474 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6328442d5b19af1048f3ee2177f90f129df70520 1373473644 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.getCanonicalFile()
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
java.io.File.listFiles()
java.util.logging.Logger.warning(java.lang.String)
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.addAll(java.lang.Iterable)
com.google.common.collect.ImmutableSet$Builder.add(java.io.File)
com.google.common.collect.ImmutableSet$Builder.build()
java.io.File.getName()
java.io.File.isDirectory()
com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet)
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.File.listFiles()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.logging.Logger.warning(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet.builder()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.addAll(java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.builder()
Também chamam:
com.google.common.collect.ImmutableSet$Builder.build()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.io.File)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.File.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.io.File.isDirectory()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.equals(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.equals(java.lang.Object)
Também chamam:
java.lang.String.equals(java.lang.Object)
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Sets$PowerSet.PowerSet(java.util.Set) ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.base.Preconditions.checkNotNull(java.util.Set)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
java.util.Map.size()
java.util.Map.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Set)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Sets$SubSet.iterator() ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.lang.Integer.numberOfTrailingZeros(I)
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.numberOfTrailingZeros(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Sets$SubSet.iterator() ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.lang.Integer.numberOfTrailingZeros(I)
java.util.List.get(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.ImmutableCollection.asList()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Integer.numberOfTrailingZeros(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableCollection.asList()
Também chamam:
java.util.List.get(I)
Confiança: 0.3571431660712587
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Sets$PowerSet.PowerSet(java.util.Set) ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.base.Preconditions.checkNotNull(java.util.Set)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
java.util.Map.size()
java.util.Map.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Set)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.19999946177745306
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.1777775983702621
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.size()
Também chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.HashCode.fromBytes([B) ************************
*Commit: commit 5b19db451f68be2d4707174492ecad58467e6983 1375889561 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.lang.Object.clone()
com.google.common.hash.HashCode.fromBytesNoCopy([B)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.clone()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Também chamam:
java.util.Iterator.next()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.hash.HashCode.fromBytesNoCopy([B)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.hash.HashCode.fromString(java.lang.String) ************************
*Commit: commit 88e7a44f78968bcac26550166dec81a6176cb22d 1375889842 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.hash.HashCode.decode(C)
java.lang.String.charAt(I)
com.google.common.hash.HashCode.decode(C)
com.google.common.hash.HashCode.fromBytesNoCopy([B)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.HashCode.decode(C)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.HashCode.decode(C)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.HashCode.fromBytesNoCopy([B)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.ImmutableMap.copyOfEnumMap(java.util.Map) ************************
*Commit: commit 5de36fdaf41f71d04478de0cb074ff83953dc2e3 1376082970 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map$Entry.getKey()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: checkEntryNotNull
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.AbstractService.startAsync() ************************
*Commit: commit 3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756 1376316720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.enterIf(com.google.common.util.concurrent.Monitor$Guard)
com.google.common.util.concurrent.AbstractService.starting()
com.google.common.util.concurrent.AbstractService.doStart()
com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.util.concurrent.AbstractService.executeListeners()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.AbstractService.starting()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AbstractService.doStart()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Monitor.leave()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
Também chamam:
com.google.common.base.Throwables.propagate(java.lang.Throwable)
Confiança: 0.6875009460952757
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
Também chamam:
java.util.concurrent.locks.ReentrantLock.unlock()
Confiança: 0.5
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: com.google.common.util.concurrent.AbstractService.executeListeners()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.math.DoubleMath.mean(java.util.Iterator) ************************
*Commit: commit 53811089cf234fd2aacffa9d8f7aaa321f8c798c 1377216962 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Number.doubleValue()
com.google.common.math.DoubleMath$MeanAccumulator.add(D)
com.google.common.math.DoubleMath$MeanAccumulator.mean()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.lang.Number.doubleValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 0
**************************
Chamada: com.google.common.math.DoubleMath$MeanAccumulator.add(D)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.math.DoubleMath$MeanAccumulator.mean()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.setBits(java.util.BitSet) ************************
*Commit: commit 31e1f16989ec41b360b074caebdc58e0117ecf68 1377729049 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.charAt(I)
java.util.BitSet.set(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 1
**************************
Chamada: java.util.BitSet.set(I)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler.LoggingSubscriberExceptionHandler(java.lang.String) ************************
*Commit: commit 578686226d7245be5f72dc3007c8e29217ecbfc8 1379085283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.logging.Logger.getLogger(java.lang.String)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.logging.Logger.getLogger(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
Confiança: 0.313725024605861
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Confiança: 0.2745099901576556
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.String.length()
Confiança: 0.17647002952703322
Suporte: 0.00148637
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.11764712167820877
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testReentrantHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.hasNext()
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testException() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
fail
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testDefaultBehaviorOfNextAndHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
fail
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testExceptionAfterEndOfData() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testCantRemove() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testSneakyThrow() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
fail
com.google.common.base.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
java.util.Iterator.hasNext()
fail
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testCantRemove() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testDefaultBehaviorOfNextAndHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
fail
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00891825
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.19607810545978377
Suporte: 0.00495458
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.next()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.18518515403806798
Suporte: 0.00660611
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1830064428297795
Suporte: 0.00462428
Posição da Sugestão: 5
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertTrue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: assertFalse
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.34999969725042834
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset.contains(java.lang.Object)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.2999996972504284
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testReentrantHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.hasNext()
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testException() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
fail
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testExceptionAfterEndOfData() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.15075368016211577
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testSneakyThrow() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
fail
com.google.common.collect.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
java.util.Iterator.hasNext()
fail
java.util.Iterator.hasNext()
fail
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.1859295794361243
Suporte: 0.00611065
Posição da Sugestão: 4
**************************
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: fail
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.8108106338932848
Suporte: 0.00495458
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.7688450467665082
Suporte: 0.0252684
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
java.util.Iterator.remove()
Confiança: 0.2613064195171822
Suporte: 0.00858794
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.18918936610671533
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Utf8.utf8Length(java.lang.CharSequence) ************************
*Commit: commit d88df71d5ff0dfdda5e2cb557fca81164df0578b 1380904139 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Utf8.isValidUtf8([B, I, I) ************************
*Commit: commit d88df71d5ff0dfdda5e2cb557fca81164df0578b 1380904139 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Utf8.isValidUtf8NonAscii([B, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Utf8.isValidUtf8NonAscii([B, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.hash.Murmur3_32HashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 8c7fbd6d742eefad76a61442f4d78d37d9e5079c 1380904148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
com.google.common.hash.Murmur3_32HashFunction.mixH1(I, I)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
java.lang.CharSequence.length()
com.google.common.hash.Murmur3_32HashFunction.fmix(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixH1(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.hash.Murmur3_32HashFunction.fmix(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Utf8.length(java.lang.CharSequence) ************************
*Commit: commit ae827772191979fab74a46f64425187d747d1aa5 1381769648 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Utf8.isWellFormed([B, I, I) ************************
*Commit: commit ae827772191979fab74a46f64425187d747d1aa5 1381769648 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Utf8.isWellFormedSlowPath([B, I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Utf8.isWellFormedSlowPath([B, I, I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Também chamam:
java.util.Collections.emptyList()
Confiança: 0.39999878900171354
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.base.Utf8.encodedLength(java.lang.CharSequence) ************************
*Commit: commit a9ab3b8fcedba375d8f64e89a4aeba02a508de95 1381771153 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service$State) ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.util.concurrent.Service)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.util.concurrent.Monitor.enter()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Multimap.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
java.util.Map.get(java.lang.Object)
com.google.common.base.Stopwatch.start()
java.lang.Enum.compareTo(com.google.common.util.concurrent.Service$State)
com.google.common.base.Stopwatch.isRunning()
com.google.common.base.Stopwatch.stop()
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, [Ljava.lang.Object;)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireFailedListeners(com.google.common.util.concurrent.Service)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireHealthyListeners()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireStoppedListeners()
java.util.List.clear()
com.google.common.util.concurrent.Monitor.leave()
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Monitor.enter()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
java.util.Iterator.next()
Confiança: 0.07216507072497783
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z)
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimap.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Stopwatch.start()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.Enum.compareTo(com.google.common.util.concurrent.Service$State)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Stopwatch.isRunning()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Stopwatch.stop()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, [Ljava.lang.Object;)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireFailedListeners(com.google.common.util.concurrent.Service)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireHealthyListeners()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireStoppedListeners()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.List.clear()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Monitor.leave()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: null.isSatisfied() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimes() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.enter()
java.util.Collection.size()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Lists.newArrayListWithCapacity(I)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.base.Stopwatch.isRunning()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
elapsed
com.google.common.collect.Maps.immutableEntry(com.google.common.util.concurrent.Service, java.lang.Object)
java.util.List.add(java.util.Map$Entry)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Collections.sort(java.util.List, java.util.Comparator)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Collection.size()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Lists.newArrayListWithCapacity(I)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: java.util.Map.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.8125005518882146
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Stopwatch.isRunning()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: elapsed
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.util.concurrent.Service, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.util.Map$Entry)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.util.concurrent.Monitor.leave()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.natural()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.Collections.sort(java.util.List, java.util.Comparator)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.builder()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.16326495306141864
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.builder()
Também chamam:
com.google.common.collect.ImmutableMap$Builder.build()
Confiança: 0.9230736985267747
Suporte: 0.00198183
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.util.concurrent.Monitor.enter()
com.google.common.collect.SetMultimap.entries()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSetMultimap$Builder.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.collect.ImmutableSetMultimap$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.util.concurrent.Monitor.enter()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSetMultimap.builder()
Também chamam:
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.SetMultimap.entries()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: com.google.common.util.concurrent.Monitor.leave()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.ServiceManagerState(com.google.common.collect.ImmutableCollection) ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.Multimap.putAll(com.google.common.util.concurrent.Service$State, java.lang.Iterable)
createUnstarted
java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.util.concurrent.Service$State, java.lang.Iterable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Iterator.next()
Confiança: 0.1126763205921984
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.size()
Confiança: 0.09859199372324276
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Collection.size()
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: createUnstarted
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.checkHealthy() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.base.Predicates.equalTo(com.google.common.util.concurrent.Service$State)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.Multimaps.filterKeys(com.google.common.collect.Multimap, com.google.common.base.Predicate)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Predicates.equalTo(com.google.common.util.concurrent.Service$State)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getCount()
Confiança: 0.39473629698795853
Suporte: 0.00247729
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
com.google.common.collect.AbstractIterator.endOfData()
Confiança: 0.31578871890640414
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Multiset.count(java.lang.Object)
Também chamam:
com.google.common.collect.Multiset$Entry.getElement()
Confiança: 0.26315806246524354
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Multimaps.filterKeys(com.google.common.collect.Multimap, com.google.common.base.Predicate)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Utf8Test.testEncodedLength_validStrings2() ************************
*Commit: commit 8923e48737bb4dc5d4ceea7d09926cff1bc50af4 1384296650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.keySet()
java.util.Set.toArray([Ljava.lang.Integer;)
java.lang.AbstractStringBuilder.setLength(I)
java.util.Random.nextInt(I)
java.lang.StringBuilder.appendCodePoint(I)
java.util.HashMap.get(java.lang.Object)
encodedLength
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
encodedLength
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.keySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Set.toArray([Ljava.lang.Integer;)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.setLength(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Random.nextInt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.appendCodePoint(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.HashMap.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: encodedLength
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.AbstractStringBuilder.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.append(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.StringBuilder.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.StringBuilder.append(java.lang.String)
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.9090910341942444
Suporte: 0.00660611
Posição da Sugestão: 1
**************************
Chamada: encodedLength
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Utf8.encodedLengthGeneral(java.lang.CharSequence, I) ************************
*Commit: commit 8923e48737bb4dc5d4ceea7d09926cff1bc50af4 1384296650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: doParseTrieToBuilder ************************
*Commit: commit 7b006c485b0774137c05f17dbf29de7e59efd8ce 1384878132 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
fromCode
put
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(I, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: fromCode
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: put
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: doParseTrieToBuilder
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.List.remove(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: parseTrie ************************
*Commit: commit 7b006c485b0774137c05f17dbf29de7e59efd8ce 1384878132 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
builder
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
build
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: doParseTrieToBuilder
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: build
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit 5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8 1385005808 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(I, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.remove(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.net.TrieParser.parseTrie(java.lang.CharSequence) ************************
*Commit: commit 5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8 1385005808 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
com.google.common.collect.ImmutableSet$Builder.build()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableSet.builder()
Também chamam:
com.google.common.collect.ImmutableSet$Builder.build()
Confiança: 1.0
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Ascii.truncate(java.lang.CharSequence, I, java.lang.String) ************************
*Commit: commit 78f29ce2cc5a71253073a3ffb2c1ee52fb295429 1385005826 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.String.length()
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.CharSequence.length()
java.lang.CharSequence.toString()
java.lang.String.length()
java.lang.CharSequence.subSequence(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 3
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 3
**************************
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Também chamam:
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Confiança: 0.2342335806240454
Suporte: 0.00429397
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.toString()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 4
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 4
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
************************ Método Avaliado: doParseTrieToBuilder ************************
*Commit: commit 952ea2a5afa82239d572786eb62dc9758c0984eb 1385501622 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
fromCode
put
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(I, java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: fromCode
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: put
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: doParseTrieToBuilder
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 1.0
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: java.util.List.remove(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
************************ Método Avaliado: parseTrie ************************
*Commit: commit 952ea2a5afa82239d572786eb62dc9758c0984eb 1385501622 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
builder
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
build
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Lists.newLinkedList()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.26190455595249423
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.toString()
Confiança: 0.1904757785716551
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Chamada: java.lang.CharSequence.subSequence(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: doParseTrieToBuilder
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.subSequence(I, I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.750001513752441
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: build
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Ascii.equalsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence) ************************
*Commit: commit c2b87dfc444952ba159da9f16e26f1921e5367fc 1386092573 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.getAlphaIndex(C)
com.google.common.base.Ascii.getAlphaIndex(C)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.CharSequence.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.6428561130958044
Suporte: 0.00445912
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.length()
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: java.lang.CharSequence.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 5
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 5
**************************
Chamada: com.google.common.base.Ascii.getAlphaIndex(C)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.40740773964369653
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
com.google.common.base.CharMatcher.matches(C)
Confiança: 0.3928568339287414
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.29629613017815176
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.toString()
Confiança: 0.2857136678574827
Suporte: 0.00132122
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Também chamam:
java.lang.CharSequence.charAt(I)
Confiança: 0.2592596745546207
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Chamada: com.google.common.base.Ascii.getAlphaIndex(C)
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeEntriesIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.entrySet()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
Também chamam:
java.util.Map.entrySet()
Confiança: 0.43333440977842724
Suporte: 0.00214699
Posição da Sugestão: 1
**************************
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.846152054737097
Suporte: 0.00181668
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.isEmpty()
Também chamam:
java.util.Collection.size()
Confiança: 0.15555573496307118
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.size()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Collection.size()
Também chamam:
java.util.Collection.clear()
Confiança: 0.14084582715038632
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Collection.clear()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.StandardTable$Column.removeFromColumnIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
com.google.common.base.Predicate.apply(null)
java.util.Map.remove(java.lang.Object)
java.util.Map.isEmpty()
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Set.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6125013245333859
Suporte: 0.00809249
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.608696567864768
Suporte: 0.00231214
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Set.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.9285712226191608
Suporte: 0.00644096
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.9090924103309334
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8888903839555425
Suporte: 0.00132122
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.entrySet()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.remove(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map$Entry.getValue()
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 1.0
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map.isEmpty()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.remove()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Map.isEmpty()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
Posição da Sugestão: 1
**************************
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeEntryIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.List.add(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
java.util.List.isEmpty()
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Predicate.apply(null)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Iterator.remove()
Confiança: 0.25
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.base.Predicate.apply(null)
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(com.google.common.collect.Range)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.isEmpty()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: asConverter ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
com.google.common.collect.BiMap.inverse()
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsConverter_nominal() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
asConverter
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
convert
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: asConverter
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getValue()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 1
**************************
Chamada: convert
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6424601604070048
Suporte: 0.0189926
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.09497231270909232
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Confiança: 0.06703910047594402
Suporte: 0.00198183
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.05586608619762332
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsConverter_inverse() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
asConverter
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
reverse
java.util.Map$Entry.getValue()
convert
assertSame
---------------- Chamadas de método adicionadas ---------------
Chamada: asConverter
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map$Entry.getKey()
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.6250018921905512
Suporte: 0.00165153
Posição da Sugestão: 1
**************************
Chamada: reverse
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.6999993945008567
Suporte: 0.00115607
Posição da Sugestão: 1
**************************
Chamada: java.util.Map$Entry.getValue()
Nenhuma sugestão fornecida.
**************************
Chamada: convert
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getKey()
Confiança: 0.1256544784778184
Suporte: 0.00396367
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.10471211823409692
Suporte: 0.00330306
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Também chamam:
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Confiança: 0.08695649884691933
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Collection.contains(java.lang.Object)
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map$Entry.getValue()
Também chamam:
java.util.Map$Entry.getValue()
Confiança: 0.08376944097488602
Suporte: 0.00264244
Posição da Sugestão: 0
**************************
Chamada: assertSame
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Converter.convertAll(java.lang.Iterable) ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable, java.lang.Object)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Converter.convert(com.google.common.base.Converter$A)
java.util.Iterator.remove()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Iterable.iterator()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.hasNext()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.27058769055421
Suporte: 0.00379851
Posição da Sugestão: 1
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 0.826087070983096
Suporte: 0.0031379
Posição da Sugestão: 1
**************************
Chamada: com.google.common.base.Converter.convert(com.google.common.base.Converter$A)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Iterable.iterator()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.hasNext()
Confiança: 0.368421555817585
Suporte: 0.00115607
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.Iterator.hasNext()
java.util.Iterator.next()
Também chamam:
java.util.Iterator.remove()
Confiança: 0.33986876889712053
Suporte: 0.00858794
Posição da Sugestão: 2
**************************
Chamada: java.util.Iterator.remove()
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.base.Converter$ConverterComposition.hashCode() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
com.google.common.collect.Hashing.smear(I)
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 0.1923080505918765
Suporte: 0.00165153
Posição da Sugestão: 2
**************************
************************ Método Avaliado: asConverter ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
com.google.common.collect.BiMap.inverse()
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.collect.BiMap.inverse()
Nenhuma sugestão fornecida.
**************************
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.net.InternetDomainNameTest.testToString() ************************
*Commit: commit 5313166b8407e06bf63c8fea4531bd57c3039f54 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.net.InternetDomainName.from(java.lang.String)
com.google.common.base.Ascii.toLowerCase(java.lang.String)
java.lang.String.replaceAll(java.lang.String, java.lang.String)
java.lang.String.endsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
com.google.common.net.InternetDomainName.toString()
assertEquals
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Ascii.toLowerCase(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.replaceAll(java.lang.String, java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.endsWith(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.substring(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.charAt(I)
Confiança: 0.4250004919687986
Suporte: 0.0028076
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.toString()
Confiança: 0.3500002270625224
Suporte: 0.00231214
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.String.length()
Confiança: 0.32500064334381357
Suporte: 0.00214699
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
Também chamam:
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Confiança: 0.2749999621562463
Suporte: 0.00181668
Posição da Sugestão: 0
**************************
Chamada: com.google.common.net.InternetDomainName.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: assertEquals
Nenhuma sugestão fornecida.
**************************
************************ Método Avaliado: com.google.common.collect.Maps$BiMapConverter.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$BiMapConverter$(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Ljava/lang/Object;$X) ************************
*Commit: commit 4d75431608106c4e7a25bff35e22d2474ed30689 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.Maps$BiMapConverter.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$BiMapConverter$(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Ljava/lang/Object;$X) ************************
*Commit: commit 4d75431608106c4e7a25bff35e22d2474ed30689 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
java.util.Map.remove(java.lang.Object)
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.Map.get(java.lang.Object)
Também chamam:
com.google.common.collect.Count.get()
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues() ************************
*Commit: commit 2a8a6a72d8f274d2b77e3b092197288bb5cebf86 1387492514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues(java.util.Comparator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
************************ Método Avaliado: com.google.common.collect.MultimapBuilder.treeKeys() ************************
*Commit: commit 2a8a6a72d8f274d2b77e3b092197288bb5cebf86 1387492514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.MultimapBuilder.treeKeys(java.util.Comparator)
---------------- Chamadas de método adicionadas ---------------
Chamada: com.google.common.collect.MultimapBuilder.treeKeys(java.util.Comparator)
** Sugestões fornecidas **
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
java.util.Arrays.asList([Ljava.lang.Comparable;)
Confiança: 0.1694918211290834
Suporte: 0.00165153
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.natural()
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Confiança: 0.11864417216320589
Suporte: 0.00115607
Posição da Sugestão: 0
**************************
Usuários que chamam:
com.google.common.collect.Ordering.natural()
Também chamam:
com.google.common.collect.Ordering.reverse()
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
Posição da Sugestão: 0
**************************
