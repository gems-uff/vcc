************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.copyOf(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.build() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.nio.ByteBuffer.allocate(I)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
com.google.common.base.CharMatcher.matches(C)
java.nio.ByteBuffer.put(B)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
java.nio.Buffer.flip()
com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.nio.ByteBuffer.allocate(I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: java.nio.ByteBuffer.put(B)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: java.nio.Buffer.flip()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.encode([B, I, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.Character.charValue()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.1
Corretude: 1.0
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.iterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
com.google.common.collect.Iterators.checkRemove(Z)
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Iterators.checkRemove(Z)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
com.google.common.collect.Iterators.emptyModifiableIterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.createKeySet() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.23529411764705882
Corretude: 1.0
F-Measure: 0.38095238095238093
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.1
Corretude: 1.0
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.1
Corretude: 1.0
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.removeAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.removeAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.retainAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.retainAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.distinctElements() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.size()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createEntrySet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.base.Predicate.apply(null)
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.clear() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.clear()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
null.iterator()
java.util.Iterator.hasNext()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.041666666666666664
Corretude: 1.0
F-Measure: 0.07999999999999999
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Percentual de Automatização: 0.06666666666666667
Corretude: 1.0
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
get
com.google.common.collect.Lists.newArrayList()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
java.util.List.isEmpty()
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.Collections.unmodifiableSet(java.util.Set)
java.util.Collections.unmodifiableList(java.util.List)
Chamada: asMap
Situação: Primeira Chamada
Chamada: get
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collections.unmodifiableSet(java.util.Set)
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.remove(java.lang.Object, I) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
asMap
get
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
Situação: Manual
Chamada: asMap
Situação: Manual
Chamada: get
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.125
Corretude: 1.0
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startupTimes() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Map.entrySet()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.125
Corretude: 0.6666666666666666
F-Measure: 0.21052631578947367
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.ServiceManager(java.lang.Iterable) ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
java.util.List.size()
com.google.common.collect.ImmutableMap.builder()
com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Percentual de Automatização: 0.125
Corretude: 1.0
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollFirstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollLastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperBoundType()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
java.util.Map.containsKey(java.lang.Object)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.belowAll()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Range.upperBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.lowerEndpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.Map$Entry.getKey()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.045454545454545456
Corretude: 1.0
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Cut.typeAsUpperBound()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.typeAsUpperBound()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.05263157894736842
Corretude: 1.0
F-Measure: 0.1
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.entryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.045454545454545456
Corretude: 1.0
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.cache.LocalCache$Segment.insertLoadingValueReference(com.google.common.cache.LocalCache$Segment$K, I, Z) ************************
*Commit: commit 75085833f67d07b9dcc071e0703cb1027e6c0b28 1356041333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
com.google.common.cache.LocalCache$ValueReference.isLoading()
com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
java.util.concurrent.locks.ReentrantLock.unlock()
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Chamada: java.util.concurrent.locks.ReentrantLock.lock()
Situação: Primeira Chamada
Chamada: com.google.common.base.Ticker.read()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.length()
Situação: Automatizada
Índice da Sugestão: 9
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Situação: Automatizada
Índice da Sugestão: 8
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Situação: Automatizada
Índice da Sugestão: 10
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ValueReference.isLoading()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9750004162812911
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Útil
Método: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Útil
Método: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.length()
Útil
Método: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Útil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Útil
Percentual de Automatização: 0.6470588235294118
Corretude: 1.0
F-Measure: 0.7857142857142858
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.18181818181818182
Corretude: 1.0
F-Measure: 0.3076923076923077
************************ Método Avaliado: com.google.common.reflect.ClassPath.getTopLevelClasses() ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
com.google.common.collect.Collections2.newStringBuilderForCollection(I)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.collect.RegularImmutableList.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.newStringBuilderForCollection(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 1.0
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.String.length()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.Object.toString()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList.builder()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.125
Corretude: 1.0
F-Measure: 0.2222222222222222
