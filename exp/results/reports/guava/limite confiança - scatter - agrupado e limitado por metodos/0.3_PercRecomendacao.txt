************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.RangeSet.complement()
com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Chamada: com.google.common.collect.RangeSet.complement()
Situação: Manual
Chamada: com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: asMapOfRanges
Situação: Manual
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7777807679110853
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Range.isEmpty()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.5
F-Measure: 0.14285714285714285
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.copyOf(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.build() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$AsMapOfRanges.entrySet() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
java.util.Map.size()
Chamada: java.util.SortedMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.Map.remove(java.lang.Object)
java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Map.clear()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Percentual de Automatização: 0.08
Corretude: 1.0
F-Measure: 0.14814814814814814
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.precomputed()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.3076923076923077
Corretude: 0.5
F-Measure: 0.380952380952381
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.nio.ByteBuffer.allocate(I)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
com.google.common.base.CharMatcher.matches(C)
java.nio.ByteBuffer.put(B)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
java.nio.Buffer.flip()
com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.nio.ByteBuffer.allocate(I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40740773964369653
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: java.nio.ByteBuffer.put(B)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: java.nio.Buffer.flip()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.13333333333333333
Corretude: 0.6666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.encode([B, I, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.Character.charValue()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.util.Collections.emptyList()
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.3
Corretude: 0.5
F-Measure: 0.37499999999999994
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.comparator() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.createEntrySet() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.entryIterator()
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.3548383316340283
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Set.size()
Útil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.span() ************************
*Commit: commit 4dfc92182081e9695d38772ba528faf7fef75ff6 1351548078 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.isPartialView() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isPartialView()
java.util.List.size()
java.util.List.size()
Chamada: com.google.common.collect.ImmutableCollection.isPartialView()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.iterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.iterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.125
Corretude: 0.5
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.descendingIterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.reverse()
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.descendingIterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
Chamada: com.google.common.collect.ImmutableList.reverse()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.descendingIterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.5
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableList.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.hasLowerBound()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.Range.hasUpperBound()
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.size()
com.google.common.collect.ImmutableList.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Situação: Manual
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Manual
Chamada: upperBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: lowerBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.0625
Corretude: 0.5
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.asSet(com.google.common.collect.DiscreteDomain, com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DiscreteDomain)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeSet.isEmpty()
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.DiscreteDomain.maxValue()
com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
java.util.List.size()
com.google.common.collect.ImmutableSortedSet.of()
java.util.List.get(I)
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DiscreteDomain)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.DiscreteDomain.maxValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.Range.isEmpty()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.0625
Corretude: 0.3333333333333333
F-Measure: 0.10526315789473684
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction.hashObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel) ************************
*Commit: commit a4bd0dd6fbcc7cd349ebd7c2ded2f5509f7d2ca6 1352489028 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
com.google.common.hash.Hasher.hash()
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Primeira Chamada
Chamada: com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
Situação: Manual
Chamada: com.google.common.hash.Hasher.hash()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181793161151112
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.hasNext() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.iterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
com.google.common.collect.Iterators.checkRemove(Z)
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Iterators.checkRemove(Z)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 9
Confiança: 0.43478363884786403
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5555555555555556
Corretude: 1.0
F-Measure: 0.7142857142857143
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Collection.size()
com.google.common.collect.Collections2.cast(java.lang.Iterable)
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
java.util.Collection.size()
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Collections2.cast(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Iterables.addAll(java.util.Collection, java.lang.Iterable)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.Iterable.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.retainAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.retainAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.isEmpty()
java.util.Map.remove(java.lang.Object)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
com.google.common.collect.Iterators.emptyModifiableIterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6571418685719723
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.replaceValues(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.826087070983096
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.6666666666666666
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6571418685719723
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Collection.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollFirstEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Chamada: com.google.common.collect.AbstractMultimap$AsMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Map$Entry.getValue()
java.util.Collection.addAll(java.util.Collection)
java.util.Iterator.remove()
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.6666666666666666
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollLastEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$NavigableAsMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.descendingMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableBiMap.of()
com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableBiMap.of()
Situação: Manual
Chamada: com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.05555555555555555
Corretude: 1.0
F-Measure: 0.10526315789473684
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.precomputed()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.3076923076923077
Corretude: 0.5
F-Measure: 0.380952380952381
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: write
Situação: Manual
Chamada: write
Situação: Manual
Chamada: flush
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.125
Corretude: 0.25
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
encodingStream
write
close
toString
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Manual
Chamada: stringBuilderOutput
Situação: Manual
Chamada: encodingStream
Situação: Manual
Chamada: write
Situação: Manual
Chamada: close
Situação: Manual
Chamada: toString
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
decodingStream
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: asCharInput
Situação: Primeira Chamada
Chamada: decodingStream
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.Math.max(I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.length()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: write
Situação: Manual
Chamada: write
Situação: Manual
Chamada: flush
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.125
Corretude: 0.25
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
write
close
toString
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Manual
Chamada: stringBuilderOutput
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
Situação: Manual
Chamada: write
Situação: Manual
Chamada: close
Situação: Manual
Chamada: toString
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: asCharInput
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.io.Closeables.close(java.io.Closeable, Z)
Inútil
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.Math.max(I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asInputStream(com.google.common.io.GwtWorkarounds$ByteInput) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.GwtWorkarounds$ByteInput)
com.google.common.io.GwtWorkarounds$ByteInput.read()
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$ByteInput.close()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.GwtWorkarounds$ByteInput)
Situação: Primeira Chamada
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.read()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$3.read()
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$3.read()
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.close()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.length()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollLastEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.NavigableMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.createKeySet() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.3095242214283449
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5238091119049885
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 10
Confiança: 0.3095242214283449
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.5238091119049885
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.47058823529411764
Corretude: 0.6666666666666666
F-Measure: 0.5517241379310345
************************ Método Avaliado: com.google.common.io.ByteSource.hash(com.google.common.hash.HashFunction) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
com.google.common.hash.Hasher.hash()
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Primeira Chamada
Chamada: com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
Situação: Manual
Chamada: com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
Situação: Manual
Chamada: com.google.common.hash.Hasher.hash()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181793161151112
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.CharSink.writeLines(java.lang.Iterable, java.lang.String) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
create
com.google.common.io.CharSink.openBufferedStream()
add
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.append(java.lang.CharSequence)
rethrow
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: create
Situação: Manual
Chamada: com.google.common.io.CharSink.openBufferedStream()
Situação: Manual
Chamada: add
Situação: Manual
Chamada: java.io.Writer.append(java.lang.CharSequence)
Situação: Manual
Chamada: java.io.Writer.append(java.lang.CharSequence)
Situação: Manual
Chamada: rethrow
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.Iterable.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.lines() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.lang.String.isEmpty()
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.826087070983096
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6666666666666666
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.readFirstLine() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.CharStreams$StringCharSource.lines()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.io.CharStreams$StringCharSource.lines()
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.826087070983096
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.toString() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: FileByteSink ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.io.File)
com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.io.File)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkNotNull(java.nio.charset.Charset)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882355036329961
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5227268974172666
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882355036329961
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5227268974172666
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.primitives.Longs.tryParse(java.lang.String) ************************
*Commit: commit 4fa056813cc1db3c594f0d0d8560d65c63c81b7d 1353009812 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.isEmpty()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.8333333333333334
F-Measure: 0.625
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.8333333333333334
F-Measure: 0.625
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createElementSet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.count(java.lang.Object) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.base.Predicate.apply(null)
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.removeAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.removeAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.FilteredMultiset(com.google.common.collect.Multiset, com.google.common.base.Predicate) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Multiset.entrySet()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.retainAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.retainAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.distinctElements() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.size()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createEntrySet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.base.Predicate.apply(null)
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Set.size()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.1111111111111111
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.clear() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.clear()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range) ************************
*Commit: commit 6506c4d1e0237dc5a3c875d2d10c329e902c5523 1354126427 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableRangeMap.of()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.ImmutableRangeMap.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
com.google.common.collect.ImmutableList.subList(I, I)
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.of()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7777807679110853
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Chamada: upperBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: lowerBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.subList(I, I)
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Range.isEmpty()
Útil
Percentual de Automatização: 0.0625
Corretude: 1.0
F-Measure: 0.11764705882352941
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.get(java.lang.Object) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.equals(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
null.iterator()
java.util.Iterator.hasNext()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.125
Corretude: 0.75
F-Measure: 0.21428571428571427
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.List.add(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
java.util.List.isEmpty()
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.List.add(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.span() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.TreeRangeMap$K)
com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.TreeRangeMap$K)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps$Keys.entryIterator()
com.google.common.collect.FilteredEntryMultimap.keySet()
java.util.Set.size()
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
com.google.common.base.Predicate.apply(null)
com.google.common.base.Predicates.in(java.util.Collection)
null.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
null.removeIf(com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multimaps$Keys.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.FilteredEntryMultimap.keySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: null.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.removeIf(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.07692307692307693
Corretude: 0.5
F-Measure: 0.13333333333333336
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7083334384547654
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collection.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
get
com.google.common.collect.Lists.newArrayList()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
java.util.List.isEmpty()
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.Collections.unmodifiableSet(java.util.Set)
java.util.Collections.unmodifiableList(java.util.List)
Chamada: asMap
Situação: Primeira Chamada
Chamada: get
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collections.unmodifiableSet(java.util.Set)
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.values() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
java.util.Collection.equals(java.lang.Object)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
com.google.common.base.Predicates.in(java.util.Collection)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7083334384547654
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Collection.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: valueFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: valueFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.13043478260869565
Corretude: 1.0
F-Measure: 0.23076923076923078
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.remove(java.lang.Object, I) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
asMap
get
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
Situação: Manual
Chamada: asMap
Situação: Manual
Chamada: get
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.375
Corretude: 1.0
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7083334384547654
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.11764705882352941
Corretude: 0.6666666666666666
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap.createEntries() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.FilteredKeyMultimap.entryIterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
containsEntry
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
remove
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: com.google.common.collect.FilteredKeyMultimap.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: containsEntry
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7058804673030347
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: remove
Situação: Manual
Chamada: keyFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: entries
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: keyFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: entries
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.08695652173913043
Corretude: 0.5
F-Measure: 0.14814814814814817
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$AddRejectingList.addAll(I, java.util.Collection) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.base.Preconditions.checkPositionIndex(I, I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndex(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startAsync() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap.values()
com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.3333333333333333
F-Measure: 0.25
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.isOccupiedByCurrentThread()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
java.util.Queue.poll()
java.lang.Runnable.run()
Chamada: com.google.common.util.concurrent.Monitor.isOccupiedByCurrentThread()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Queue.poll()
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startupTimes() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Map.entrySet()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.75
F-Measure: 0.375
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.ServiceManager(java.lang.Iterable) ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
java.util.List.size()
com.google.common.collect.ImmutableMap.builder()
com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.125
Corretude: 0.3333333333333333
F-Measure: 0.18181818181818182
************************ Método Avaliado: asByteSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: asCharSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.io.Closeables.close(java.io.Closeable, Z)
Inútil
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.75
Corretude: 0.75
F-Measure: 0.75
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.75
Corretude: 0.75
F-Measure: 0.75
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollFirstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.lastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.firstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.collect.AbstractMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollLastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33986876889712053
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.3548383316340283
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Set.size()
Útil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.3548383316340283
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Set.size()
Útil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.base.Ascii.toLowerCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toLowerCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.base.Ascii.toUpperCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toUpperCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.collect.AbstractNavigableMap$DescendingMap.comparator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractNavigableMap$DescendingMap.delegate()
java.util.SortedMap.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.AbstractNavigableMap$DescendingMap.delegate()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperBoundType()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
java.util.Map.containsKey(java.lang.Object)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.belowAll()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Range.upperBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.027777777777777776
Corretude: 0.3333333333333333
F-Measure: 0.05128205128205128
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.lowerEndpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.038461538461538464
Corretude: 0.3333333333333333
F-Measure: 0.06896551724137931
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.tailMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.firstEntry()
java.util.Map$Entry.getKey()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.tailMap(com.google.common.collect.Cut, Z)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.firstEntry()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.Map$Entry.getKey()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.5
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.05
Corretude: 0.3333333333333333
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.collect.TreeRangeSet.rangeEnclosing(com.google.common.collect.Range) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Range.isEmpty()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Cut.typeAsUpperBound()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.typeAsUpperBound()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.10526315789473684
Corretude: 0.5
F-Measure: 0.17391304347826086
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.SubRangeSetRangesByLowerBound(com.google.common.collect.Range, com.google.common.collect.Range, java.util.NavigableMap) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Range.isEmpty()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
valueOrNull
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map.get(java.lang.Object)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: valueOrNull
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.entryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.6666666666666666
F-Measure: 0.16
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
Chamada: com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
Situação: Primeira Chamada
Chamada: java.security.MessageDigest.getDigestLength()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, I, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
Situação: Manual
Chamada: java.security.MessageDigest.getDigestLength()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.cache.LocalCache$Segment.insertLoadingValueReference(com.google.common.cache.LocalCache$Segment$K, I, Z) ************************
*Commit: commit 75085833f67d07b9dcc071e0703cb1027e6c0b28 1356041333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
com.google.common.cache.LocalCache$ValueReference.isLoading()
com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
java.util.concurrent.locks.ReentrantLock.unlock()
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Chamada: java.util.concurrent.locks.ReentrantLock.lock()
Situação: Primeira Chamada
Chamada: com.google.common.base.Ticker.read()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5499999243124926
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5499999243124926
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Situação: Automatizada
Índice da Sugestão: 10
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 8
Confiança: 0.4500000756875075
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ValueReference.isLoading()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9750004162812911
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
Inútil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Útil
Método: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Útil
Método: com.google.common.cache.LocalCache$ValueReference.get()
Inútil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Útil
Método: com.google.common.collect.MapMakerInternalMap$Segment.postWriteCleanup()
Inútil
Método: com.google.common.collect.MapMakerInternalMap$ReferenceEntry.getValueReference()
Inútil
Método: com.google.common.cache.LocalCache$Segment.enqueueNotification(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause)
Inútil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Útil
Método: com.google.common.collect.MapMakerInternalMap$ReferenceEntry.getKey()
Inútil
Método: com.google.common.collect.MapMakerInternalMap$Segment.enqueueNotification(com.google.common.collect.MapMakerInternalMap$Segment$K, I, com.google.common.collect.MapMakerInternalMap$Segment$V, com.google.common.collect.MapMaker$RemovalCause)
Inútil
Método: com.google.common.collect.MapMakerInternalMap$ReferenceEntry.getHash()
Inútil
Método: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Útil
Método: com.google.common.collect.MapMakerInternalMap$Segment.removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry, com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
Inútil
Método: com.google.common.collect.MapMakerInternalMap$ValueReference.get()
Inútil
Método: java.util.concurrent.atomic.AtomicReferenceArray.length()
Útil
Método: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Útil
Método: com.google.common.collect.MapMakerInternalMap$ReferenceEntry.getNext()
Inútil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Útil
Método: com.google.common.cache.LocalCache$Segment.removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause)
Inútil
Método: com.google.common.cache.LocalCache$ValueReference.isActive()
Inútil
Percentual de Automatização: 0.6470588235294118
Corretude: 0.4583333333333333
F-Measure: 0.5365853658536585
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.rowKeySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Útil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.List.get(I)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.36363636363636365
Corretude: 1.0
F-Measure: 0.5333333333333333
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$CellSet.contains(java.lang.Object) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
com.google.common.collect.Table$Cell.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.List.get(I)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.75
F-Measure: 0.6
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.DenseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
java.util.Set.size()
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
java.util.Map.size()
java.util.Map.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Table$Cell.getValue()
Chamada: java.util.Set.size()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.createValues() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.reflect.ClassPath.getTopLevelClasses() ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.reflect.ClassPath$ResourceInfo.ResourceInfo(java.lang.String, java.lang.ClassLoader) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath.browse(java.net.URI, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.URI.getScheme()
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
Chamada: java.net.URI.getScheme()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
java.util.List.size()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.collect.RegularImmutableList.size()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
com.google.common.collect.Collections2.newStringBuilderForCollection(I)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.collect.RegularImmutableList.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.newStringBuilderForCollection(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.44897923877570434
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.42857142857142855
Corretude: 1.0
F-Measure: 0.6
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.String.length()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.Object.toString()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3500002270625224
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.6
F-Measure: 0.6
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
java.lang.Object.equals(java.lang.Object)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2.safeRemove(java.util.Collection, java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
java.util.Collection.remove(java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$NavigableAsMapView.get(java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.contains(java.lang.Object)
com.google.common.base.Function.apply(null)
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
Chamada: java.util.Queue.remove()
Situação: Primeira Chamada
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
Chamada: java.util.Queue.remove()
Situação: Primeira Chamada
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray([Ljava.lang.Object;) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray() ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.toArray()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.retainAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: keyFunction
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.remove(java.lang.Object) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7058804673030347
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.5
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.removeAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: keyFunction
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 1.0
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.ImmutableBiMap.of()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Comparator.compare(null, null)
Situação: Manual
Chamada: java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Comparator.compare(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList.builder()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: closedTableSize
Situação: Primeira Chamada
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.058823529411764705
Corretude: 1.0
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
java.util.Map$Entry.getKey()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
java.util.Map$Entry.getValue()
com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
java.util.Map$Entry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Primeira Chamada
Chamada: closedTableSize
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.keyFunction()
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.keyFunction()
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
