************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.neitherLogSuccessNorFailedForViolatedAssumption() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.logFailingTest() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatchmanTest.logFailingTest() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatchmanTest.neitherLogSuccessNorFailedForViolatedAssumption() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.runners.model.TestClass.isANonStaticInnerClass() ************************
*Commit: commit 1014436692b0829a7287fbab81ef8720309d7945 1316380846 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.isMemberClass()
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.EventCollector.everyTestRunSuccessful() ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.rules.EventCollector.hasNoFailure()
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.junit.tests.experimental.rules.EventCollector.hasNoAssumptionFailure()
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.tests.experimental.rules.EventCollector.hasNoAssumptionFailure()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.EventCollector.hasSingleFailureWithMessage(org.hamcrest.Matcher) ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.rules.EventCollector.hasSingleFailure()
org.hamcrest.Matcher.matches(java.lang.Object)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.Description.appendText(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assume.assumeTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assume.assumeTrue(Z)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
** Sugestões fornecidas **
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assume.assumeTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Matcher.matches(java.lang.Object)
Também chamam:
org.junit.Assume.assumeTrue(Z)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.usesFieldAndMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.clear()
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodOnFailure() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodUseCustomMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodSucceeded() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: java.lang.Class.getName()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodBeforesAndAfters() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidateWrongTypedFieldInSuperclass() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0153752
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidateWrongTypedField() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0153752
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.usesFieldAndMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.clear()
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidatePrivateRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0153752
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.meaningfulFailureWhenParametersAreNotAnIterable() ************************
*Commit: commit 5475e12b57f5af0140deffa7f45c75dc47803167 1319153357 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.toString()
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.toString()
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.toString()
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.meaningfulFailureWhenParametersAreNotArrays() ************************
*Commit: commit 5475e12b57f5af0140deffa7f45c75dc47803167 1319153357 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.toString()
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.toString()
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.toString()
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionRuleTest.failsWithWrongCause() ************************
*Commit: commit 3b8708636ffc1a9fc970b66db73c09095dabc2e2 1328717292 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
java.lang.Throwable.toString()
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Throwable.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0153752
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.usesIndexAsTestName() ************************
*Commit: commit e0cddcdfa8ec823da136af500cce0910a1dd2264 1330726681 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
java.util.ArrayList.get(I)
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Request.getRunner()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Runner.getDescription()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getChildren()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getDisplayName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getDisplayName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.listening.TestListenerTest.reportsFailureOfListener() ************************
*Commit: commit 0ce06206263ed060bd0ede049c1713286c2487ea 1331341514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getDescription()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TempFolderRuleTest.nameClashesResultInTestFailures() ************************
*Commit: commit 5baa714c5fe4d16dca9dea8c73c6d8702dfd71f2 1334086775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.nullWithMessage() ************************
*Commit: commit c19ffebced2cfda962d868ba76e0dbfb3504cc37 1335085801 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.Assert.fail()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.nullNullmessage() ************************
*Commit: commit c19ffebced2cfda962d868ba76e0dbfb3504cc37 1335085801 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.assertNull(java.lang.Object)
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.Assert.fail()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Throwable.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointsMustBePublic() ************************
*Commit: commit 0deeda931d45a23413e1c84a1966469deadfdb83 1338719881 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Também chamam:
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 2
**************************
************************ Método Avaliado: org.junit.experimental.runners.Enclosed.filterOutAbstractClasses([Ljava.lang.Class;) ************************
*Commit: commit 0c458a8796cc5ffcda5286ee4a367c8e31ae7c88 1340228728 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isAbstract(I)
java.util.Set.add(java.lang.Class)
java.util.Set.toArray([Ljava.lang.Class;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Modifier.isAbstract(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.toArray([Ljava.lang.Class;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.runners.Enclosed.filterAbstractClasses([Ljava.lang.Class;) ************************
*Commit: commit ebb9d7f536a5b1be8364c6cb7367cac8c3849caa 1340300379 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isAbstract(I)
java.util.Set.add(java.lang.Class)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Class;)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Modifier.isAbstract(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.add(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.size()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Set.toArray([Ljava.lang.Class;)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherThrowsException() ************************
*Commit: commit c07b3e7ea1b23d84590c2781b978f15e40c94703 1340550113 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherStartingThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherFailedAndFinishedThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherFailedThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodOnSkipped() ************************
*Commit: commit 08c3b3aa633385373b08285225e58c6ee0ab8092 1340646881 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.Result.getRunCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getRunCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.plansNamedCorrectlyWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
java.util.ArrayList.get(I)
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Request.getRunner()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Runner.getDescription()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getChildren()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.ArrayList.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getDisplayName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getDisplayName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.numberOfFieldsAndParametersShouldMatch() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.contains(java.lang.CharSequence)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 2
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.failureOnInitialization() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.failuresNamedCorrectlyWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getTestHeader()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
Também chamam:
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getTestHeader()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.countWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointArrayValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Object) ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Array.getLength(java.lang.Object)
java.lang.reflect.Array.get(java.lang.Object, I)
java.lang.Object.getClass()
org.junit.experimental.theories.internal.AllMembersSupplier.isCorrectlyTyped(org.junit.experimental.theories.ParameterSignature, java.lang.Class)
java.lang.reflect.Array.get(java.lang.Object, I)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.getClass()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.isCorrectlyTyped(org.junit.experimental.theories.ParameterSignature, java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.TypeMatchingBetweenMultiDataPointsMethod.ignoreWrongTypedDataPointsMethod() ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.TypeMatchingBetweenMultiDataPointsMethod.pickUpMultiPointDataPointMethods() ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.assumptionsWithMessageAndCause() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getCause()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.contains(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getCause()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.assumptionsWithMessage() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.contains(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.failedAssumptionsWithMessage() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.contains(java.lang.CharSequence)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.get(I)
java.lang.String.contains(java.lang.CharSequence)
Também chamam:
org.junit.Assert.assertTrue(Z)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherSkippedThrowsException() ************************
*Commit: commit a982920ee8036d001aa4a223a2521be28681ec27 1349074214 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.AllMembersSupplierTest.dataPointsArrayMethodMayContainNullValue() ************************
*Commit: commit 4e8b0282c72c5da53b68d012e57ac41f36c73a68 1350379333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
java.util.List.get(I)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.AllMembersSupplierTest.dataPointsArrayFieldMayContainNullValue() ************************
*Commit: commit 4e8b0282c72c5da53b68d012e57ac41f36c73a68 1350379333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
java.util.List.get(I)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountWithMultipleIncludeFilter() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.wasSuccessful()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getRunCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.emptyCategoriesSuite() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.allIncludedSuiteCategoriesMustBeMatched() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.anyMethodWithExcludedCategoryWillBeExcluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountWithMultipleExcludeFilter() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.Class;)
categoryFilter
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: categoryFilter
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.wasSuccessful()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertTrue(Z)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getRunCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Também chamam:
org.junit.runner.Result.getRunCount()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.ignoredTest() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertFalse(Z)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.wasSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertFalse(Z)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAnyAll() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAllAny() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertFalse(Z)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.Result.wasSuccessful()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertFalse(Z)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAllIncluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.runSuite() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAnyIncluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getIgnoreCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getIgnoreCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail() ************************
*Commit: commit fbcebcae05bc4aee3f8dcf24ebfcf69e6b245a0f 1357681465 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.runner(org.junit.runner.Runner)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.EnumDatapointNamesTest.enumErrorsUseEnumNameWithSingleValues() ************************
*Commit: commit 8ae9a7228e772aaec9f6acdc5059ec38dda1c90d 1358023729 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.Enum.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Enum.toString()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.EnumDatapointNamesTest.enumErrorsUseEnumNameWithArrays() ************************
*Commit: commit 8ae9a7228e772aaec9f6acdc5059ec38dda1c90d 1358023729 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.Enum.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Enum.toString()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithArrays() ************************
*Commit: commit 1c9a283f2ee2cc1e03b4eeb2749752bbf956ecac 1358069171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithSingleValues() ************************
*Commit: commit 1c9a283f2ee2cc1e03b4eeb2749752bbf956ecac 1358069171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithNullValues() ************************
*Commit: commit 236883d575f709a6311cec6b2fa34aeabc3835c6 1358069601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldIncludeFailureInDescriptionIfToStringFails() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldReturnGivenValue() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldUseQuotedValueInDescription() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldNotUseQuotesForNullValueDescriptions() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.Theories.validateDataPointMethods(java.util.List) ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getDeclaredMethods()
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getDeclaredMethods()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(java.lang.Throwable)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isPublic(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Method.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Modifier.isPublic(I)
Também chamam:
java.util.List.add(java.lang.Throwable)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: java.util.List.add(java.lang.Throwable)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Modifier.isPublic(I)
Também chamam:
java.util.List.add(java.lang.Throwable)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
both
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: both
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: and
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: and
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
both
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Nenhuma sugestão fornecida.
**************************
Chamada: both
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: and
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: and
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runners.model.FrameworkField.getField()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Field.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.reflect.Field)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runners.model.FrameworkField.getField()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Field.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Collection.add(java.lang.reflect.Field)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addSinglePointFields(org.junit.experimental.theories.ParameterSignature, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
java.lang.reflect.Field.getType()
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
java.lang.reflect.Field.getName()
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Field.getType()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Field.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldCombineFilters() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldExcludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldRunAllTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldIncludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runner.Result.getFailureCount()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 4
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUncreatedFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: parseOptions
Nenhuma sugestão fornecida.
**************************
Chamada: getFailures
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldAddToClasses() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseParameters
getClasses
java.util.List.get(I)
java.lang.Class.getName()
java.lang.Class.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: parseParameters
Nenhuma sugestão fornecida.
**************************
Chamada: getClasses
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Class.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.lang.Class.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getName()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.ParameterSignature.canAcceptUnboxed(java.lang.Class) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Class.isAssignableFrom(java.lang.Class)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Field.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.lang.reflect.Field.get(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.reflect.Field.getModifiers()
Também chamam:
java.lang.reflect.Field.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Object) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Array.getLength(java.lang.Object)
java.lang.reflect.Array.get(java.lang.Object, I)
canAcceptValue
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Nenhuma sugestão fornecida.
**************************
Chamada: canAcceptValue
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.runner.JUnitCoreTest.shouldAddFailuresToResult() ************************
*Commit: commit 15c6048229bd16c4bfdd80b23f37357a58226d20 1363389992 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, [Ljava.lang.String;)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: assertThat
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod$DataPointMethodReturnsMutableObject.everythingsEmpty(java.util.List, I) ************************
*Commit: commit ccf0c0af551df541e40edb07d19a57072a8b14b1 1363473349 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.add(java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
Chamada: java.util.List.add(java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.ShouldRejectTheoriesWithOnlyDisallowedNullData() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullElementsFromDataPointArrays() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullSingleDataPoints() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreSingleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingMultipleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingSingleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreMultipleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.results.ResultMatchers.isSuccessful()
Também chamam:
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.0184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.BooleanSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.EnumSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getEnumConstants()
java.lang.Object.toString()
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilterFactoryTest.shouldThrowException() ************************
*Commit: commit aa7c75db0608e8ce9e76ee60c70ba429c7260fba 1363896057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.TestName.getMethodName()
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
createFilter
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.rules.TestName.getMethodName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.rules.TestName.getMethodName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Chamada: createFilter
** Sugestões fornecidas **
Usuários que chamam:
org.junit.rules.TestName.getMethodName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addIterableValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Iterable) ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
canAcceptValue
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Iterator.hasNext()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: canAcceptValue
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
java.util.Iterator.hasNext()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Também chamam:
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedMethodValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotatedMethodValues
hasItem
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: hasItem
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedFieldValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)
hasItem
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: hasItem
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreadedStuckInMain() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
containsString
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00799508
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 2
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreaded() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getRunCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00615006
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00799508
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00553506
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getException()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 2
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 2
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: containsString
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
java.util.List.get(I)
Também chamam:
org.junit.runner.notification.Failure.getException()
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00861009
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class, I, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.hamcrest.CoreMatchers.equalTo(java.lang.String)
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailureCount()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.Result.getFailures()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.equalTo(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 0
**************************
Usuários que chamam:
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
Também chamam:
org.junit.Assert.assertEquals(J, J)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFields() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToFields
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToMethods() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToMethods
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.Map.get(java.lang.Object)
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryValidatorTest.testAndAssertErrorMessage(org.junit.runners.model.FrameworkMethod, java.lang.String) ************************
*Commit: commit d9054149988487750679e35a349df7e0e2df5870 1381181119 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.lang.Throwable.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedMethodsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
org.junit.runners.model.FrameworkMethod.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.util.List.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: org.junit.runners.model.FrameworkMethod.getName()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedFieldsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
getName
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.util.List.iterator()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Chamada: java.util.Iterator.next()
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 2
**************************
Chamada: getName
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
Também chamam:
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.util.List.iterator()
Também chamam:
java.util.Iterator.next()
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParameters.hashCode() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.hashCode()
java.lang.Object.hashCode()
java.util.List.hashCode()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runners.model.TestClassTest.hasSameHashCodeAsTestClassThatWrapsSameJavaClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.junit.Assert.assertEquals(J, J)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.assertTestCreatesSingleFailureWithMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit cb6abf6fc729f07c5d60b0756e91af444400b4b5 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.size()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertEquals(J, J)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Result.getFailures()
Nenhuma sugestão fornecida.
**************************
Chamada: java.util.List.get(I)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
Também chamam:
java.util.List.get(I)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.runner.notification.Failure.getMessage()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00492005
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
org.junit.runner.notification.Failure.getMessage()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00307503
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.runners.model.TestClass.isPublic() ************************
*Commit: commit 1d97da73fdafce8f5cf9d722f23c5cba41b26b70 1398129536 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.reflect.Modifier.isPublic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 2
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 2
**************************
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilder.getEnclosingClassForNonStaticMemberClass(java.lang.Class) ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.isMemberClass()
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.Class.getEnclosingClass()
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.Class.getModifiers()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.reflect.Modifier.isStatic(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: java.lang.Class.getEnclosingClass()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.Class.getModifiers()
Também chamam:
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.runners.parameterized.ParameterizedNamesTest.parameterizedTestsWithSpecialCharsInName() ************************
*Commit: commit 5d05993602fc1e0ef384f3193790053ea706d0cd 1400062602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getDisplayName()
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.runner.Request.getRunner()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Runner.getDescription()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getChildren()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getChildren()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getDisplayName()
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.runner.Description.getMethodName()
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getDisplayName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getDisplayName()
Também chamam:
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedSuffix(java.lang.String) ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.substring(I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.length()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.substring(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedPrefix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.String.length()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Math.min(I, I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.String.charAt(I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 1
**************************
Chamada: java.lang.String.substring(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Chamada: java.lang.String.substring(I, I)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
Usuários que chamam:
java.lang.String.length()
java.lang.String.charAt(I)
Também chamam:
java.lang.String.charAt(I)
Confiança: 1.0
Suporte: 0.00246002
Posição da Sugestão: 0
**************************
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.internalViolatedAssumption() ************************
*Commit: commit e12bb77074e3e8fde738ff5c4ac359e106978584 1403459172 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: java.lang.StringBuilder.toString()
Nenhuma sugestão fornecida.
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Nenhuma sugestão fornecida.
**************************
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
Também chamam:
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Confiança: 1.0
Suporte: 0.00369004
Posição da Sugestão: 1
**************************
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.ParameterizedAssertionErrorTest.sameHashCodeWhenEquals(java.lang.Throwable, java.lang.String, [Ljava.lang.Object;) ************************
*Commit: commit a1f68c6d9ad0fd5ce0ca2946fa66a1a059b4633f 1403549192 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(org.junit.experimental.theories.internal.ParameterizedAssertionError)
org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
---------------- Chamadas de método adicionadas ---------------
Chamada: org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
Nenhuma sugestão fornecida.
**************************
Chamada: java.lang.Object.hashCode()
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 1
**************************
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
** Sugestões fornecidas **
Usuários que chamam:
java.lang.Object.hashCode()
Também chamam:
java.lang.Object.hashCode()
Confiança: 1.0
Suporte: 0.00184502
Posição da Sugestão: 0
**************************
