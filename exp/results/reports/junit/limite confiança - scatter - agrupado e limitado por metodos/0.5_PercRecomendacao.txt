************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.neitherLogSuccessNorFailedForViolatedAssumption() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.logFailingTest() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatchmanTest.logFailingTest() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatchmanTest.neitherLogSuccessNorFailedForViolatedAssumption() ************************
*Commit: commit ada8735cda0fe94c9cfea9b8fb2012488a3a44e6 1315528373 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.RuleChainTest.executeRulesInCorrectOrder() ************************
*Commit: commit e8349c5c609fea8706ca926b19fe9c9d0b637a8b 1316030691 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
java.util.Arrays.asList([Ljava.lang.String;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.AssertionFailedErrorTest.testCreateErrorWithoutMessageInsteadOfNull() ************************
*Commit: commit 1b809a4a2e914da039841ff3d1c457e8e5122ac3 1316379567 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.AssertionFailedErrorTest.testCreateErrorWithMessage() ************************
*Commit: commit 1b809a4a2e914da039841ff3d1c457e8e5122ac3 1316379567 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.AssertionFailedErrorTest.testCreateErrorWithoutMessage() ************************
*Commit: commit 1b809a4a2e914da039841ff3d1c457e8e5122ac3 1316379567 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
junit.framework.Assert.assertNull(java.lang.Object)
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertNull(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClass.isANonStaticInnerClass() ************************
*Commit: commit 1014436692b0829a7287fbab81ef8720309d7945 1316380846 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.isMemberClass()
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
Chamada: java.lang.Class.isMemberClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.BlockJUnit4ClassRunnerTest.detectNonStaticEnclosedClass() ************************
*Commit: commit 1014436692b0829a7287fbab81ef8720309d7945 1316380846 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.InitializationError.getCauses()
java.util.List.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
Chamada: org.junit.runners.model.InitializationError.getCauses()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.EventCollector.everyTestRunSuccessful() ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.rules.EventCollector.hasNoFailure()
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.junit.tests.experimental.rules.EventCollector.hasNoAssumptionFailure()
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.rules.EventCollector.hasNoFailure()
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.tests.experimental.rules.EventCollector.hasNoAssumptionFailure()
Situação: Manual
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.EventCollector.hasSingleFailureWithMessage(org.hamcrest.Matcher) ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.rules.EventCollector.hasSingleFailure()
org.hamcrest.Matcher.matches(java.lang.Object)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.hamcrest.Matcher.matches(java.lang.Object)
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Chamada: org.junit.tests.experimental.rules.EventCollector.hasSingleFailure()
Situação: Primeira Chamada
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionTest.runTestAndVerifyResult() ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500010162505233
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionTest.startsWith(java.lang.String) ************************
*Commit: commit 128553fc50758932f02fc6e13a3e25ef6a711152 1316646602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.Description.appendText(java.lang.String)
java.lang.String.startsWith(java.lang.String)
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Manual
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.Description.appendText(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.FrameworkMethod.isPublic() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.714286046122684
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: java.lang.reflect.Modifier.isStatic(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.FrameworkMethod.isStatic() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.714286046122684
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.TestClass.getAnnotatedMethodValues(java.lang.Object, java.lang.Class, java.lang.Class) ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
org.junit.runners.model.FrameworkMethod.invokeExplosively(java.lang.Object, [Ljava.lang.Object;)
java.lang.Class.isInstance(java.lang.Object)
java.lang.Class.cast(java.lang.Object)
java.util.List.add(org.junit.runners.model.TestClass$(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;$T)
org.junit.runners.model.FrameworkMethod.getName()
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkMethod.invokeExplosively(java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Class.isInstance(java.lang.Object)
Situação: Manual
Chamada: java.lang.Class.cast(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6000006504001587
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.add(org.junit.runners.model.TestClass$(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;$T)
Situação: Manual
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.cast(java.lang.Object)
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.testCallMethodOnlyOnceRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.methodCustomRuleIsAppliedOnce() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.usesFieldAndMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.clear()
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: java.util.List.clear()
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.testCallMethodOnlyOnceRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodOnFailure() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7999986991996826
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.6
F-Measure: 0.6
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodOnlyApplyOnceEvenIfImplementsBothInterfaces() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodUseCustomMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodIgnoreNonRules() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodSucceeded() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Útil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.625
Corretude: 0.42857142857142855
F-Measure: 0.5084745762711864
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodBeforesAndAfters() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidateWrongTypedFieldInSuperclass() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidateWrongTypedField() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.usesFieldAndMethodRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.clear()
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: java.util.List.clear()
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodValidatePrivateRule() ************************
*Commit: commit faba199e389e3c977fc5573315790a5cde5f7611 1316803953 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.meaningfulFailureWhenParametersAreNotAnIterable() ************************
*Commit: commit 5475e12b57f5af0140deffa7f45c75dc47803167 1319153357 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.toString()
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.toString()
Situação: Manual
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.meaningfulFailureWhenParametersAreNotArrays() ************************
*Commit: commit 5475e12b57f5af0140deffa7f45c75dc47803167 1319153357 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.toString()
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.toString()
Situação: Manual
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionRuleTest$CauseMatcher.matchesSafely(org.junit.runner.Result) ************************
*Commit: commit 2cd3988479ae1195dcd38be325d2be1ea7d780e5 1325608586 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getCause()
org.hamcrest.Matcher.matches(java.lang.Object)
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: java.lang.Throwable.getCause()
Situação: Manual
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.results.ResultMatchers.failureIs(org.hamcrest.Matcher) ************************
*Commit: commit 052fc095d5b4a8af643d0e4402a504716ad8eb03 1328202359 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
org.junit.runner.Result.getFailures()
org.junit.runner.notification.Failure.getException()
org.hamcrest.Matcher.matches(java.lang.Object)
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionRuleTest.failsWithWrongCause() ************************
*Commit: commit 3b8708636ffc1a9fc970b66db73c09095dabc2e2 1328717292 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
java.lang.Throwable.toString()
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.internal.runners.statements.FailOnTimeoutTest$StuckStatement.notTheRealCauseOfTheTimeout() ************************
*Commit: commit f634102cf058ed5761b2e4ef66761e2f397b6160 1329337640 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.System.currentTimeMillis()
java.lang.System.currentTimeMillis()
java.lang.Math.atan(D)
Chamada: java.lang.System.currentTimeMillis()
Situação: Primeira Chamada
Chamada: java.lang.System.currentTimeMillis()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Math.atan(D)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.currentTimeMillis()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.usesIndexAsTestName() ************************
*Commit: commit e0cddcdfa8ec823da136af500cce0910a1dd2264 1330726681 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
java.util.ArrayList.get(I)
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.ArrayList.get(I)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.Description.getDisplayName()
Útil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.listening.TestListenerTest.reportsFailureOfListener() ************************
*Commit: commit 0ce06206263ed060bd0ede049c1713286c2487ea 1331341514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500010162505233
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6666666666666666
Suporte: 0.00615006
F-Measure Suporte e Confiança: 0.013
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7999997831999471
Suporte: 0.00738007
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 8
Confiança: 0.6000006504001587
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 9
Confiança: 0.6000006504001587
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.runner.notification.Failure.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 37
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.6666666666666666
F-Measure: 0.7058823529411765
************************ Método Avaliado: org.junit.tests.experimental.rules.TempFolderRuleTest.nameClashesResultInTestFailures() ************************
*Commit: commit 5baa714c5fe4d16dca9dea8c73c6d8702dfd71f2 1334086775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.TestedOnSupplierTest.descriptionStatesParameterName() ************************
*Commit: commit 1df71004338faf30b9287b03b726e1ce4f1246be 1335038211 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TestedOnSupplierTest.signatureOfFoo()
org.junit.experimental.theories.suppliers.TestedOnSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.TestedOnSupplierTest.signatureOfFoo()
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.suppliers.TestedOnSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.nullWithMessage() ************************
*Commit: commit c19ffebced2cfda962d868ba76e0dbfb3504cc37 1335085801 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.fail()
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00615006
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.nullNullmessage() ************************
*Commit: commit c19ffebced2cfda962d868ba76e0dbfb3504cc37 1335085801 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.assertNull(java.lang.Object)
org.junit.Assert.fail()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.Assert.assertNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.fail()
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00615006
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointsMustBePublic() ************************
*Commit: commit 0deeda931d45a23413e1c84a1966469deadfdb83 1338719881 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.max.DescriptionTest.sameNamesButDifferentUniqueIdAreNotEqual() ************************
*Commit: commit 14f9868962aee5bcba8a7595287be1d5fed54b7d 1338813320 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
org.hamcrest.CoreMatchers.equalTo(java.lang.Object)
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.equalTo(java.lang.Object)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TempFolderRuleTest$CreatesSubFolder.testUsingTempFolderStringReflection() ************************
*Commit: commit 67e43ab827da24baa6477e33e4e883a36dfcf645 1340107112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.io.File.createNewFile()
org.junit.rules.TemporaryFolder.getRoot()
org.junit.tests.experimental.rules.TempFolderRuleTest$CreatesSubFolder.join([Ljava.lang.String;)
java.io.File.exists()
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.io.File.createNewFile()
Situação: Manual
Chamada: org.junit.rules.TemporaryFolder.getRoot()
Situação: Manual
Chamada: org.junit.tests.experimental.rules.TempFolderRuleTest$CreatesSubFolder.join([Ljava.lang.String;)
Situação: Manual
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.InvocationTargetException.getTargetException()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.runners.Enclosed.filterOutAbstractClasses([Ljava.lang.Class;) ************************
*Commit: commit 0c458a8796cc5ffcda5286ee4a367c8e31ae7c88 1340228728 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isAbstract(I)
java.util.Set.add(java.lang.Class)
java.util.Set.toArray([Ljava.lang.Class;)
Chamada: java.lang.Class.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isAbstract(I)
Situação: Manual
Chamada: java.util.Set.add(java.lang.Class)
Situação: Manual
Chamada: java.util.Set.toArray([Ljava.lang.Class;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.EnclosedTest.enclosedRunnerPlansConcreteEnclosedClasses() ************************
*Commit: commit 0c458a8796cc5ffcda5286ee4a367c8e31ae7c88 1340228728 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.testCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.833333559166783
Suporte: 0.00615006
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.EnclosedTest.enclosedRunnerRunsConcreteEnclosedClasses() ************************
*Commit: commit 0c458a8796cc5ffcda5286ee4a367c8e31ae7c88 1340228728 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.experimental.runners.Enclosed.filterAbstractClasses([Ljava.lang.Class;) ************************
*Commit: commit ebb9d7f536a5b1be8364c6cb7367cac8c3849caa 1340300379 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isAbstract(I)
java.util.Set.add(java.lang.Class)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Class;)
Chamada: java.lang.Class.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isAbstract(I)
Situação: Manual
Chamada: java.util.Set.add(java.lang.Class)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: java.util.Set.toArray([Ljava.lang.Class;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherThrowsException() ************************
*Commit: commit c07b3e7ea1b23d84590c2781b978f15e40c94703 1340550113 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherStartingThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherFailedAndFinishedThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 10
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherFailedThrowsException() ************************
*Commit: commit 2162def2d4eefae0c5668586b837af4ecd4aed91 1340552503 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.methodOnSkipped() ************************
*Commit: commit 08c3b3aa633385373b08285225e58c6ee0ab8092 1340646881 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7999986991996826
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.5
F-Measure: 0.5333333333333333
************************ Método Avaliado: org.junit.rules.ExpectedExceptionMatcher.hasMessage(org.hamcrest.Matcher) ************************
*Commit: commit 23793cd92c4c0f8449e2edaec745437c5ebbd619 1342696063 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)
java.lang.Throwable.getMessage()
org.hamcrest.Matcher.matches(java.lang.Object)
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.matchers.StacktracePrintingMatcher.readStacktrace(java.lang.Throwable) ************************
*Commit: commit f1be7f250156ecc0e6b6c9d7005abb53359fe2fe 1342701523 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.printStackTrace(java.io.PrintWriter)
java.io.StringWriter.toString()
Chamada: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
Situação: Primeira Chamada
Chamada: java.io.StringWriter.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Método: java.io.StringWriter.getBuffer()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.matchers.StacktracePrintingMatcherTest.assertThatIncludesStacktrace() ************************
*Commit: commit f1be7f250156ecc0e6b6c9d7005abb53359fe2fe 1342701523 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Exception)
withStacktrace
org.junit.Assert.assertThat(java.lang.Exception, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Exception)
Situação: Primeira Chamada
Chamada: withStacktrace
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Exception, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.matchers.ThrowableMessageMatcher.describeMismatchSafely(org.junit.internal.matchers.ThrowableMessageMatcher$T, org.hamcrest.Description) ************************
*Commit: commit a7c4d033c831765b5e651f2c7c4ce69c2b60ce4a 1342785666 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
java.lang.Throwable.getMessage()
describeMismatch
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: describeMismatch
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.matchers.ThrowableMessageMatcher.matchesSafely(org.junit.internal.matchers.ThrowableMessageMatcher$T) ************************
*Commit: commit a7c4d033c831765b5e651f2c7c4ce69c2b60ce4a 1342785666 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
org.hamcrest.Matcher.matches(java.lang.Object)
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: org.hamcrest.Matcher.matches(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.countBeforeRunWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.testCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.833333559166783
Suporte: 0.00615006
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.plansNamedCorrectlyWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
java.util.ArrayList.get(I)
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.ArrayList.get(I)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.Description.getDisplayName()
Útil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.numberOfFieldsAndParametersShouldMatch() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5714285714285714
F-Measure: 0.5333333333333333
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.failureOnInitialization() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8888882866671726
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 20
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.6666666666666666
F-Measure: 0.6511627906976744
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.failuresNamedCorrectlyWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getTestHeader()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6000006504001587
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6000006504001587
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.notification.Failure.getTestHeader()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7999986991996826
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.8
F-Measure: 0.7272727272727272
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.countWithParameterizedField() ************************
*Commit: commit cbf46b88c2937aece7018fa50ba4dbb133e03d06 1345208182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointArrayValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Object) ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Array.getLength(java.lang.Object)
java.lang.reflect.Array.get(java.lang.Object, I)
java.lang.Object.getClass()
org.junit.experimental.theories.internal.AllMembersSupplier.isCorrectlyTyped(org.junit.experimental.theories.ParameterSignature, java.lang.Class)
java.lang.reflect.Array.get(java.lang.Object, I)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.reflect.Array.getLength(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.isCorrectlyTyped(org.junit.experimental.theories.ParameterSignature, java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.TypeMatchingBetweenMultiDataPointsMethod.ignoreWrongTypedDataPointsMethod() ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.TypeMatchingBetweenMultiDataPointsMethod.pickUpMultiPointDataPointMethods() ************************
*Commit: commit 48aabe1b16bd288f74ac4ff92e3a38792533be39 1345240674 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.Parameterized$TestClassRunnerForParameters.createTestUsingFieldInjection() ************************
*Commit: commit 0215c66179ed2c04da2e53f67aefc97b6db5782a 1345445221 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.Parameterized.getAnnotatedFieldsByParameter()
java.util.List.size()
java.util.List.size()
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.newInstance()
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getAnnotation(java.lang.Class)
org.junit.runners.Parameterized$Parameter.value()
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getName()
java.lang.reflect.Field.getName()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.reflect.Field.getType()
java.lang.Class.getSimpleName()
Chamada: org.junit.runners.Parameterized.getAnnotatedFieldsByParameter()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Manual
Chamada: java.lang.Class.newInstance()
Situação: Manual
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.runners.Parameterized$Parameter.value()
Situação: Manual
Chamada: java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getName()
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.Parameterized$TestClassRunnerForParameters.createTestUsingConstructorInjection() ************************
*Commit: commit 0215c66179ed2c04da2e53f67aefc97b6db5782a 1345445221 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Manual
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7999986991996826
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.assumptionsWithMessageAndCause() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getCause()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Chamada: org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: java.lang.Throwable.getCause()
Situação: Manual
Chamada: org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.3333333333333333
F-Measure: 0.18181818181818182
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest$HasFailingAssumptionWithMessage.assumptionsFail() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assume.assumeThat(org.junit.Assume$(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V$T, org.hamcrest.Matcher)
org.junit.Assert.fail()
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Primeira Chamada
Chamada: org.junit.Assume.assumeThat(org.junit.Assume$(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V$T, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.fail()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.assumptionsWithMessage() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.failedAssumptionsWithMessage() ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.AssumptionTest.runAndGetAssumptionFailures(java.lang.Class) ************************
*Commit: commit 3bb48f0a58eb44f36b6e03538a7db05b6c6da335 1345576916 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
java.util.List.add(org.junit.runner.notification.Failure)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Chamada: org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: java.util.List.add(org.junit.runner.notification.Failure)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500010162505233
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.max.DescriptionTest.roundTripsClassObject() ************************
*Commit: commit 8134371705a43fa2b2a8913678d4336d867f6647 1346891790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getProtectionDomain()
java.security.ProtectionDomain.getCodeSource()
java.security.CodeSource.getLocation()
java.lang.Class.getName()
null.findClass(java.lang.String)
java.lang.Class.getClassLoader()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.Class)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertNull(java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.AccessibleObject.getAnnotations()
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.childlessCopy()
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getProtectionDomain()
Situação: Primeira Chamada
Chamada: java.security.ProtectionDomain.getCodeSource()
Situação: Manual
Chamada: java.security.CodeSource.getLocation()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: null.findClass(java.lang.String)
Situação: Manual
Chamada: java.lang.Class.getClassLoader()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertNull(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: java.lang.reflect.AccessibleObject.getAnnotations()
Situação: Manual
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.childlessCopy()
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.01818181818181818
Corretude: 0.5
F-Measure: 0.03508771929824561
************************ Método Avaliado: org.junit.tests.experimental.max.DescriptionTest.usesPassedInClassObject() ************************
*Commit: commit 785c7859cd87dc5cb3872fef476ce2f86c9259dd 1346939875 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getProtectionDomain()
java.security.ProtectionDomain.getCodeSource()
java.security.CodeSource.getLocation()
java.lang.Class.getName()
null.findClass(java.lang.String)
java.lang.Class.getClassLoader()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.Class)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertNull(java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.AccessibleObject.getAnnotations()
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.childlessCopy()
org.junit.runner.Description.getTestClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Description.getAnnotations()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getAnnotations()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.annotation.Annotation.annotationType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getProtectionDomain()
Situação: Primeira Chamada
Chamada: java.security.ProtectionDomain.getCodeSource()
Situação: Manual
Chamada: java.security.CodeSource.getLocation()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: null.findClass(java.lang.String)
Situação: Manual
Chamada: java.lang.Class.getClassLoader()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertNull(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: java.lang.reflect.AccessibleObject.getAnnotations()
Situação: Manual
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.childlessCopy()
Situação: Manual
Chamada: org.junit.runner.Description.getTestClass()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.01818181818181818
Corretude: 0.5
F-Measure: 0.03508771929824561
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.testWatcherSkippedThrowsException() ************************
*Commit: commit a982920ee8036d001aa4a223a2521be28681ec27 1349074214 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.theories.AllMembersSupplierTest.dataPointsArrayMethodMayContainNullValue() ************************
*Commit: commit 4e8b0282c72c5da53b68d012e57ac41f36c73a68 1350379333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
java.util.List.get(I)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getConstructor([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.theories.AllMembersSupplierTest.dataPointsArrayFieldMayContainNullValue() ************************
*Commit: commit 4e8b0282c72c5da53b68d012e57ac41f36c73a68 1350379333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
java.util.List.get(I)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getConstructor([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalLongTimeout.run3() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Object.wait()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Object.wait()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest.timeUnitTimeout() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.setLength(I)
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: java.lang.StringBuffer.setLength(I)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalLongTimeout.run2() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Thread.currentThread()
java.lang.Thread.join()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.join()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest.longTimeout() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.setLength(I)
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.StringBuffer.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: java.lang.StringBuffer.setLength(I)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.StringBuffer.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalTimeUnitTimeout.run3() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Object.wait()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Object.wait()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalTimeUnitTimeout.run2() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Thread.currentThread()
java.lang.Thread.join()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.join()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalLongTimeout.run1() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
java.util.concurrent.locks.ReentrantLock.unlock()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
Situação: Manual
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$HasGlobalTimeUnitTimeout.run1() ************************
*Commit: commit 544e5ba3a3034932879604b72fb6f8526d27eb50 1352759609 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
java.util.concurrent.locks.ReentrantLock.unlock()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
Situação: Manual
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$AbstractTimeoutTest.run2() ************************
*Commit: commit 11039f25897fe4daba274292a49a078afa87991b 1352934533 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Thread.currentThread()
java.lang.Thread.join()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.join()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$AbstractTimeoutTest.run1() ************************
*Commit: commit 11039f25897fe4daba274292a49a078afa87991b 1352934533 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
java.util.concurrent.locks.ReentrantLock.unlock()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.ReentrantLock.lockInterruptibly()
Situação: Manual
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$AbstractTimeoutTest.run3() ************************
*Commit: commit 11039f25897fe4daba274292a49a078afa87991b 1352934533 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.lang.Object.wait()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Object.wait()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeoutRuleTest$AbstractTimeoutTest.run5() ************************
*Commit: commit b28fe09d1a54955bed2e4db5352c14fae195a418 1353001185 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuffer.append(java.lang.String)
java.io.File.createTempFile(java.lang.String, java.lang.String)
java.io.File.deleteOnExit()
java.io.RandomAccessFile.getChannel()
java.util.Random.nextBytes([B)
java.nio.ByteBuffer.wrap([B)
java.nio.channels.FileChannel.write(java.nio.ByteBuffer)
java.nio.channels.spi.AbstractInterruptibleChannel.close()
Chamada: java.lang.StringBuffer.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.io.File.createTempFile(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.io.File.deleteOnExit()
Situação: Manual
Chamada: java.io.RandomAccessFile.getChannel()
Situação: Manual
Chamada: java.util.Random.nextBytes([B)
Situação: Manual
Chamada: java.nio.ByteBuffer.wrap([B)
Situação: Manual
Chamada: java.nio.channels.FileChannel.write(java.nio.ByteBuffer)
Situação: Manual
Chamada: java.nio.channels.spi.AbstractInterruptibleChannel.close()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeWatcherTest.failed() ************************
*Commit: commit 582d86c49eb8624b9db65e69ad0e404821505b3d 1353286309 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.IsEqual.equalTo(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
org.hamcrest.core.IsNot.not(java.lang.Long)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsNot.not(java.lang.Long)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeWatcherTest.skipped() ************************
*Commit: commit 582d86c49eb8624b9db65e69ad0e404821505b3d 1353286309 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.IsEqual.equalTo(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
org.hamcrest.core.IsNot.not(java.lang.Long)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsNot.not(java.lang.Long)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: org.junit.tests.experimental.rules.TimeWatcherTest.succeeded() ************************
*Commit: commit 582d86c49eb8624b9db65e69ad0e404821505b3d 1353286309 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.IsEqual.equalTo(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
org.hamcrest.core.IsNot.not(java.lang.Long)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.TimeWatcherTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.IsNot.not(java.lang.Long)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: org.junit.tests.experimental.rules.StopwatchTest.failed() ************************
*Commit: commit cbcb29a2d80b04803566a3aaaffd9dceb53053bf 1353365749 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.tests.experimental.rules.StopwatchTest.succeeded() ************************
*Commit: commit cbcb29a2d80b04803566a3aaaffd9dceb53053bf 1353365749 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.tests.experimental.rules.StopwatchTest.skipped() ************************
*Commit: commit cbcb29a2d80b04803566a3aaaffd9dceb53053bf 1353365749 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7727289524837215
Suporte: 0.0104551
F-Measure Suporte e Confiança: 0.021
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testInheritance() ************************
*Commit: commit 27f927c42f251399899b39de89936f02529dc50e 1354740458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.rules.StopwatchTest.duration() ************************
*Commit: commit ebc674b2536e5bda7083dfd7841cf5c3c846b274 1355013706 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.StopwatchTest.wrongDuration() ************************
*Commit: commit ebc674b2536e5bda7083dfd7841cf5c3c846b274 1355013706 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.sameAsNoIncludeCategoryAnnotation() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.noIncludeCategoryAnnotation() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountWithMultipleIncludeFilter() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.8235301431837094
Suporte: 0.00861009
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.8
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.emptyCategoriesSuite() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.allIncludedSuiteCategoriesMustBeMatched() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.describeMultipleCategoryFilter() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.experimental.categories.Categories$CategoryFilter.describe()
org.hamcrest.core.IsEqual.equalTo(java.lang.String)
org.hamcrest.core.IsEqual.equalTo(java.lang.String)
org.hamcrest.core.AnyOf.anyOf([Lorg.hamcrest.Matcher;)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.describe()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.core.AnyOf.anyOf([Lorg.hamcrest.Matcher;)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.anyMethodWithExcludedCategoryWillBeExcluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.oneRunnableOthersAvoided() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountWithMultipleExcludeFilter() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.Class;)
categoryFilter
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: java.util.Collections.addAll(java.util.Collection, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: categoryFilter
Situação: Manual
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.8235301431837094
Suporte: 0.00861009
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.5
Corretude: 0.8
F-Measure: 0.6153846153846154
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.ignoredTest() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertFalse(Z)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.2727272727272727
Corretude: 0.4
F-Measure: 0.3243243243243243
************************ Método Avaliado: org.junit.tests.experimental.categories.JavadocTest.slowTests() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.4
F-Measure: 0.3076923076923077
************************ Método Avaliado: org.junit.tests.experimental.categories.JavadocTest.fastSmokeTests() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.874999237812624
Suporte: 0.00430504
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.4
F-Measure: 0.3076923076923077
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAnyAll() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.25
F-Measure: 0.125
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAllAny() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertFalse(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.2
F-Measure: 0.10526315789473682
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAllIncluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.25
F-Measure: 0.125
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.runSuite() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.25
F-Measure: 0.125
************************ Método Avaliado: org.junit.tests.experimental.categories.MultiCategoryTest.inheritanceAnyIncluded() ************************
*Commit: commit de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a 1355164381 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getIgnoreCount()
org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.25
F-Measure: 0.125
************************ Método Avaliado: org.junit.tests.experimental.MatcherTest.differentMatchersHaveDifferentDescriptions(org.hamcrest.Matcher, org.hamcrest.Matcher, java.lang.Object) ************************
*Commit: commit 80b7fbad6e37f2b229a919f595a5263dd21da8fb 1355342975 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
java.lang.Object.toString()
java.lang.Object.toString()
org.hamcrest.CoreMatchers.not(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6000006504001587
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.theories.AssumingInTheoriesTest.theoryMeansOnlyAssumeShouldFail() ************************
*Commit: commit fbcebcae05bc4aee3f8dcf24ebfcf69e6b245a0f 1357681465 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.runner(org.junit.runner.Runner)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.Request.runner(org.junit.runner.Runner)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.EnumDatapointNamesTest.enumErrorsUseEnumNameWithSingleValues() ************************
*Commit: commit 8ae9a7228e772aaec9f6acdc5059ec38dda1c90d 1358023729 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.Enum.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: java.lang.Enum.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6
F-Measure: 0.42857142857142855
************************ Método Avaliado: org.junit.tests.experimental.theories.EnumDatapointNamesTest.enumErrorsUseEnumNameWithArrays() ************************
*Commit: commit 8ae9a7228e772aaec9f6acdc5059ec38dda1c90d 1358023729 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
java.lang.Enum.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.EnumDatapointNamesTest.runTheoryTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: java.lang.Enum.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6
F-Measure: 0.42857142857142855
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithArrays() ************************
*Commit: commit 1c9a283f2ee2cc1e03b4eeb2749752bbf956ecac 1358069171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3
Corretude: 0.6
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithSingleValues() ************************
*Commit: commit 1c9a283f2ee2cc1e03b4eeb2749752bbf956ecac 1358069171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3
Corretude: 0.6
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.failuresUseNameAndValueWithNullValues() ************************
*Commit: commit 236883d575f709a6311cec6b2fa34aeabc3835c6 1358069601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.TheoryFailureMessagesTest.runTheoryTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 7
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3
Corretude: 0.6
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldIncludeFailureInDescriptionIfToStringFails() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldReturnGivenValue() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldUseQuotedValueInDescription() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldNotUseQuotesForNullValueDescriptions() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.Theories.validateDataPointMethods(java.util.List) ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getDeclaredMethods()
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.714286046122684
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.reflect.Method.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.714286046122684
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.reflect.Method.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.25
Corretude: 0.75
F-Measure: 0.375
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6
Corretude: 1.0
F-Measure: 0.7499999999999999
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields$HasAFailingTheory.everythingIsZero(I) ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7241354176011484
Suporte: 0.0129151
F-Measure Suporte e Confiança: 0.026
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.CoreMatchers.allOf([Lorg.hamcrest.Matcher;)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.6
Corretude: 1.0
F-Measure: 0.7499999999999999
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
both
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: both
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: and
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: and
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 1.0
F-Measure: 0.4444444444444445
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
both
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
and
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: both
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: and
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: and
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 1.0
F-Measure: 0.4444444444444445
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithParameterSupplier.shouldPickUpDataPointsFromParameterSupplier() ************************
*Commit: commit 1963b424c176742b711fb4226ce8f314d431813c 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.theories.runner.WithParameterSupplier.potentialValues(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.theories.runner.WithParameterSupplier.potentialValues(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6249997459375413
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.5
F-Measure: 0.26666666666666666
************************ Método Avaliado: org.junit.experimental.theories.Theories.validateParameterSupplier(java.lang.Class, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructors()
java.lang.Class.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Object.equals(java.lang.Object)
java.lang.Class.getName()
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.Class.getConstructors()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Constructor.getParameterTypes()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointFields(org.junit.experimental.theories.ParameterSignature, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.internal.AllMembersSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature)
java.lang.reflect.Field.getType()
org.junit.experimental.theories.ParameterSignature.canAcceptArrayType(java.lang.Class)
java.lang.reflect.Field.getName()
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(java.lang.String, java.util.List, java.lang.Object)
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptArrayType(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(java.lang.String, java.util.List, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addSinglePointFields(org.junit.experimental.theories.ParameterSignature, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
java.lang.reflect.Field.getType()
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
java.lang.reflect.Field.getName()
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.5
F-Measure: 0.25
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldCombineFilters() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: assertThat
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3125
Corretude: 0.6
F-Measure: 0.4109589041095891
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldExcludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: assertThat
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3125
Corretude: 0.6
F-Measure: 0.4109589041095891
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldRunAllTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: assertThat
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3125
Corretude: 0.6
F-Measure: 0.4109589041095891
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldIncludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: assertThat
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.647057416954405
Suporte: 0.0135301
F-Measure Suporte e Confiança: 0.027
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3125
Corretude: 0.6
F-Measure: 0.4109589041095891
************************ Método Avaliado: org.junit.runner.FilterFactoryFactoryTest.shouldCreateFilterWithArguments() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
createFilterFromFilterSpec
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: createFilterFromFilterSpec
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryParamsTest.shouldCreateFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
apply
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: apply
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldParseFilterArgWithEqualsSyntax() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
parseOptions
getFilter
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: parseOptions
Situação: Manual
Chamada: getFilter
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnknownTestClass() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseParameters
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: parseParameters
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnfoundFilterFactory() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUncreatedFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: parseOptions
Situação: Manual
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldAddToClasses() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseParameters
getClasses
java.util.List.get(I)
java.lang.Class.getName()
java.lang.Class.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: parseParameters
Situação: Manual
Chamada: getClasses
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnknownOption() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldParseFilterArgInWhichValueIsASeparateArg() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
parseOptions
getFilter
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: parseOptions
Situação: Manual
Chamada: getFilter
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.ConcurrentRunNotifierTest.realUsage() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
java.util.concurrent.Executors.newFixedThreadPool(I)
java.util.concurrent.ExecutorService.submit(java.lang.Runnable)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.ExecutorService.shutdown()
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: java.util.concurrent.Executors.newFixedThreadPool(I)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.lang.Runnable)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.shutdown()
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.test() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Random.nextDouble()
java.util.concurrent.Executors.newFixedThreadPool(I)
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.concurrent.CyclicBarrier.await()
java.util.concurrent.atomic.AtomicBoolean.get()
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.CountDownLatch.countDown()
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.CyclicBarrier.await(J, java.util.concurrent.TimeUnit)
java.util.concurrent.CountDownLatch.await(J, java.util.concurrent.TimeUnit)
org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.addListener(org.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener)
java.util.concurrent.ExecutorService.shutdown()
java.util.concurrent.atomic.AtomicBoolean.set(Z)
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.ConcurrentRunNotifierTest.countReportedTestFailures([Lorg.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener;)
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.Random.nextDouble()
Situação: Primeira Chamada
Chamada: java.util.concurrent.Executors.newFixedThreadPool(I)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.util.concurrent.CyclicBarrier.await()
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicBoolean.get()
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.CountDownLatch.countDown()
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.CyclicBarrier.await(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.util.concurrent.CountDownLatch.await(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.addListener(org.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.shutdown()
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicBoolean.set(Z)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Chamada: org.junit.runner.notification.ConcurrentRunNotifierTest.countReportedTestFailures([Lorg.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener;)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addFirstAndRemoveWithThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addFirstAndRemoveWithNonThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addAndRemoveWithNonThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addAndRemoveWithThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.ParameterSignature.canAcceptUnboxed(java.lang.Class) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Class.isAssignableFrom(java.lang.Class)
Chamada: java.lang.Class.getDeclaredField(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Object) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Array.getLength(java.lang.Object)
java.lang.reflect.Array.get(java.lang.Object, I)
canAcceptValue
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.reflect.Array.getLength(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Situação: Manual
Chamada: canAcceptValue
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.runner.JUnitCoreTest.shouldAddFailuresToResult() ************************
*Commit: commit 15c6048229bd16c4bfdd80b23f37357a58226d20 1363389992 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, [Ljava.lang.String;)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
assertThat
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: assertThat
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.928571013775698
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 6
Confiança: 0.5714284055102791
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod$DataPointMethodReturnsMutableObject.everythingsEmpty(java.util.List, I) ************************
*Commit: commit ccf0c0af551df541e40edb07d19a57072a8b14b1 1363473349 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.add(java.lang.Object)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.add(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.ShouldRejectTheoriesWithOnlyDisallowedNullData() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullElementsFromDataPointArrays() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullSingleDataPoints() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreSingleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingMultipleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingSingleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreMultipleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.588234450172643
Suporte: 0.0246002
F-Measure Suporte e Confiança: 0.048
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.generateAssignmentsFromTypeAlone(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.ParameterSignature.getType()
java.lang.Class.isEnum()
getValueSources
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
getValueSources
java.util.Collections.emptyList()
Chamada: org.junit.experimental.theories.ParameterSignature.getType()
Situação: Primeira Chamada
Chamada: java.lang.Class.isEnum()
Situação: Manual
Chamada: getValueSources
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: getValueSources
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.BooleanSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.EnumSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getEnumConstants()
java.lang.Object.toString()
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.Class.getEnumConstants()
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponBaldFilterOptionNotFollowedByValue() ************************
*Commit: commit 9d9899bce3506e7d87ebc6352a3cf3d25ea20f54 1363883725 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
assertThat
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: assertThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.getClass()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilterFactoryTest.shouldThrowException() ************************
*Commit: commit aa7c75db0608e8ce9e76ee60c70ba429c7260fba 1363896057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.TestName.getMethodName()
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
createFilter
Chamada: org.junit.rules.TestName.getMethodName()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addIterableValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Iterable) ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
canAcceptValue
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: canAcceptValue
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.4
Corretude: 0.6666666666666666
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsEveryTestOfArray() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsForEverySingleArgumentOfIterable() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsForEverySingleArgumentOfArray() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedMethodValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotatedMethodValues
hasItem
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotatedMethodValues
Situação: Primeira Chamada
Chamada: hasItem
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedFieldValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)
hasItem
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)
Situação: Primeira Chamada
Chamada: hasItem
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreadedStuckInMain() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
containsString
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.818182221322174
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6000006504001587
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 0.5333335501333862
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 12
Confiança: 0.5333335501333862
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 371
Confiança: 0.6000006504001587
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable) ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.printStackTrace(java.io.PrintWriter)
java.lang.Object.toString()
Chamada: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Método: java.io.StringWriter.getBuffer()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreaded() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.735296649482071
Suporte: 0.0153752
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.818182221322174
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6000006504001587
Suporte: 0.00553506
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 11
Confiança: 0.5333335501333862
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 12
Confiança: 0.5333335501333862
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.375
Corretude: 0.625
F-Measure: 0.46875
************************ Método Avaliado: org.junit.runners.model.TestClassTest.annotatedFieldsAreReturned() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
java.util.Set.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
getName
java.util.Set.add(java.lang.String)
hasItems
org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7241354176011484
Suporte: 0.0129151
F-Measure Suporte e Confiança: 0.026
Chamada: getName
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: hasItems
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 1.0
F-Measure: 0.25
************************ Método Avaliado: org.junit.runners.model.TestClassTest.annotatedMethodsAreReturned() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
java.util.Set.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runners.model.FrameworkMethod.getName()
java.util.Set.add(java.lang.String)
hasItems
org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7241354176011484
Suporte: 0.0129151
F-Measure Suporte e Confiança: 0.026
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: hasItems
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 1.0
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateAnnotatedMethod
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.6666666666666666
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class, I, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.hamcrest.CoreMatchers.equalTo(java.lang.String)
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.928571013775698
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.equalTo(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.2
Corretude: 0.4
F-Measure: 0.26666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit 1273a35689bdcb3304f6634cdc3889c61f9b1b1f 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailures()
org.junit.runner.notification.Failure.getMessage()
java.util.List.add(java.lang.String)
hasItem
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: hasItem
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFields() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToFields
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotationToFields
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToMethods() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToMethods
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotationToMethods
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.runners.model.TestClass.getSortedDeclaredFields(java.lang.Class) ************************
*Commit: commit c75dcc28810aeb1c918ee7430981b31f41742ea7 1381181119 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getDeclaredFields()
java.util.Arrays.sort([Ljava.lang.reflect.Field;, java.util.Comparator)
java.lang.reflect.Field.getName()
java.lang.reflect.Field.getName()
java.lang.String.compareTo(java.lang.String)
Chamada: java.lang.Class.getDeclaredFields()
Situação: Primeira Chamada
Chamada: java.util.Arrays.sort([Ljava.lang.reflect.Field;, java.util.Comparator)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.compareTo(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryValidatorTest.testAndAssertErrorMessage(org.junit.runners.model.FrameworkMethod, java.lang.String) ************************
*Commit: commit d9054149988487750679e35a349df7e0e2df5870 1381181119 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateAnnotatedMethod
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.6666666666666666
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.beforeFailsButTestIsFiltered() ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.classes([Ljava.lang.Class;)
exclude
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.Request.classes([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: exclude
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String) ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.Failure.getMessage()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String) ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
java.util.List.isEmpty()
java.util.List.get(I)
org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7647081328729519
Suporte: 0.0159902
F-Measure Suporte e Confiança: 0.032
Chamada: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String) ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.Failure.getMessage()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String) ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
java.util.List.isEmpty()
java.util.List.get(I)
org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7647081328729519
Suporte: 0.0159902
F-Measure Suporte e Confiança: 0.032
Chamada: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.beforeFailsButTestIsFiltered() ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.classes([Ljava.lang.Class;)
exclude
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.Request.classes([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: exclude
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClass$FieldComparator.compare(java.lang.reflect.Field, java.lang.reflect.Field) ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Field.getName()
java.lang.reflect.Field.getName()
java.lang.String.compareTo(java.lang.String)
Chamada: java.lang.reflect.Field.getName()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500020325038008
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.compareTo(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedMethodsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
org.junit.runners.model.FrameworkMethod.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedFieldsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
getName
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: getName
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.validator.AnnotationsValidatorTest.assertClassHasFailureMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateTestClass
java.util.Collection.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateTestClass
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7241354176011484
Suporte: 0.0129151
F-Measure Suporte e Confiança: 0.026
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParameters.hashCode() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.hashCode()
java.lang.Object.hashCode()
java.util.List.hashCode()
Chamada: java.lang.String.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.util.List.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.hasSameHashCodeAsTestClassThatWrapsSameJavaClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingConstructorInjection() ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Manual
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7999986991996826
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingFieldInjection() ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
java.util.List.size()
java.util.List.size()
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.newInstance()
org.junit.runners.model.FrameworkField.getField()
getAnnotation
value
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getName()
java.lang.reflect.Field.getName()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.reflect.Field.getType()
java.lang.Class.getSimpleName()
Chamada: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Manual
Chamada: java.lang.Class.newInstance()
Situação: Manual
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: getAnnotation
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getName()
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Field.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.assertTestCreatesSingleFailureWithMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit cb6abf6fc729f07c5d60b0756e91af444400b4b5 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8888882866671726
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.5555549533338392
Suporte: 0.00307503
F-Measure Suporte e Confiança: 0.007
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8888882866671726
Suporte: 0.00492005
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Útil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.75
F-Measure: 0.5454545454545454
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.testZeroTimeoutIsIgnored() ************************
*Commit: commit c52397d4d704a85499a17e9d3a2c1bcb8c5f0906 1397577096 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.runners.model.TestClass.isPublic() ************************
*Commit: commit 1d97da73fdafce8f5cf9d722f23c5cba41b26b70 1398129536 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
Chamada: java.lang.Class.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilder.getEnclosingClassForNonStaticMemberClass(java.lang.Class) ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.isMemberClass()
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.Class.getEnclosingClass()
Chamada: java.lang.Class.isMemberClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Chamada: java.lang.Class.getEnclosingClass()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assumptionViolatedAtParentLevel() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.parentRunnerTestMethods() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertionErrorAtParentLevelTest() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatchesContext() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000008130015202
Suporte: 0.0110701
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches2() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000008130015202
Suporte: 0.0110701
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000008130015202
Suporte: 0.0110701
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches2Context() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000008130015202
Suporte: 0.0110701
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: org.junit.runners.parameterized.ParameterizedNamesTest.parameterizedTestsWithSpecialCharsInName() ************************
*Commit: commit 5d05993602fc1e0ef384f3193790053ea706d0cd 1400062602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getDisplayName()
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.Description.getDisplayName()
Útil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.5714285714285714
Corretude: 1.0
F-Measure: 0.7272727272727273
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedSuffix(java.lang.String) ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.substring(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Math.min(I, I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Útil
Método: java.lang.String.length()
Útil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.8
Corretude: 1.0
F-Measure: 0.888888888888889
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor.extractDiff(java.lang.String) ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor.compactPrefix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedPrefix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6666648600015176
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00246002
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Útil
Método: java.lang.String.length()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.internalViolatedAssumption() ************************
*Commit: commit e12bb77074e3e8fde738ff5c4ac359e106978584 1403459172 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00369004
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.ParameterizedAssertionErrorTest.sameHashCodeWhenEquals(java.lang.Throwable, java.lang.String, [Ljava.lang.Object;) ************************
*Commit: commit a1f68c6d9ad0fd5ce0ca2946fa66a1a059b4633f 1403549192 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(org.junit.experimental.theories.internal.ParameterizedAssertionError)
org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(org.junit.experimental.theories.internal.ParameterizedAssertionError)
Situação: Primeira Chamada
Chamada: org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00184502
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7241354176011484
Suporte: 0.0129151
F-Measure Suporte e Confiança: 0.026
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: java.lang.Object.hashCode()
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.rules.StopwatchTest.wrongDuration() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8235301431837094
Suporte: 0.00861009
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.rules.StopwatchTest.failed() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.rules.StopwatchTest.skipped() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.rules.StopwatchTest.succeeded() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6400002601600634
Suporte: 0.0196802
F-Measure Suporte e Confiança: 0.039
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 1.0
F-Measure: 0.16666666666666669
************************ Método Avaliado: org.junit.rules.StopwatchTest.runtimeDuringTestShouldReturnTimeSinceStart() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8235301431837094
Suporte: 0.00861009
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.rules.StopwatchTest.runtimeAfterTestShouldReturnRunDuration() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8235301431837094
Suporte: 0.00861009
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParseResult.applyFilterSpecs(org.junit.runner.Request) ************************
*Commit: commit a75370887a71a09b3e5a12dec252513e80228e6b 1404323124 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createFilterFromFilterSpec
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCommandLineParseResult.errorReport(java.lang.Throwable)
Chamada: createFilterFromFilterSpec
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCommandLineParseResult.errorReport(java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPreJava5DebugArgumentsInReverseOrderTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPostJava5DebugArgumentsTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithoutDebugFlagsTestShouldPass() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPreJava5DebugArgumentsTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8666668834667196
Suporte: 0.00799508
F-Measure Suporte e Confiança: 0.016
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
