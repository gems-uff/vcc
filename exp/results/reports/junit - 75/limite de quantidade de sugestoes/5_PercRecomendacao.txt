************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldIncludeFailureInDescriptionIfToStringFails() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldReturnGivenValue() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldUseQuotedValueInDescription() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.PotentialAssignmentTest.shouldNotUseQuotesForNullValueDescriptions() ************************
*Commit: commit 39d8b9e93ff544880f39a3497fb428c6cba5288b 1358468080 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getDescription()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.Theories.validateDataPointMethods(java.util.List) ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getDeclaredMethods()
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Method.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1923081247339806
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Method.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.reflect.Method.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3333333333333333
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.reflect.Method.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.reflect.Method.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4615382144377253
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getName()
Útil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: java.lang.reflect.Method.getParameterTypes()
Inútil
Método: java.lang.reflect.Method.getReturnType()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3125
F-Measure: 0.38461538461538464
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.7692308927811373
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7692308927811373
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.3
Corretude: 0.25
F-Measure: 0.2727272727272727
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields$HasAFailingTheory.everythingIsZero(I) ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7666657386656274
Suporte: 0.0110153
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBePublic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.failureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.7692308927811373
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7692308927811373
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.3
Corretude: 0.25
F-Measure: 0.2727272727272727
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointFieldsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.hamcrest.CoreMatchers.both(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6363634638016781
Suporte: 0.00335249
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00335249
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.5
F-Measure: 0.4615384615384615
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.UnsuccessfulWithDataPointFields.dataPointMethodsMustBeStatic() ************************
*Commit: commit 2c6c142aa801cef3520ca668e75a670a32b4859a 1359414389 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.hamcrest.CoreMatchers.both(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.6363634638016781
Suporte: 0.00335249
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00335249
F-Measure Suporte e Confiança: 0.007
Chamada: org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.5
F-Measure: 0.4615384615384615
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.util.Collection.add(java.lang.reflect.Field)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getDataPointsFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
value
java.lang.reflect.Field.getAnnotation(java.lang.Class)
value
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.contains(java.lang.Object)
java.util.List.add(java.lang.reflect.Field)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: value
Situação: Manual
Chamada: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: org.junit.internal.MethodSorterTest.getDeclaredMethodNames(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointMethods(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
value
org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
value
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.contains(java.lang.Object)
java.util.List.add(org.junit.runners.model.FrameworkMethod)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: value
Situação: Manual
Chamada: org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.internal.MethodSorterTest.getDeclaredMethodNames(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getDataPointsMethods(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
value
org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
value
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.contains(java.lang.Object)
java.util.List.add(org.junit.runners.model.FrameworkMethod)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: value
Situação: Manual
Chamada: org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.internal.MethodSorterTest.getDeclaredMethodNames(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
value
java.lang.reflect.Field.getAnnotation(java.lang.Class)
value
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.contains(java.lang.Object)
java.util.List.add(java.lang.reflect.Field)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: value
Situação: Manual
Chamada: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(java.lang.reflect.Field)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: org.junit.internal.MethodSorterTest.getDeclaredMethodNames(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnOnlyTheNamedSingleFieldDataPoints() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.CoreMatchers.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.14285714285714285
F-Measure: 0.15384615384615383
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnNothingIfTheNamedDataPointsAreMissing() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnOnlyTheNamedDataPoints() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.14285714285714285
F-Measure: 0.15384615384615383
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnOnlyTheNamedSingleMethodDataPoints() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.CoreMatchers.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.14285714285714285
F-Measure: 0.15384615384615383
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnOnlyTheNamedFieldDataPoints() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.CoreMatchers.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.14285714285714285
F-Measure: 0.15384615384615383
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.shouldReturnOnlyTheNamedMethodDataPoints() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
getValueSources
org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.CoreMatchers.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String)
Situação: Primeira Chamada
Chamada: getValueSources
Situação: Manual
Chamada: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.getStringValuesFromAssignments(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.14285714285714285
F-Measure: 0.15384615384615383
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.SpecificDataPointsSupplierTest.signature(java.lang.String) ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
java.util.ArrayList.get(I)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.ArrayList.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.ArrayList.get(I)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.125
F-Measure: 0.18181818181818182
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.onlyUseSpecificDataPointsIfSpecified() ************************
*Commit: commit 043e82844ef2c3c0961d98a34771c84f7a950d1a 1360105283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.theories.runner.WithDataPointMethod.potentialValues(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.theories.runner.WithDataPointMethod.potentialValues(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.18181818181818182
F-Measure: 0.23529411764705885
************************ Método Avaliado: buildParameterSupplierFromClass ************************
*Commit: commit 1963b424c176742b711fb4226ce8f314d431813c 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructors()
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.Class.newInstance()
Chamada: java.lang.Class.getConstructors()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.getParameterTypes()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Class.newInstance()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithParameterSupplier.shouldPickUpDataPointsFromParameterSupplier() ************************
*Commit: commit 1963b424c176742b711fb4226ce8f314d431813c 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.theories.runner.WithParameterSupplier.potentialValues(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.theories.runner.WithParameterSupplier.potentialValues(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.07857144987755368
Suporte: 0.0052682
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.545453855206712
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.20833282583541407
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.24999869500535044
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.45454545454545453
Corretude: 0.25
F-Measure: 0.3225806451612903
************************ Método Avaliado: org.junit.experimental.theories.Theories.validateParameterSupplier(java.lang.Class, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructors()
java.lang.Class.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Object.equals(java.lang.Object)
java.lang.Class.getName()
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.Class.getConstructors()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Constructor.getParameterTypes()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3478271131970986
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
Inútil
Método: java.lang.Class.getName()
Útil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addSinglePointFields(org.junit.experimental.theories.ParameterSignature, java.util.List) ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
java.lang.reflect.Field.getType()
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
java.lang.reflect.Field.getName()
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithNamedDataPoints.onlyUseSpecificDataPointsIfSpecified() ************************
*Commit: commit 3375d1c3f489fc5d2b5c6629c55867bbfe2a033f 1360105284 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.theories.PotentialAssignment.getValue()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.18181818181818182
F-Measure: 0.23529411764705885
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.buildParameterSupplierFromClass(java.lang.Class) ************************
*Commit: commit 45524a9ddcd387fde3a20740e9c9c90ed71fec3a 1360630113 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructors()
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.Class.newInstance()
Chamada: java.lang.Class.getConstructors()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.getParameterTypes()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Class.newInstance()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: apply ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.contains(java.lang.CharSequence)
java.lang.String.split(java.lang.String, I)
create
createFilter
create
createFilter
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.split(java.lang.String, I)
Situação: Manual
Chamada: create
Situação: Manual
Chamada: createFilter
Situação: Manual
Chamada: create
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: create ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.forName(java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.Throwable.getMessage()
Chamada: java.lang.Class.forName(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Class.getConstructor([Ljava.lang.Class;)
Situação: Manual
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Inútil
Método: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldCombineFilters() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6346158479292648
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest$TestListener.testStarted(java.lang.Class)
junit.framework.Assert.assertFalse(java.lang.String, Z)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: org.junit.runner.FilterOptionIntegrationTest$TestListener.testStarted(java.lang.Class)
Situação: Manual
Chamada: junit.framework.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest$TestListener.testStarted(org.junit.runner.Description) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getClassName()
java.util.Set.add(java.lang.String)
Chamada: org.junit.runner.Description.getClassName()
Situação: Primeira Chamada
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Description.getMethodName()
Inútil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest$TestListener.testStarted(java.lang.Class) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.util.Set.contains(java.lang.Object)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest$TestListener.testFinished(java.lang.Class)
junit.framework.Assert.assertTrue(java.lang.String, Z)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: org.junit.runner.FilterOptionIntegrationTest$TestListener.testFinished(java.lang.Class)
Situação: Manual
Chamada: junit.framework.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldExcludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6346158479292648
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldRunAllTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6346158479292648
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.shouldIncludeSomeTests() ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
org.junit.runner.Result.getRunCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.FilterOptionIntegrationTest.runJUnit([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertNotStarted(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.FilterOptionIntegrationTest.assertFinished(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6346158479292648
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: java.lang.Class.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest$TestListener.testFinished(java.lang.Class) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.util.Set.contains(java.lang.Object)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest$TestListener.testFinished(org.junit.runner.Description) ************************
*Commit: commit 196c4ed79cbaca37709643b54913b361b677ae04 1362100017 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getClassName()
java.util.Set.add(java.lang.String)
Chamada: org.junit.runner.Description.getClassName()
Situação: Primeira Chamada
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Description.getMethodName()
Inútil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: createFilterFromFilterSpec ************************
*Commit: commit 0a9a389570a171b67c3155d312f2e90bdab5aaaf 1362176567 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.contains(java.lang.CharSequence)
java.lang.String.split(java.lang.String, I)
createFilter
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.split(java.lang.String, I)
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParser.parseParameters([Ljava.lang.String;) ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getClass
java.util.List.add(java.lang.Class)
org.junit.internal.JUnitSystem.out()
java.io.PrintStream.println(java.lang.String)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.notification.Failure)
Chamada: getClass
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.Class)
Situação: Manual
Chamada: org.junit.internal.JUnitSystem.out()
Situação: Manual
Chamada: java.io.PrintStream.println(java.lang.String)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.notification.Failure)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.io.PrintStream.println(java.lang.String)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: junit.textui.TestRunner.doRun(junit.framework.Test)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Método: junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParser.parseOptions([Ljava.lang.String;) ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
copyOfRange
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.indexOf(I)
java.lang.String.substring(I)
createFilterFromFilterSpec
org.junit.runner.manipulation.Filter.intersect(org.junit.runner.manipulation.Filter)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.notification.Failure)
copyOfRange
org.junit.internal.JUnitSystem.out()
getMessage
java.io.PrintStream.println([C)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.notification.Failure)
org.junit.internal.JUnitSystem.out()
getMessage
java.io.PrintStream.println([C)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.notification.Failure)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: copyOfRange
Situação: Manual
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1739135565985493
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1739135565985493
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: java.lang.String.substring(I)
Situação: Manual
Chamada: createFilterFromFilterSpec
Situação: Manual
Chamada: org.junit.runner.manipulation.Filter.intersect(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.notification.Failure)
Situação: Manual
Chamada: copyOfRange
Situação: Manual
Chamada: org.junit.internal.JUnitSystem.out()
Situação: Manual
Chamada: getMessage
Situação: Manual
Chamada: java.io.PrintStream.println([C)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.notification.Failure)
Situação: Manual
Chamada: org.junit.internal.JUnitSystem.out()
Situação: Manual
Chamada: getMessage
Situação: Manual
Chamada: java.io.PrintStream.println([C)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.notification.Failure)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.5
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilterFactoryTest.shouldCreateFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
createFilter
org.hamcrest.CoreMatchers.is(org.junit.runner.manipulation.Filter)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: createFilter
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryFactoryTest.shouldCreateFilterWithNoArguments() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
createFilterFromFilterSpec
org.hamcrest.CoreMatchers.is(org.junit.runner.manipulation.Filter)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: createFilterFromFilterSpec
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryFactoryTest.shouldCreateFilterWithArguments() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
createFilterFromFilterSpec
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: createFilterFromFilterSpec
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.runner.FilterFactoryParamsTest.shouldThrowFilterNotCreatedException() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
java.lang.Class.getName()
apply
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: apply
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryParamsTest.shouldCreateFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
apply
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: apply
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.runner.FilterFactoryParamsTest.shouldThrowFilterFactoryNotCreatedException() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
java.lang.Class.getName()
apply
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: apply
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldParseFilterArgWithEqualsSyntax() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
parseOptions
getFilter
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: parseOptions
Situação: Manual
Chamada: getFilter
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnknownTestClass() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseParameters
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: parseParameters
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.22033889307668625
Suporte: 0.00622605
F-Measure Suporte e Confiança: 0.013
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.14285714285714285
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnfoundFilterFactory() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.22033889307668625
Suporte: 0.00622605
F-Measure Suporte e Confiança: 0.013
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.14285714285714285
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUncreatedFilter() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: parseOptions
Situação: Manual
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.22033889307668625
Suporte: 0.00622605
F-Measure Suporte e Confiança: 0.013
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.1111111111111111
F-Measure: 0.13333333333333333
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldAddToClasses() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
parseParameters
getClasses
java.util.List.get(I)
java.lang.Class.getName()
java.lang.Class.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: parseParameters
Situação: Manual
Chamada: getClasses
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: java.lang.Class.getName()
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.125
F-Measure: 0.17391304347826086
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponUnknownOption() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.22033889307668625
Suporte: 0.00622605
F-Measure Suporte e Confiança: 0.013
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.14285714285714285
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldParseFilterArgInWhichValueIsASeparateArg() ************************
*Commit: commit 318adee43493447e22bbea89e0f17260e0186a14 1362503059 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
java.lang.Class.getName()
parseOptions
getFilter
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1250001304999191
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: parseOptions
Situação: Manual
Chamada: getFilter
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.manipulation.Filter, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.runner.notification.RunNotifier.wrapIfNotThreadSafe(org.junit.runner.notification.RunListener) ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.isAnnotationPresent(java.lang.Class)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.isAnnotationPresent(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.notification.ConcurrentRunNotifierTest.realUsage() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
java.util.concurrent.Executors.newFixedThreadPool(I)
java.util.concurrent.ExecutorService.submit(java.lang.Runnable)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.ExecutorService.shutdown()
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: java.util.concurrent.Executors.newFixedThreadPool(I)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.lang.Runnable)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.shutdown()
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518598716263243
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.currentThread()
Inútil
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Útil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.3
F-Measure: 0.24
************************ Método Avaliado: org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.test() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Random.nextDouble()
java.util.concurrent.Executors.newFixedThreadPool(I)
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.concurrent.CyclicBarrier.await()
java.util.concurrent.atomic.AtomicBoolean.get()
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.CountDownLatch.countDown()
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.CyclicBarrier.await(J, java.util.concurrent.TimeUnit)
java.util.concurrent.CountDownLatch.await(J, java.util.concurrent.TimeUnit)
org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.addListener(org.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener)
java.util.concurrent.ExecutorService.shutdown()
java.util.concurrent.atomic.AtomicBoolean.set(Z)
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.ConcurrentRunNotifierTest.countReportedTestFailures([Lorg.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener;)
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.Random.nextDouble()
Situação: Primeira Chamada
Chamada: java.util.concurrent.Executors.newFixedThreadPool(I)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.util.concurrent.CyclicBarrier.await()
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicBoolean.get()
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.CountDownLatch.countDown()
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.CyclicBarrier.await(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.util.concurrent.CountDownLatch.await(J, java.util.concurrent.TimeUnit)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.runner.notification.ConcurrentRunNotifierTest$AbstractConcurrentFailuresTest.addListener(org.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.shutdown()
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicBoolean.set(Z)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.runner.notification.ConcurrentRunNotifierTest.countReportedTestFailures([Lorg.junit.runner.notification.ConcurrentRunNotifierTest$ExaminedListener;)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Útil
Método: java.util.concurrent.CountDownLatch.await(J, java.util.concurrent.TimeUnit)
Útil
Método: java.lang.Thread.currentThread()
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.17647058823529413
Corretude: 0.375
F-Measure: 0.24
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addFirstAndRemoveWithThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518598716263243
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addFirstAndRemoveWithNonThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518598716263243
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addAndRemoveWithNonThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518598716263243
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: org.junit.runner.notification.RunNotifierTest.addAndRemoveWithThreadSafeListener() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
java.util.concurrent.atomic.AtomicInteger.get()
org.hamcrest.core.Is.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Primeira Chamada
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518598716263243
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)
Situação: Manual
Chamada: org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicInteger.get()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Integer)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: org.junit.runner.notification.SynchronizedRunListenerTest$MethodSignature.MethodSignature(java.lang.reflect.Method) ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Method.getName()
java.lang.reflect.Method.getParameterTypes()
java.util.Arrays.asList([Ljava.lang.Class;)
Chamada: java.lang.reflect.Method.getName()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Method.getParameterTypes()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.23076910721886265
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Arrays.asList([Ljava.lang.Class;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getName()
Inútil
Método: java.lang.reflect.Method.getParameterTypes()
Útil
Método: java.lang.reflect.Method.getReturnType()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.runner.notification.SynchronizedRunListenerTest.toStringDelegates() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
wrap
toString
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.toString()
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: wrap
Situação: Manual
Chamada: toString
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.10370364641977754
Suporte: 0.00670498
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.runner.notification.SynchronizedRunListenerTest.namedListenerCorrectlyImplementsEqualsAndHashCode() ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
org.junit.Assert.assertNotEquals(J, J)
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09890093248650832
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3333333333333333
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14999989559995572
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3333333333333333
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3333333333333333
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14999989559995572
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14999989559995572
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
Situação: Manual
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.12087907045045707
Suporte: 0.0052682
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
Situação: Manual
Chamada: org.junit.runner.notification.SynchronizedRunListenerTest$NamedListener.hashCode()
Situação: Manual
Chamada: org.junit.Assert.assertNotEquals(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: java.lang.Thread.currentThread()
Inútil
Método: org.junit.Assert.assertFalse(Z)
Útil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.34782608695652173
Corretude: 0.375
F-Measure: 0.3609022556390977
************************ Método Avaliado: org.junit.runner.notification.SynchronizedRunListenerTest$MethodSignature.equals(java.lang.Object) ************************
*Commit: commit 72af03c49fdad5f10e36c7eb4e7045feb971d253 1362584002 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.util.List.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.List.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.ParameterSignature.canAcceptUnboxed(java.lang.Class) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Class.isAssignableFrom(java.lang.Class)
Chamada: java.lang.Class.getDeclaredField(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.reflect.Field.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.reflect.Modifier.isStatic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Object) ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Array.getLength(java.lang.Object)
java.lang.reflect.Array.get(java.lang.Object, I)
org.junit.experimental.theories.ParameterSignature.canAcceptValue(java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.reflect.Array.getLength(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Array.get(java.lang.Object, I)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptValue(java.lang.Object)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.theories.ParameterSignatureTest.primitiveTypesShouldBeAcceptedAsWrapperTypeAssignables() ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
java.util.List.get(I)
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152542228922698
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.08333333333333333
F-Measure: 0.11764705882352941
************************ Método Avaliado: org.junit.tests.experimental.theories.ParameterSignatureTest.wrapperTypesShouldBeAcceptedAsPrimitiveTypes() ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
java.util.List.get(I)
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152542228922698
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.08333333333333333
F-Measure: 0.11764705882352941
************************ Método Avaliado: org.junit.tests.experimental.theories.ParameterSignatureTest.primitiveTypesShouldBeAcceptedAsWrapperTypes() ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
java.util.List.get(I)
org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152542228922698
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.08333333333333333
F-Measure: 0.11764705882352941
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointsArrayShouldBeRecognized() ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointsArrayShouldBeRecognizedOnValueTypeNotFieldType() ************************
*Commit: commit cc8497f28e1d5a46d7940a0b36556154c83d6f7a 1362964620 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointMethodShouldBeRecognizedOnValueTypeNotFieldType() ************************
*Commit: commit e9d4de8e15255b03b60e935390e517d4de90a73b 1363216390 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointMethodShouldBeRecognizedForOverlyGeneralParameters() ************************
*Commit: commit e9d4de8e15255b03b60e935390e517d4de90a73b 1363216390 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.runner.FilterFactoryFactory.createFilterFromFilterSpec(java.lang.String) ************************
*Commit: commit 34336085d5aba69c997f8e6b244531561afebcd4 1363294297 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.contains(java.lang.CharSequence)
java.lang.String.split(java.lang.String, I)
createFilterFactory
parseArgs
createFilter
createFilter
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.split(java.lang.String, I)
Situação: Manual
Chamada: createFilterFactory
Situação: Manual
Chamada: parseArgs
Situação: Manual
Chamada: createFilter
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: createFilterFactory ************************
*Commit: commit 34336085d5aba69c997f8e6b244531561afebcd4 1363294297 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.Throwable.getMessage()
Chamada: java.lang.Class.getConstructor([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Inútil
Método: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.assertWasNotRun(java.lang.Class) ************************
*Commit: commit 34336085d5aba69c997f8e6b244531561afebcd4 1363294297 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest$TestListener.wasRun(java.lang.Class)
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: org.junit.runner.FilterOptionIntegrationTest$TestListener.wasRun(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterOptionIntegrationTest.assertWasRun(java.lang.Class) ************************
*Commit: commit 34336085d5aba69c997f8e6b244531561afebcd4 1363294297 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
org.junit.runner.FilterOptionIntegrationTest$TestListener.wasRun(java.lang.Class)
org.junit.Assert.assertTrue(java.lang.String, Z)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: org.junit.runner.FilterOptionIntegrationTest$TestListener.wasRun(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryFactoryTest.shouldThrowExceptionIfNotFilterFactory() ************************
*Commit: commit 15c6048229bd16c4bfdd80b23f37357a58226d20 1363389992 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
java.lang.Class.getName()
createFilterFactory
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: createFilterFactory
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCoreTest.shouldAddFailuresToResult() ************************
*Commit: commit 15c6048229bd16c4bfdd80b23f37357a58226d20 1363389992 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, [Ljava.lang.String;)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.hamcrest.MatcherAssert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.23611075666709197
Suporte: 0.00814176
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.222222093333488
Suporte: 0.00766284
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882352218684904
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.TestCase.assertEquals(I, I)
Inútil
Método: java.util.List.get(I)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.375
Corretude: 0.2727272727272727
F-Measure: 0.3157894736842105
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod$DataPointMethodReturnsMutableObject.everythingsEmpty(java.util.List, I) ************************
*Commit: commit ccf0c0af551df541e40edb07d19a57072a8b14b1 1363473349 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.add(java.lang.Object)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.add(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.getAllArguments() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
org.junit.experimental.theories.internal.Assignments.getActualValues(I, I)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.internal.Assignments.getActualValues(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.getMethodArguments() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.internal.Assignments.getConstructorParameterCount()
java.util.List.size()
org.junit.experimental.theories.internal.Assignments.getActualValues(I, I)
Chamada: org.junit.experimental.theories.internal.Assignments.getConstructorParameterCount()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.experimental.theories.internal.Assignments.getActualValues(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.getActualValues(I, I) ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.get(I)
org.junit.experimental.theories.PotentialAssignment.getValue()
Chamada: java.util.List.get(I)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.allMemberValuesFor(java.lang.Class, [Ljava.lang.Class;) ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
java.util.List.get(I)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Chamada: java.lang.Class.getConstructor([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.5
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)
Útil
Método: org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)
Útil
Método: java.util.List.get(I)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.allMembersFailsOnFailingDataPointsArrayMethod() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.allMemberValuesFor(java.lang.Class, [Ljava.lang.Class;)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.allMemberValuesFor(java.lang.Class, [Ljava.lang.Class;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithDataPointMethod.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.ShouldRejectTheoriesWithOnlyDisallowedNullData() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullElementsFromDataPointArrays() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.6666666666666666
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithExtendedParameterSources.shouldFilterOutNullSingleDataPoints() ************************
*Commit: commit 5c2070d7cf981e2e103aef6fd0ef64c473331325 1363474437 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.6666666666666666
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInDataPointArrayMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreSingleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.6666666666666666
F-Measure: 0.8
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldFailFromExceptionsInSingleDataPointMethods() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingMultipleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldNotIgnoreNonMatchingSingleDataPointExceptions() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertFalse(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.io.File.exists()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.FailingDataPointMethods.shouldIgnoreMultipleDataPointMethodExceptionsOnRequest() ************************
*Commit: commit 50e3d1bc87b4b16f0617b6212252363f499397ab 1363480246 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.43421020096982016
Suporte: 0.0158046
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9342088272868387
Suporte: 0.0340038
F-Measure Suporte e Confiança: 0.066
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.6666666666666666
F-Measure: 0.8
************************ Método Avaliado: org.junit.experimental.theories.internal.Assignments.generateAssignmentsFromTypeAlone(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.ParameterSignature.getType()
java.lang.Class.isEnum()
getValueSources
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
getValueSources
java.util.Collections.emptyList()
Chamada: org.junit.experimental.theories.ParameterSignature.getType()
Situação: Primeira Chamada
Chamada: java.lang.Class.isEnum()
Situação: Manual
Chamada: getValueSources
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.31250032624979773
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: getValueSources
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.experimental.theories.internal.BooleanSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.asList([Lorg.junit.experimental.theories.PotentialAssignment;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.EnumSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature) ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getEnumConstants()
java.lang.Object.toString()
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.Class.getEnumConstants()
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Método: java.lang.Object.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints.shouldAutomaticallyGenerateBooleanDataPoints() ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
size
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: size
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints.shouldNotAutogenerateBooleanDataPointsWhenSpecificDataPointGiven() ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
size
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: size
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints.shouldNotAutogenerateEnumDataPointsWhenSpecificDataPointGiven() ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
size
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: size
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints.shouldAutomaticallyGenerateEnumDataPoints() ************************
*Commit: commit af692868db814126bbac29a1f28f5adf30c6ce1c 1363482857 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints$ENUM.values()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
size
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.tests.experimental.theories.runner.WithAutoGeneratedDataPoints$ENUM.values()
Situação: Primeira Chamada
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: potentialAssignments
Situação: Manual
Chamada: size
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoryFactory.createFilterFromFilterSpec(org.junit.runner.Description, java.lang.String) ************************
*Commit: commit 5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee 1363817066 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.contains(java.lang.CharSequence)
java.lang.String.split(java.lang.String, I)
createFilter
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.split(java.lang.String, I)
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParserTest.shouldCreateFailureUponBaldFilterOptionNotFollowedByValue() ************************
*Commit: commit 9d9899bce3506e7d87ebc6352a3cf3d25ea20f54 1363883725 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
parseOptions
getFailures
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Chamada: parseOptions
Situação: Primeira Chamada
Chamada: getFailures
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.22033889307668625
Suporte: 0.00622605
F-Measure Suporte e Confiança: 0.013
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.Throwable, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.14285714285714285
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilterFactoryTest.shouldThrowException() ************************
*Commit: commit aa7c75db0608e8ce9e76ee60c70ba429c7260fba 1363896057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.TestName.getMethodName()
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
createFilter
Chamada: org.junit.rules.TestName.getMethodName()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.isAssignableToAnyOf([Ljava.lang.Class;, java.lang.Object) ************************
*Commit: commit dbe771125873b707dfbc95f066649b4be8f247b2 1363965256 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.runners.statements.FailOnTimeout.createTimeoutException(java.lang.Thread) ************************
*Commit: commit 85b7c26e63f851004ce20d4a00fbf1b46607ab0c 1364711584 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Thread.getStackTrace()
java.lang.Enum.name()
java.lang.String.toLowerCase()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement;)
java.lang.Thread.interrupt()
Chamada: java.lang.Thread.getStackTrace()
Situação: Primeira Chamada
Chamada: java.lang.Enum.name()
Situação: Manual
Chamada: java.lang.String.toLowerCase()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement;)
Situação: Manual
Chamada: java.lang.Thread.interrupt()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.theories.internal.AllMembersSupplier.addIterableValues(org.junit.experimental.theories.ParameterSignature, java.lang.String, java.util.List, java.lang.Iterable) ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.junit.experimental.theories.ParameterSignature.canAcceptValue(java.lang.Object)
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.experimental.theories.ParameterSignature.canAcceptValue(java.lang.Object)
Situação: Manual
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.add(org.junit.experimental.theories.PotentialAssignment)
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.4
Corretude: 1.0
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointsCollectionFieldsShouldBeRecognized() ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointsCollectionMethodShouldBeRecognized() ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.AllMembersSupplierTest.dataPointsCollectionShouldBeRecognizedIgnoringStrangeTypes() ************************
*Commit: commit b421d0ebd66701187c10c2b0c7f519dc435531ae 1364841477 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
potentialAssignments
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: potentialAssignments
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18867947571415628
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: org.junit.internal.runners.JUnit38ClassRunner.getAnnotations(junit.framework.TestCase) ************************
*Commit: commit 0fa3f12d9b69cb8c97021507bce367be386be338 1364928250 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
junit.framework.TestCase.getName()
java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.getDeclaredAnnotations()
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: junit.framework.TestCase.getName()
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Manual
Chamada: java.lang.reflect.Method.getDeclaredAnnotations()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: createFilterFromFilterSpec ************************
*Commit: commit 826529633261161edd2d9dc0f866b2c3c0420514 1367263226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.contains(java.lang.CharSequence)
java.lang.String.split(java.lang.String, I)
createFilter
createFilter
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.split(java.lang.String, I)
Situação: Manual
Chamada: createFilter
Situação: Manual
Chamada: createFilter
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.junit3compatibility.JUnit38ClassRunnerTest.getDescriptionWithAnnotation() ************************
*Commit: commit c6e3d2cf121ce6e371bafefa59f216054167845b 1367460417 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.JUnit38ClassRunner.getDescription()
org.junit.runner.Description.testCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getMethodName()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.getAnnotation(java.lang.Class)
org.junit.Assert.assertNotNull(java.lang.Object)
org.junit.runner.Description.getAnnotation(java.lang.Class)
org.junit.Assert.assertNull(java.lang.Object)
Chamada: org.junit.internal.runners.JUnit38ClassRunner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertNotNull(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertNull(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.model.Statement.evaluate()
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Description.getMethodName()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsEveryTestOfArray() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.236363463801678
Suporte: 0.0124521
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44545385520671194
Suporte: 0.0234674
F-Measure Suporte e Confiança: 0.045
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsForEverySingleArgumentOfIterable() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.236363463801678
Suporte: 0.0124521
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44545385520671194
Suporte: 0.0234674
F-Measure Suporte e Confiança: 0.045
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.runsForEverySingleArgumentOfArray() ************************
*Commit: commit f6a3d7405b72966d3714355804e1b3c14b1425cb 1373732375 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.236363463801678
Suporte: 0.0124521
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44545385520671194
Suporte: 0.0234674
F-Measure Suporte e Confiança: 0.045
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.junit3compatibility.JUnit38ClassRunnerTest.assertAnnotationFiltering(org.junit.internal.runners.JUnit38ClassRunner) ************************
*Commit: commit 810536929044271a608e019255e87c756235bb97 1376529920 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.JUnit38ClassRunner.getDescription()
org.junit.runner.Description.testCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getMethodName()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.getAnnotation(java.lang.Class)
org.junit.Assert.assertNotNull(java.lang.Object)
org.junit.runner.Description.getAnnotation(java.lang.Class)
org.junit.Assert.assertNull(java.lang.Object)
Chamada: org.junit.internal.runners.JUnit38ClassRunner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertNotNull(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertNull(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.model.Statement.evaluate()
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Description.getMethodName()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedMethodValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethodValues(java.lang.Object, java.lang.Class, java.lang.Class)
org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethodValues(java.lang.Object, java.lang.Class, java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.4
Corretude: 0.4
F-Measure: 0.4000000000000001
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotatedFieldValues() ************************
*Commit: commit 0beb67934c5ca6d3f7e1feb9e102ac0d04186475 1377115426 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)
org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.4
Corretude: 0.4
F-Measure: 0.4000000000000001
************************ Método Avaliado: org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleError() ************************
*Commit: commit cb818f191ea2b9fe563aa20c581b16f3f23b7c4c 1379048516 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Throwable)
org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
org.junit.Assert.fail()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Chamada: java.util.Collections.singletonList(java.lang.Throwable)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
Situação: Manual
Chamada: org.junit.Assert.fail()
Situação: Manual
Chamada: org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyRethrowsSingleRuntimeException() ************************
*Commit: commit cb818f191ea2b9fe563aa20c581b16f3f23b7c4c 1379048516 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Throwable)
org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
org.junit.Assert.fail()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Chamada: java.util.Collections.singletonList(java.lang.Throwable)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
Situação: Manual
Chamada: org.junit.Assert.fail()
Situação: Manual
Chamada: org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreadedStuckInMain() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.818180782810068
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.26666713066718634
Suporte: 0.00766284
F-Measure Suporte e Confiança: 0.015
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.23333356533359317
Suporte: 0.00670498
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7142869926532219
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.Assert.assertTrue(java.lang.String, Z)
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Percentual de Automatização: 0.6428571428571429
Corretude: 0.5384615384615384
F-Measure: 0.586046511627907
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable) ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.printStackTrace(java.io.PrintWriter)
java.lang.Object.toString()
Chamada: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuffer.toString()
Inútil
Método: java.io.StringWriter.getBuffer()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.timeoutFailureMultithreaded() ************************
*Commit: commit fba19ba73a93dcc2d18942b3cf4992ce010afdb2 1380735147 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getException()
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.818180782810068
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.26666713066718634
Suporte: 0.00766284
F-Measure Suporte e Confiança: 0.015
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.23333356533359317
Suporte: 0.00670498
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.notification.Failure.getException()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.tests.running.methods.TimeoutTest.stackForException(java.lang.Throwable)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7142869926532219
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7142869926532219
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.Assert.assertTrue(java.lang.String, Z)
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.hamcrest.core.Is.is(java.lang.Long)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Útil
Método: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.lang.Object.getClass()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Percentual de Automatização: 0.625
Corretude: 0.4666666666666667
F-Measure: 0.5343511450381679
************************ Método Avaliado: org.junit.experimental.validator.CategoryValidator.addErrorMessage(java.util.List, java.lang.Class) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getSimpleName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.Class.getSimpleName()
Situação: Primeira Chamada
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.annotation.Annotation.annotationType()
java.lang.Class.getAnnotations()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Primeira Chamada
Chamada: java.lang.Class.getAnnotations()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.ParentRunner.invokeValidatorsOnFields(java.util.List) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
org.junit.runners.model.FrameworkField.getAnnotations()
org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
org.junit.runners.ParentRunner.invokeValidatorsOnField(java.lang.annotation.Annotation, org.junit.runners.model.FrameworkField, java.util.List)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Manual
Chamada: org.junit.runners.model.FrameworkField.getAnnotations()
Situação: Manual
Chamada: org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.invokeValidatorsOnField(java.lang.annotation.Annotation, org.junit.runners.model.FrameworkField, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.ParentRunner.invokeValidatorsOnClass(java.lang.annotation.Annotation, java.util.List) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createAnnotationValidators
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
validateAnnotatedClass
Chamada: createAnnotationValidators
Situação: Primeira Chamada
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1923081247339806
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: validateAnnotatedClass
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: org.junit.runners.ParentRunner.invokeValidatorsOnMethods(java.util.List) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
org.junit.runners.model.FrameworkMethod.getAnnotations()
org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
org.junit.runners.ParentRunner.invokeValidatorsOnMethod(java.lang.annotation.Annotation, org.junit.runners.model.FrameworkMethod, java.util.List)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.23076910721886265
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.runners.model.FrameworkMethod.getAnnotations()
Situação: Manual
Chamada: org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.invokeValidatorsOnMethod(java.lang.annotation.Annotation, org.junit.runners.model.FrameworkMethod, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: java.util.List.isEmpty()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Útil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.runners.ParentRunner.invokeValidatorsOnClass(java.util.List) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotations()
org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
org.junit.runners.ParentRunner.invokeValidatorsOnClass(java.lang.annotation.Annotation, java.util.List)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotations()
Situação: Manual
Chamada: org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.annotation.Annotation)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.invokeValidatorsOnClass(java.lang.annotation.Annotation, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.annotatedFieldsAreReturned() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
java.util.Set.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runners.model.FrameworkField.getName()
java.util.Set.add(java.lang.String)
org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7666657386656274
Suporte: 0.0110153
F-Measure Suporte e Confiança: 0.022
Chamada: org.junit.runners.model.FrameworkField.getName()
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.25
F-Measure: 0.18181818181818182
************************ Método Avaliado: org.junit.runners.model.TestClassTest.annotatedMethodsAreReturned() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
java.util.Set.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runners.model.FrameworkMethod.getName()
java.util.Set.add(java.lang.String)
org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7666657386656274
Suporte: 0.0110153
F-Measure Suporte e Confiança: 0.022
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.hasItems([Ljava.lang.String;)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.Set, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.List.isEmpty()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.errorIsAddedWhenCategoryIsUsedWithAfterClass() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.errorIsAddedWhenCategoryIsUsedWithAfter() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.errorIsNotAddedWhenCategoryIsNotCombinedWithIllegalCombination() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
validateAnnotatedMethod
java.util.List.isEmpty()
org.hamcrest.CoreMatchers.is(java.lang.Boolean)
org.junit.Assert.assertThat(java.lang.Boolean, org.hamcrest.Matcher)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: validateAnnotatedMethod
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Boolean)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Boolean, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Boolean, org.hamcrest.Matcher)
Útil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateAnnotatedMethod
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.21428571428571427
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.errorIsAddedWhenCategoryIsUsedWithBeforeClass() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.validation.CategoryValidatorTest.errorIsAddedWhenCategoryIsUsedWithBefore() ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.validation.CategoryValidatorTest.testAndAssertErrrorMessage(java.lang.reflect.Method, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class, I, java.lang.String) ************************
*Commit: commit 48af7e797dbefa1fc47e80394c7f74ef87c3c7ab 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailureCount()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.hamcrest.CoreMatchers.equalTo(java.lang.String)
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.29787201904964994
Suporte: 0.00670498
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.runner.Result.getFailures()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.23611075666709197
Suporte: 0.00814176
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.222222093333488
Suporte: 0.00766284
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.equalTo(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.runner.Result.getFailures()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.Collection.size()
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2631578947368421
F-Measure: 0.3448275862068966
************************ Método Avaliado: org.junit.runners.ParentRunner.hasValidatorAnnotation(java.lang.Class) ************************
*Commit: commit 85f9d8397bfd96261c3214284672180c522e2d38 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getAnnotations()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
Chamada: java.lang.Class.getAnnotations()
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.validator.AnnotationValidatorFactoryTest.createAnnotationValidator() ************************
*Commit: commit bae4bd80513360c5e884e760447000d9c96ffd72 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
createAnnotationValidator
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: createAnnotationValidator
Situação: Manual
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.validator.AnnotationValidatorFactoryTest.exceptionWhenValidatorIsNotAnAnnotationValidator() ************************
*Commit: commit bae4bd80513360c5e884e760447000d9c96ffd72 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
getAnnotation
createAnnotationValidator
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: getAnnotation
Situação: Manual
Chamada: createAnnotationValidator
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.validator.AnnotationValidatorFactoryTest.nullArgumentReturnsDefaultAnnotationValidator() ************************
*Commit: commit bae4bd80513360c5e884e760447000d9c96ffd72 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createAnnotationValidator
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: createAnnotationValidator
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertClassHasFailureMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit 1273a35689bdcb3304f6634cdc3889c61f9b1b1f 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailures()
org.junit.runner.notification.Failure.getMessage()
java.util.List.add(java.lang.String)
org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.29787201904964994
Suporte: 0.00670498
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: org.hamcrest.core.IsCollectionContaining.hasItem(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.model.Statement.evaluate()
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.09090909090909091
F-Measure: 0.11764705882352942
************************ Método Avaliado: org.junit.experimental.validator.AnnotationValidatorFactoryTest.exceptionWhenAnnotationValidatorCantBeCreated() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
getAnnotation
createAnnotationValidator
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: getAnnotation
Situação: Manual
Chamada: createAnnotationValidator
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.validator.AnnotationValidatorFactoryTest.exceptionWhenAnnotationWithNullClassIsPassedIn() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
createAnnotationValidator
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: createAnnotationValidator
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFields() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToFields
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotationToFields
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToMethodsReturnsValuesInTheMapThatAreUnmodifiable() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
getAnnotationToMethods
java.util.Map.put(java.lang.Class, java.util.List)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: getAnnotationToMethods
Situação: Manual
Chamada: java.util.Map.put(java.lang.Class, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToMethods() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToMethods
java.util.Map.get(java.lang.Object)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotationToMethods
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFieldsReturnsValuesInTheMapThatAreUnmodifiable() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
getAnnotationToFields
java.util.Map.get(java.lang.Object)
java.util.List.add(org.junit.runners.model.FrameworkField)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: getAnnotationToFields
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(org.junit.runners.model.FrameworkField)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToMethodsReturnsUnmodifiableMap() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
getAnnotationToMethods
java.util.Map.put(java.lang.Class, java.util.List)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: getAnnotationToMethods
Situação: Manual
Chamada: java.util.Map.put(java.lang.Class, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFieldsReturnsUnmodifiableMap() ************************
*Commit: commit d3ee5d06c0b797ce812cbfe35addc6146d5f07cb 1381181118 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
getAnnotationToFields
java.util.Map.put(java.lang.Class, java.util.List)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: getAnnotationToFields
Situação: Manual
Chamada: java.util.Map.put(java.lang.Class, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.annotationToFieldsReturnsKeysInADeterministicOrder() ************************
*Commit: commit c75dcc28810aeb1c918ee7430981b31f41742ea7 1381181119 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotationToFields
java.util.Map.keySet()
java.util.List.add(java.lang.Class)
java.util.List.get(I)
org.hamcrest.CoreMatchers.is(java.lang.Class)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
java.util.List.get(I)
org.hamcrest.CoreMatchers.is(java.lang.Class)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: getAnnotationToFields
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.List.add(java.lang.Class)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152542228922698
Suporte: 0.00431034
F-Measure Suporte e Confiança: 0.009
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryValidatorTest.testAndAssertErrorMessage(org.junit.runners.model.FrameworkMethod, java.lang.String) ************************
*Commit: commit d9054149988487750679e35a349df7e0e2df5870 1381181119 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateAnnotatedMethod
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.List.get(I)
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateAnnotatedMethod
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.21428571428571427
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionTest$UseCustomMessageWithoutPlaceHolder.noThrow() ************************
*Commit: commit f40f106b3721c9b3f9a7d535df1027588d64dcaf 1382051602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.reportMissingExceptionWithMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.reportMissingExceptionWithMessage(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionTest$UseCustomMessageWithPlaceHolder.noThrow() ************************
*Commit: commit f40f106b3721c9b3f9a7d535df1027588d64dcaf 1382051602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.reportMissingExceptionWithMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.reportMissingExceptionWithMessage(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.beforeFailsButTestIsFiltered() ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.classes([Ljava.lang.Class;)
org.junit.experimental.categories.Categories$CategoryFilter.exclude(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.Request.classes([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.exclude(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6666666666666666
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.wasSuccessful()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String) ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.Failure.getMessage()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String) ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
java.util.List.isEmpty()
java.util.List.get(I)
org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7894742626049497
Suporte: 0.0143678
F-Measure Suporte e Confiança: 0.029
Chamada: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.runClassAndVerifyNoFailures(java.lang.Class, java.lang.String) ************************
*Commit: commit bfa4cea92005b0272e44cd245308dc4f4abaa4cf 1382277615 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.validation.ClassLevelMethodsOnlyRunWhenNecessaryTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String) ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.notification.Failure.getMessage()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String) ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
java.util.List.isEmpty()
java.util.List.get(I)
org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7894742626049497
Suporte: 0.0143678
F-Measure Suporte e Confiança: 0.029
Chamada: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyzeFailure(org.junit.runner.notification.Failure, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.beforeFailsButTestIsFiltered() ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.classes([Ljava.lang.Class;)
org.junit.experimental.categories.Categories$CategoryFilter.exclude(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.Request.classes([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.exclude(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6666666666666666
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.wasSuccessful()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.runClassAndVerifyNoFailures(java.lang.Class, java.lang.String) ************************
*Commit: commit 4df71abb70690c98d42787bfe9f098f9fff01946 1382393196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.tests.validation.ClassLevelMethodsWithIgnoreTest.analyseResult(org.junit.runner.Result, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.RuleFieldValidatorTest.rejectClassRuleInNonPublicClass() ************************
*Commit: commit 9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403 1384986900 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Chamada: org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5333335189332828
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertNumberOfErrors(I)
Inútil
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: exceptionWithTimeout ************************
*Commit: commit bf2f922c9445e6ee24891f64a5a7ca0e68f7f786 1385988720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getTimeout
getTimeUnit
equals
java.lang.Enum.name()
java.lang.String.toLowerCase()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.hamcrest.Description.appendText(java.lang.String)
getTimeout
getTimeUnit
name
toLowerCase
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.hamcrest.Description.appendText(java.lang.String)
Chamada: getTimeout
Situação: Primeira Chamada
Chamada: getTimeUnit
Situação: Manual
Chamada: equals
Situação: Manual
Chamada: java.lang.Enum.name()
Situação: Manual
Chamada: java.lang.String.toLowerCase()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Manual
Chamada: getTimeout
Situação: Manual
Chamada: getTimeUnit
Situação: Manual
Chamada: name
Situação: Manual
Chamada: toLowerCase
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.21428486204325128
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.272726927603356
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.hamcrest.Description.appendValue(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)
Inútil
Método: org.hamcrest.Description.appendText(java.lang.String)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: org.junit.runners.model.FrameworkFieldTest.cannotBeCreatedWithoutUnderlyingField() ************************
*Commit: commit 4e9f1a65ca8d794db54260b4f2e5b078d949fdda 1388170480 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.FrameworkMethodTest.cannotBeCreatedWithoutUnderlyingField() ************************
*Commit: commit 4e9f1a65ca8d794db54260b4f2e5b078d949fdda 1388170480 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.FrameworkFieldTest.hasToStringWhichPrintsFieldName() ************************
*Commit: commit 0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7 1388170489 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getField(java.lang.String)
java.lang.Object.toString()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Class.getField(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4583315208407645
Suporte: 0.0052682
F-Measure Suporte e Confiança: 0.011
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: org.junit.runners.model.FrameworkMethodTest.hasToStringWhichPrintsMethodName() ************************
*Commit: commit 0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7 1388170489 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.Object.toString()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4583315208407645
Suporte: 0.0052682
F-Measure Suporte e Confiança: 0.011
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: junit.framework.TestCase.assertTrue(Z)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.1111111111111111
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedMethodsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
org.junit.runners.model.FrameworkMethod.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.List.isEmpty()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: java.util.Iterator.next()
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.15384615384615385
F-Measure: 0.1904761904761905
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.providesAnnotatedFieldsSortedByName() ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
java.util.List.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
java.util.List.iterator()
java.util.Iterator.next()
org.junit.runners.model.FrameworkField.getName()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.runners.model.FrameworkField.getName()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.Iterator.next()
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.validator.AnnotationsValidatorTest.assertClassHasFailureMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit 9d3821f6411ad85a683b8d38e4d42411229f2eec 1390512097 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateTestClass
java.util.Collection.size()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.Throwable.getMessage()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: validateTestClass
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.runners.model.TestClass.equals(java.lang.Object) ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Object.getClass()
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.10256395155850136
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.2
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParameters.equals(java.lang.Object) ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Object.getClass()
java.lang.String.equals(java.lang.Object)
java.util.List.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.10256395155850136
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.List.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParameters.hashCode() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.hashCode()
java.lang.Object.hashCode()
java.util.List.hashCode()
Chamada: java.lang.String.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.util.List.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.isEqualToTestClassThatWrapsNoJavaClassToo() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.hasSameHashCodeAsTestClassThatWrapsSameJavaClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.junit.Assert.assertEquals(J, J)
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.TestClassTest.isNotEqualToNull() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.isNotEqualToTestClassThatWrapsADifferentJavaClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.isEqualToTestClassThatWrapsSameJavaClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParametersTest.doesNotConsiderParametersWhichChangedAfterTestInstantiation() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.List.set(I, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
getParameters
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: java.util.Arrays.asList([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: java.util.List.set(I, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: getParameters
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.internal.MethodSorterTest.getDeclaredMethodNames(java.lang.Class)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParametersTest.cannotBeCreatedWithoutTestClass() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParametersTest.cannotBeCreatedWithoutAName() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParametersTest.cannotBeCreatedWithoutParameters() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.parameterized.TestWithParametersTest.doesNotAllowToModifyProvidedParameters() ************************
*Commit: commit 3e08f69912d69189e895c279b1bece0c7c0840f4 1393441101 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExpectedException.expect(java.lang.Class)
getParameters
set
Chamada: org.junit.rules.ExpectedException.expect(java.lang.Class)
Situação: Primeira Chamada
Chamada: getParameters
Situação: Manual
Chamada: set
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)
Inútil
Método: org.junit.rules.ExpectedException.expectMessage(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingConstructorInjection() ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.1923081247339806
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15384633917170595
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Útil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.4
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.validateFields(java.util.List) ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.fieldsAreAnnotated()
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
java.util.List.size()
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getAnnotation(java.lang.Class)
org.junit.runners.Parameterized$Parameter.value()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.add(java.lang.Throwable)
java.util.List.add(java.lang.Throwable)
java.util.List.add(java.lang.Throwable)
Chamada: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.fieldsAreAnnotated()
Situação: Primeira Chamada
Chamada: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.junit.runners.Parameterized$Parameter.value()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3478271131970986
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.37499934750040453
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.45454545454545453
Corretude: 0.25
F-Measure: 0.3225806451612903
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingFieldInjection() ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
java.util.List.size()
java.util.List.size()
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.newInstance()
org.junit.runners.model.FrameworkField.getField()
java.lang.reflect.Field.getAnnotation(java.lang.Class)
org.junit.runners.Parameterized$Parameter.value()
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getName()
java.lang.reflect.Field.getName()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.reflect.Field.getType()
java.lang.Class.getSimpleName()
Chamada: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.15094373815648995
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Manual
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1923081247339806
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.newInstance()
Situação: Manual
Chamada: org.junit.runners.model.FrameworkField.getField()
Situação: Manual
Chamada: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.428571002448926
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.runners.Parameterized$Parameter.value()
Situação: Manual
Chamada: java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.23076910721886265
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.runners.model.TestClass.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.reflect.Field.getName()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.428571002448926
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2051279031170027
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getName()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: java.lang.reflect.Field.getName()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.runners.ParentRunner.getTestClass()
Útil
Método: java.lang.Class.getSimpleName()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Útil
Percentual de Automatização: 0.4375
Corretude: 0.4117647058823529
F-Measure: 0.42424242424242425
************************ Método Avaliado: org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getAnnotatedFieldsByParameter() ************************
*Commit: commit dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: createTestWithNotNormalizedParameters ************************
*Commit: commit cb6abf6fc729f07c5d60b0756e91af444400b4b5 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
createTestWithParameters
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: createTestWithParameters
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Inútil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.assertTestCreatesSingleFailureWithMessage(java.lang.Class, java.lang.String) ************************
*Commit: commit cb6abf6fc729f07c5d60b0756e91af444400b4b5 1393441109 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44545385520671194
Suporte: 0.0234674
F-Measure Suporte e Confiança: 0.045
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9166662316669364
Suporte: 0.0052682
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.runner.notification.Failure.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333324633338728
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.2727272727272727
F-Measure: 0.33333333333333326
************************ Método Avaliado: org.junit.tests.running.methods.TimeoutTest.testZeroTimeoutIsIgnored() ************************
*Commit: commit c52397d4d704a85499a17e9d3a2c1bcb8c5f0906 1397577096 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.runners.ParentRunner.applyValidators(java.util.List) ************************
*Commit: commit 1d97da73fdafce8f5cf9d722f23c5cba41b26b70 1398129536 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
org.junit.runners.ParentRunner.getTestClass()
validateTestClass
java.util.List.addAll(java.util.Collection)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1923081247339806
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.23076910721886265
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: validateTestClass
Situação: Manual
Chamada: java.util.List.addAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.ParentRunner.getTestClass()
Útil
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getName()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Método: java.lang.reflect.Field.getName()
Inútil
Método: java.lang.reflect.Field.getAnnotation(java.lang.Class)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.runners.model.TestClass.isPublic() ************************
*Commit: commit 1d97da73fdafce8f5cf9d722f23c5cba41b26b70 1398129536 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
Chamada: java.lang.Class.getModifiers()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5999983296027795
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.validator.PublicClassValidatorTest.rejectsNonPublicClass() ************************
*Commit: commit 1d97da73fdafce8f5cf9d722f23c5cba41b26b70 1398129536 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
validateTestClass
java.util.List.size()
org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Chamada: validateTestClass
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.equalTo(java.lang.Integer)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilder.getEnclosingClassForNonStaticMemberClass(java.lang.Class) ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.isMemberClass()
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isStatic(I)
java.lang.Class.getEnclosingClass()
Chamada: java.lang.Class.isMemberClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isStatic(I)
Situação: Manual
Chamada: java.lang.Class.getEnclosingClass()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Modifier.isPublic(I)
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.memberClassDeepInsideAnnotatedTopLevelClass_isRunWithTopLevelRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
getInvokedTestClass
org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Chamada: getInvokedTestClass
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Útil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.topLevelTestClassWithoutAnnotation_isRunWithDefaultRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsNull.nullValue()
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsNull.nullValue()
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.topLevelTestClassWithAnnotation_isRunWithAnnotatedRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
getInvokedTestClass
org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Chamada: getInvokedTestClass
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Útil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.memberClassDeepInsideAnnotatedMemberClass_isRunWithParentMemberClassRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
getInvokedTestClass
org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Chamada: getInvokedTestClass
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Útil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.memberClassInsideAnnotatedTopLevelClass_isRunWithTopLevelRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
getInvokedTestClass
org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Chamada: getInvokedTestClass
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Útil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.internal.builders.AnnotatedBuilderTest.annotatedMemberClassInsideAnnotatedTopLevelClass_isRunWithOwnRunner() ************************
*Commit: commit 00711f69af5f74d1a5cce573290847b78ce34cec 1398584874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
getInvokedTestClass
org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
org.hamcrest.core.Is.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Chamada: org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.runner.Runner, org.hamcrest.Matcher)
Situação: Manual
Chamada: getInvokedTestClass
Situação: Manual
Chamada: org.hamcrest.core.IsEqual.equalTo(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.Class, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.core.Is.is(org.hamcrest.Matcher)
Útil
Método: org.hamcrest.core.IsEqual.equalTo(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assumptionViolatedAtParentLevel() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.8
Corretude: 0.2
F-Measure: 0.32000000000000006
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.parentRunnerTestMethods() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.8
Corretude: 0.2
F-Measure: 0.32000000000000006
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerTest.assertionErrorAtParentLevelTest() ************************
*Commit: commit 686240ea6cc89187c1fa190f077ea6dc73bdb258 1399249048 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.running.classes.ParentRunnerTest.runTestWithParentRunner(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.8
Corretude: 0.2
F-Measure: 0.32000000000000006
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatchesContext() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches2() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: junit.tests.framework.ComparisonCompactorTest.testComparisonErrorOverlappingMatches2Context() ************************
*Commit: commit cfe6afadc81b72449c8b0cb96d51aa57f7a593b7 1399883171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.ComparisonCompactor.compact(java.lang.String)
junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.ComparisonCompactor.compact(java.lang.String)
Situação: Primeira Chamada
Chamada: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9000004176001771
Suporte: 0.00862069
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: org.junit.runners.parameterized.ParameterizedNamesTest.parameterizedTestsWithSpecialCharsInName() ************************
*Commit: commit 5d05993602fc1e0ef384f3193790053ea706d0cd 1400062602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getChildren()
org.junit.runner.Description.getDisplayName()
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.425531328855244
Suporte: 0.00957854
F-Measure Suporte e Confiança: 0.019
Chamada: org.junit.runner.Runner.getDescription()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.40000041760017707
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.6250006524995955
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3191487187688808
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.getDescription()
Útil
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runners.model.Statement.evaluate()
Inútil
Método: java.util.ArrayList.get(I)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Método: org.junit.runner.Description.getMethodName()
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: java.util.Collection.size()
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Percentual de Automatização: 0.7142857142857143
Corretude: 0.35714285714285715
F-Measure: 0.4761904761904762
************************ Método Avaliado: org.junit.tests.description.TestDescriptionMethodNameTest.methodNameTest() ************************
*Commit: commit 5d05993602fc1e0ef384f3193790053ea706d0cd 1400062602 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.createTestDescription(java.lang.String, java.lang.String, [Ljava.lang.annotation.Annotation;)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.Description.createTestDescription(java.lang.String, java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.20000020880008854
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runners.model.Statement.evaluate()
Inútil
Método: org.junit.runner.Description.getAnnotations()
Inútil
Método: org.junit.runner.Description.getMethodName()
Útil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedSuffix(java.lang.String) ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.substring(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Math.min(I, I)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.28571449877553695
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.28571449877553695
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Útil
Método: java.lang.String.length()
Útil
Método: java.lang.String.substring(I, I)
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.9
Corretude: 0.75
F-Measure: 0.8181818181818182
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor.extractDiff(java.lang.String) ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666678266679659
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.substring(I, I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.String.substring(I, I)
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor.compactPrefix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.String.substring(I, I)
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor.compactSuffix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.substring(I, I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.String.substring(I, I)
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.ComparisonFailure$ComparisonCompactor.sharedPrefix() ************************
*Commit: commit a5d194fcb57b1b320ae808bc5a8d153f98f18a84 1401110775 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.Math.min(I, I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.Math.min(I, I)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.28571449877553695
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.28571449877553695
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00191571
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.substring(I, I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.428571002448926
Suporte: 0.00287356
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Math.min(I, I)
Útil
Método: java.lang.String.length()
Útil
Método: java.lang.String.substring(I, I)
Útil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.8333333333333334
Corretude: 1.0
F-Measure: 0.9090909090909091
************************ Método Avaliado: org.junit.tests.experimental.rules.RuleFieldValidatorTest.rejectStaticMethodRule() ************************
*Commit: commit 6ca812e0d62495b7de7611e95e58e4e797d6243f 1403119404 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Chamada: org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5333335189332828
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertNumberOfErrors(I)
Inútil
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.RuleFieldValidatorTest.rejectMethodStaticMethodRule() ************************
*Commit: commit 6ca812e0d62495b7de7611e95e58e4e797d6243f 1403119404 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Chamada: org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)
Situação: Primeira Chamada
Chamada: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5333335189332828
Suporte: 0.00383142
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertNumberOfErrors(I)
Inútil
Método: org.junit.tests.experimental.rules.RuleFieldValidatorTest.assertOneErrorWithMessage(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.FrameworkFieldTest.presentAnnotationIsAvailable() ************************
*Commit: commit 15c925c4412d993a12e91a2a6c0168977402efec 1403127642 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getField(java.lang.String)
getAnnotation
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Class.getField(java.lang.String)
Situação: Primeira Chamada
Chamada: getAnnotation
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.FrameworkMethodTest.missingAnnotationIsNotAvailable() ************************
*Commit: commit 15c925c4412d993a12e91a2a6c0168977402efec 1403127642 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
org.hamcrest.CoreMatchers.nullValue()
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.annotation.Annotation, org.hamcrest.Matcher)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.nullValue()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.annotation.Annotation, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.FrameworkMethodTest.presentAnnotationIsAvailable() ************************
*Commit: commit 15c925c4412d993a12e91a2a6c0168977402efec 1403127642 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Método: java.lang.reflect.Method.getModifiers()
Inútil
Método: java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.TestClassTest.presentAnnotationIsAvailable() ************************
*Commit: commit 15c925c4412d993a12e91a2a6c0168977402efec 1403127642 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.junit.Assert.assertTrue(Z)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getSimpleName()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: java.lang.Class.getClassLoader()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: skipped ************************
*Commit: commit e12bb77074e3e8fde738ff5c4ac359e106978584 1403459172 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.Stopwatch.stopping()
org.junit.rules.Stopwatch.getNanos()
skipped
Chamada: org.junit.rules.Stopwatch.stopping()
Situação: Primeira Chamada
Chamada: org.junit.rules.Stopwatch.getNanos()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: skipped
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.Stopwatch.getNanos()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestWatcherTest.internalViolatedAssumption() ************************
*Commit: commit e12bb77074e3e8fde738ff5c4ac359e106978584 1403459172 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.StringBuilder.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00239464
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.String)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: org.junit.experimental.theories.internal.ParameterizedAssertionError.hashCode() ************************
*Commit: commit a1f68c6d9ad0fd5ce0ca2946fa66a1a059b4633f 1403549192 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.toString()
java.lang.String.hashCode()
Chamada: java.lang.Throwable.toString()
Situação: Primeira Chamada
Chamada: java.lang.String.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.hamcrest.CoreMatchers.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.theories.internal.ParameterizedAssertionErrorTest.sameHashCodeWhenEquals(java.lang.Throwable, java.lang.String, [Ljava.lang.Object;) ************************
*Commit: commit a1f68c6d9ad0fd5ce0ca2946fa66a1a059b4633f 1403549192 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(org.junit.experimental.theories.internal.ParameterizedAssertionError)
org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(org.junit.experimental.theories.internal.ParameterizedAssertionError)
Situação: Primeira Chamada
Chamada: org.junit.Assume.assumeThat(org.junit.experimental.theories.internal.ParameterizedAssertionError, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7499986950008091
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7666657386656274
Suporte: 0.0110153
F-Measure Suporte e Confiança: 0.022
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: java.lang.Object.hashCode()
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.4
Corretude: 0.4
F-Measure: 0.4000000000000001
************************ Método Avaliado: org.junit.rules.Stopwatch$InternalWatcher.succeeded(org.junit.runner.Description) ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.Stopwatch.stopping()
org.junit.rules.Stopwatch.getNanos()
org.junit.rules.Stopwatch.succeeded(J, org.junit.runner.Description)
Chamada: org.junit.rules.Stopwatch.stopping()
Situação: Primeira Chamada
Chamada: org.junit.rules.Stopwatch.getNanos()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.rules.Stopwatch.succeeded(J, org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.Stopwatch.getNanos()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.rules.Stopwatch$InternalWatcher.failed(java.lang.Throwable, org.junit.runner.Description) ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.Stopwatch.stopping()
org.junit.rules.Stopwatch.getNanos()
org.junit.rules.Stopwatch.failed(J, java.lang.Throwable, org.junit.runner.Description)
Chamada: org.junit.rules.Stopwatch.stopping()
Situação: Primeira Chamada
Chamada: org.junit.rules.Stopwatch.getNanos()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.rules.Stopwatch.failed(J, java.lang.Throwable, org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.rules.Stopwatch.getNanos()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.rules.StopwatchTest.wrongDuration() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181795173557066
Suporte: 0.012931
F-Measure Suporte e Confiança: 0.026
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.StopwatchTest$WrongDurationTest.duration() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Primeira Chamada
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Manual
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.rules.StopwatchTest.failed() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.62499855000174
Suporte: 0.0215517
F-Measure Suporte e Confiança: 0.042
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.hamcrest.core.Is.is(java.lang.String)
Útil
Método: org.hamcrest.core.Is.is(java.lang.Long)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Inútil
Método: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: junit.framework.TestCase.assertEquals(I, I)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertTrue(java.lang.String, Z)
Útil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.5
F-Measure: 0.56
************************ Método Avaliado: org.junit.rules.StopwatchTest.runTest(java.lang.Class) ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.425531328855244
Suporte: 0.00957854
F-Measure Suporte e Confiança: 0.019
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: org.junit.rules.StopwatchTest.skipped() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.62499855000174
Suporte: 0.0215517
F-Measure Suporte e Confiança: 0.042
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.hamcrest.core.Is.is(java.lang.String)
Útil
Método: org.hamcrest.core.Is.is(java.lang.Long)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Inútil
Método: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: junit.framework.TestCase.assertEquals(I, I)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertTrue(java.lang.String, Z)
Útil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.5
F-Measure: 0.56
************************ Método Avaliado: org.junit.rules.StopwatchTest.succeeded() ************************
*Commit: commit 7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7 1403556712 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.hamcrest.core.Is.is(java.lang.Long)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.62499855000174
Suporte: 0.0215517
F-Measure Suporte e Confiança: 0.042
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(org.junit.rules.StopwatchTest$TestStatus)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.Assert.assertTrue(java.lang.String, Z)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.hamcrest.core.Is.is(java.lang.Long)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00143678
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.hamcrest.core.Is.is(java.lang.String)
Útil
Método: org.hamcrest.core.Is.is(java.lang.Long)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.hamcrest.core.Is.is(org.junit.tests.experimental.rules.StopwatchTest$TestStatus)
Inútil
Método: org.junit.Assert.assertThat(org.junit.tests.experimental.rules.StopwatchTest$TestStatus, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: junit.framework.TestCase.assertEquals(I, I)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertTrue(java.lang.String, Z)
Útil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.5
F-Measure: 0.56
************************ Método Avaliado: org.junit.rules.StopwatchTest.runtimeDuringTestShouldReturnTimeSinceStart() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181795173557066
Suporte: 0.012931
F-Measure Suporte e Confiança: 0.026
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.StopwatchTest$DurationDuringTestTest.duration() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Primeira Chamada
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Manual
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.rules.StopwatchTest.runtimeAfterTestShouldReturnRunDuration() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.StopwatchTest.runTest(java.lang.Class)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.rules.StopwatchTest.runTest(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181795173557066
Suporte: 0.012931
F-Measure Suporte e Confiança: 0.026
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.StopwatchTest$DurationAfterTestTest.afterStopwatchRule() ************************
*Commit: commit 0ffc637a33164dd219a6fbbb7210db84779c700a 1403556763 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
org.junit.rules.StopwatchTest.simulateTimePassing(J)
org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.rules.StopwatchTest.simulateTimePassing(J)
Situação: Manual
Chamada: org.junit.rules.Stopwatch.runtime(java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.20714304889798327
Suporte: 0.0138889
F-Measure Suporte e Confiança: 0.027
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.runner.JUnitCommandLineParseResult.applyFilterSpecs(org.junit.runner.Request) ************************
*Commit: commit a75370887a71a09b3e5a12dec252513e80228e6b 1404323124 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createFilterFromFilterSpec
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCommandLineParseResult.errorReport(java.lang.Throwable)
Chamada: createFilterFromFilterSpec
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCommandLineParseResult.errorReport(java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.runner.Result.getRunCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.FilterFactoriesTest.shouldPassOnDescriptionToFilterFactory() ************************
*Commit: commit a75370887a71a09b3e5a12dec252513e80228e6b 1404323124 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.FilterFactoriesTest.createSuiteRequest()
org.junit.runner.Request.getRunner()
org.junit.runner.Runner.getDescription()
java.lang.Class.getName()
createFilterFromFilterSpec
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
org.junit.runner.FilterFactoriesTest$DummyFilter.getTopLevelDescription()
org.hamcrest.CoreMatchers.is(org.junit.runner.Description)
org.hamcrest.MatcherAssert.assertThat(org.junit.runner.Description, org.hamcrest.Matcher)
Chamada: org.junit.runner.FilterFactoriesTest.createSuiteRequest()
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.33333356533359315
Suporte: 0.00478927
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: createFilterFromFilterSpec
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)
Situação: Manual
Chamada: org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.FilterFactoriesTest$DummyFilter.getTopLevelDescription()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(org.junit.runner.Description)
Situação: Manual
Chamada: org.hamcrest.MatcherAssert.assertThat(org.junit.runner.Description, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Útil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Método: java.lang.Class.getName()
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
Inútil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.1111111111111111
F-Measure: 0.1111111111111111
************************ Método Avaliado: org.junit.rules.DisableOnDebug.isDebugging(java.util.List) ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPreJava5DebugArgumentsInReverseOrderTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPostJava5DebugArgumentsTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithoutDebugFlagsTestShouldPass() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.rules.DisableOnDebugTest.whenRunWithPreJava5DebugArgumentsTestShouldFail() ************************
*Commit: commit 0d84dce24d6125048f22e2bf9e2e8b208ade53c8 1406228318 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(java.lang.String, J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2500003480003898
Suporte: 0.00718391
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3666671306671863
Suporte: 0.0105364
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertEquals(java.lang.String, J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getRunCount()
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
